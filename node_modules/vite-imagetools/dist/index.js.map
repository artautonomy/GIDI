{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["import { createHash } from 'node:crypto'\nimport type { ImageConfig } from 'imagetools-core'\n\nexport const createBasePath = (base?: string) => {\n  return (base?.replace(/\\/$/, '') || '') + '/@imagetools/'\n}\n\nexport function generateImageID(config: ImageConfig, imageHash: string) {\n  return hash([JSON.stringify(config), imageHash])\n}\n\nexport function hash(keyParts: Array<string | NodeJS.ArrayBufferView>) {\n  let hash = createHash('sha1')\n  for (const keyPart of keyParts) {\n    hash = hash.update(keyPart)\n  }\n  return hash.digest('hex')\n}\n","import { basename, extname } from 'node:path'\nimport { statSync, mkdirSync, createReadStream } from 'node:fs'\nimport { writeFile, readFile, opendir, stat, rm } from 'node:fs/promises'\nimport type { Plugin, ResolvedConfig } from 'vite'\nimport {\n  applyTransforms,\n  builtins,\n  builtinOutputFormats,\n  extractEntries,\n  generateTransforms,\n  getMetadata,\n  parseURL,\n  urlFormat,\n  resolveConfigs,\n  type Logger,\n  type OutputFormat,\n  type ProcessedImageMetadata,\n  type ImageMetadata\n} from 'imagetools-core'\nimport { createFilter, dataToEsm } from '@rollup/pluginutils'\nimport sharp, { type Metadata, type Sharp } from 'sharp'\nimport { createBasePath, generateImageID, hash } from './utils.js'\nimport type { VitePluginOptions } from './types.js'\n\nexport type {\n  Include,\n  Exclude,\n  DefaultDirectives,\n  ExtendTransforms,\n  ExtendOutputFormats,\n  ResolveConfigs,\n  VitePluginOptions\n} from './types.js'\n\nconst defaultOptions: VitePluginOptions = {\n  include: /^[^?]+\\.(avif|gif|heif|jpeg|jpg|png|tiff|webp)(\\?.*)?$/,\n  exclude: 'public/**/*',\n  removeMetadata: true\n}\n\nexport * from 'imagetools-core'\n\nexport function imagetools(userOptions: Partial<VitePluginOptions> = {}): Plugin {\n  const pluginOptions: VitePluginOptions = { ...defaultOptions, ...userOptions }\n\n  const cacheOptions = {\n    enabled: pluginOptions.cache?.enabled ?? true,\n    dir: pluginOptions.cache?.dir ?? './node_modules/.cache/imagetools',\n    retention: pluginOptions.cache?.retention\n  }\n  mkdirSync(`${cacheOptions.dir}`, { recursive: true })\n\n  const filter = createFilter(pluginOptions.include, pluginOptions.exclude)\n\n  const transformFactories = pluginOptions.extendTransforms ? pluginOptions.extendTransforms(builtins) : builtins\n\n  const outputFormats: Record<string, OutputFormat> = pluginOptions.extendOutputFormats\n    ? pluginOptions.extendOutputFormats(builtinOutputFormats)\n    : builtinOutputFormats\n\n  let viteConfig: ResolvedConfig\n  let basePath: string\n\n  const generatedImages = new Map<string, { image?: Sharp; metadata: ImageMetadata }>()\n\n  return {\n    name: 'imagetools',\n    enforce: 'pre',\n    configResolved(cfg) {\n      viteConfig = cfg\n      basePath = createBasePath(viteConfig.base)\n    },\n    async load(id) {\n      if (!filter(id)) return null\n\n      const srcURL = parseURL(id)\n      const pathname = decodeURIComponent(srcURL.pathname)\n\n      // lazy loaders so that we can load the metadata in defaultDirectives if needed\n      // but if there are no directives then we can just skip loading\n      let lazyImg: Sharp\n      const lazyLoadImage = () => {\n        if (lazyImg) return lazyImg\n        return (lazyImg = sharp(pathname))\n      }\n\n      let lazyMetadata: Metadata\n      const lazyLoadMetadata = async () => {\n        if (lazyMetadata) return lazyMetadata\n        return (lazyMetadata = await lazyLoadImage().metadata())\n      }\n\n      const defaultDirectives =\n        typeof pluginOptions.defaultDirectives === 'function'\n          ? await pluginOptions.defaultDirectives(srcURL, lazyLoadMetadata)\n          : pluginOptions.defaultDirectives || new URLSearchParams()\n      const directives = new URLSearchParams({\n        ...Object.fromEntries(defaultDirectives),\n        ...Object.fromEntries(srcURL.searchParams)\n      })\n\n      if (!directives.toString()) return null\n\n      const img = lazyLoadImage()\n      const widthParam = directives.get('w')\n      const heightParam = directives.get('h')\n      if (directives.get('allowUpscale') !== 'true' && (widthParam || heightParam)) {\n        const metadata = await lazyLoadMetadata()\n        const clamp = (s: string, intrinsic: number) =>\n          [...new Set(s.split(';').map((d): string => (parseInt(d) <= intrinsic ? d : intrinsic.toString())))].join(';')\n\n        if (widthParam) {\n          const intrinsicWidth = metadata.width || 0\n          directives.set('w', clamp(widthParam, intrinsicWidth))\n        }\n\n        if (heightParam) {\n          const intrinsicHeight = metadata.height || 0\n          directives.set('h', clamp(heightParam, intrinsicHeight))\n        }\n      }\n\n      const parameters = extractEntries(directives)\n      const imageConfigs =\n        pluginOptions.resolveConfigs?.(parameters, outputFormats) ?? resolveConfigs(parameters, outputFormats)\n\n      const outputMetadatas: Array<ProcessedImageMetadata> = []\n\n      const logger: Logger = {\n        info: (msg) => viteConfig.logger.info(msg),\n        warn: (msg) => this.warn(msg),\n        error: (msg) => this.error(msg)\n      }\n\n      const imageBuffer = await img.clone().toBuffer()\n\n      const imageHash = hash([imageBuffer])\n      for (const config of imageConfigs) {\n        const id = generateImageID(config, imageHash)\n        let image: Sharp | undefined\n        let metadata: ImageMetadata\n\n        if (cacheOptions.enabled && (statSync(`${cacheOptions.dir}/${id}`, { throwIfNoEntry: false })?.size ?? 0) > 0) {\n          metadata = (await sharp(`${cacheOptions.dir}/${id}`).metadata()) as ImageMetadata\n          // we set the format on the metadata during transformation using the format directive\n          // when restoring from the cache, we use sharp to read it from the image and that results in a different value for avif images\n          // see https://github.com/lovell/sharp/issues/2504 and https://github.com/lovell/sharp/issues/3746\n          if (config.format === 'avif' && metadata.format === 'heif' && metadata.compression === 'av1')\n            metadata.format = 'avif'\n        } else {\n          const { transforms } = generateTransforms(config, transformFactories, srcURL.searchParams, logger)\n          const res = await applyTransforms(transforms, img, pluginOptions.removeMetadata)\n          metadata = res.metadata\n          if (cacheOptions.enabled) {\n            await writeFile(`${cacheOptions.dir}/${id}`, await res.image.toBuffer())\n          } else {\n            image = res.image\n          }\n        }\n\n        generatedImages.set(id, { image, metadata })\n\n        if (directives.has('inline')) {\n          metadata.src = `data:image/${metadata.format};base64,${(image\n            ? await image.toBuffer()\n            : await readFile(`${cacheOptions.dir}/${id}`)\n          ).toString('base64')}`\n        } else if (viteConfig.command === 'serve') {\n          metadata.src = (viteConfig?.server?.origin ?? '') + basePath + id\n        } else {\n          const fileHandle = this.emitFile({\n            name: basename(pathname, extname(pathname)) + `.${metadata.format}`,\n            source: image ? await image.toBuffer() : await readFile(`${cacheOptions.dir}/${id}`),\n            type: 'asset'\n          })\n\n          metadata.src = `__VITE_ASSET__${fileHandle}__`\n        }\n\n        metadata.image = image\n\n        outputMetadatas.push(metadata as ProcessedImageMetadata)\n      }\n\n      let outputFormat = urlFormat()\n      const asParam = directives.get('as')?.split(':')\n      const as = asParam ? asParam[0] : undefined\n      for (const [key, format] of Object.entries(outputFormats)) {\n        if (as === key) {\n          outputFormat = format(asParam && asParam[1] ? asParam[1].split(';') : undefined)\n          break\n        }\n      }\n\n      return dataToEsm(await outputFormat(outputMetadatas), {\n        namedExports: pluginOptions.namedExports ?? viteConfig.json?.namedExports ?? true,\n        compact: !!viteConfig.build.minify ?? false,\n        preferConst: true\n      })\n    },\n\n    configureServer(server) {\n      server.middlewares.use((req, res, next) => {\n        if (req.url?.startsWith(basePath)) {\n          const [, id] = req.url.split(basePath)\n\n          const { image, metadata } = generatedImages.get(id) ?? {}\n\n          if (!metadata)\n            throw new Error(`vite-imagetools cannot find image with id \"${id}\" this is likely an internal error`)\n\n          if (!image) {\n            res.setHeader('Content-Type', `image/${metadata.format}`)\n            return createReadStream(`${cacheOptions.dir}/${id}`).pipe(res)\n          }\n\n          if (pluginOptions.removeMetadata === false) {\n            image.withMetadata()\n          }\n\n          res.setHeader('Content-Type', `image/${getMetadata(image, 'format')}`)\n          return image.clone().pipe(res)\n        }\n\n        next()\n      })\n    },\n\n    async buildEnd(error) {\n      if (!error && cacheOptions.enabled && cacheOptions.retention !== undefined && viteConfig.command !== 'serve') {\n        const dir = await opendir(cacheOptions.dir)\n\n        for await (const dirent of dir) {\n          if (dirent.isFile()) {\n            if (generatedImages.has(dirent.name)) continue\n\n            const imagePath = `${cacheOptions.dir}/${dirent.name}`\n            const stats = await stat(imagePath)\n\n            if (Date.now() - stats.mtimeMs > cacheOptions.retention * 1000) {\n              console.debug(`deleting stale cached image ${dirent.name}`)\n              await rm(imagePath)\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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"}