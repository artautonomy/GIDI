import { currentWritable, useThrelteUserContext } from '@threlte/core';
import { derived } from 'svelte/store';
const createPortalContext = () => {
    const ctx = {
        portals: currentWritable(new Map()),
        addPortal(object, id) {
            ctx.portals.update((portals) => {
                if (portals.has(id)) {
                    console.warn(`Portal with id ${id} already exists. Skipping portal creation.`);
                }
                else {
                    portals.set(id, object);
                }
                return portals;
            });
        },
        removePortal(id) {
            ctx.portals.update((portals) => {
                if (!portals.has(id)) {
                    console.warn(`Portal with id ${id} does not exist. Skipping portal removal.`);
                }
                else {
                    portals.delete(id);
                }
                return portals;
            });
        },
        getPortal(id) {
            return derived(ctx.portals, (portals) => portals.get(id));
        },
        hasPortal(id) {
            return ctx.portals.current.has(id);
        }
    };
    return ctx;
};
export const usePortalContext = () => {
    return useThrelteUserContext('threlte-portals', createPortalContext());
};
