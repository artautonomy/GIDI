import { getContext, onMount, setContext } from 'svelte';
import { currentWritable, toCurrentReadable } from '../../utilities';
export const createCanvasContext = (options) => {
    const wrapperRect = options.wrapper.getBoundingClientRect();
    let lastWidth = wrapperRect.width;
    let lastHeight = wrapperRect.height;
    const size = currentWritable({ width: wrapperRect.width, height: wrapperRect.height });
    onMount(() => {
        const resizeObserver = new ResizeObserver((entries) => {
            for (const entry of entries) {
                const { width, height } = entry.contentRect;
                if (width === lastWidth && height === lastHeight)
                    return;
                lastWidth = width;
                lastHeight = height;
                size.set({ width, height });
            }
        });
        resizeObserver.observe(options.wrapper);
        return () => {
            resizeObserver.disconnect();
        };
    });
    const context = {
        wrapper: options.wrapper,
        canvas: options.canvas,
        size: toCurrentReadable(size)
    };
    setContext('threlte-canvas-context', context);
    return context;
};
export const useCanvas = () => {
    const context = getContext('threlte-canvas-context');
    if (!context) {
        throw new Error('useCanvas can only be used in a child component to <Canvas>.');
    }
    return context;
};
