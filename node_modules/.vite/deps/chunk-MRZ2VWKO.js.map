{
  "version": 3,
  "sources": ["../../svelte/src/internal/client/dev/assign.js", "../../svelte/src/internal/client/dev/css.js", "../../svelte/src/internal/client/dev/elements.js", "../../svelte/src/internal/client/dev/hmr.js", "../../svelte/src/internal/client/dev/legacy.js", "../../svelte/src/internal/client/dev/inspect.js", "../../svelte/src/internal/client/dom/blocks/await.js", "../../svelte/src/internal/client/dom/blocks/if.js", "../../svelte/src/internal/client/dom/blocks/key.js", "../../svelte/src/internal/client/dom/blocks/css-props.js", "../../svelte/src/internal/client/dom/blocks/each.js", "../../svelte/src/internal/client/dom/blocks/html.js", "../../svelte/src/internal/client/dom/blocks/slot.js", "../../svelte/src/internal/client/dom/blocks/snippet.js", "../../svelte/src/internal/client/dom/blocks/svelte-component.js", "../../svelte/src/internal/client/dom/blocks/svelte-element.js", "../../svelte/src/internal/client/dom/css.js", "../../svelte/src/internal/client/dom/elements/actions.js", "../../svelte/src/escaping.js", "../../svelte/src/internal/shared/attributes.js", "../../svelte/src/internal/client/dom/elements/attributes.js", "../../svelte/src/internal/client/dom/elements/class.js", "../../svelte/src/internal/client/dom/elements/style.js", "../../svelte/src/internal/client/timing.js", "../../svelte/src/internal/client/loop.js", "../../svelte/src/internal/client/dom/elements/transitions.js", "../../svelte/src/internal/client/dom/elements/bindings/document.js", "../../svelte/src/internal/client/dom/elements/bindings/input.js", "../../svelte/src/internal/client/dom/elements/bindings/media.js", "../../svelte/src/internal/client/dom/elements/bindings/navigator.js", "../../svelte/src/internal/client/dom/elements/bindings/props.js", "../../svelte/src/internal/client/dom/elements/bindings/select.js", "../../svelte/src/internal/client/dom/elements/bindings/size.js", "../../svelte/src/internal/client/dom/elements/bindings/this.js", "../../svelte/src/internal/client/dom/elements/bindings/universal.js", "../../svelte/src/internal/client/dom/elements/bindings/window.js", "../../svelte/src/internal/client/dom/legacy/lifecycle.js", "../../svelte/src/internal/client/dom/legacy/misc.js", "../../svelte/src/store/utils.js", "../../svelte/src/internal/client/reactivity/store.js", "../../svelte/src/internal/client/reactivity/props.js", "../../svelte/src/internal/client/dom/blocks/boundary.js", "../../svelte/src/internal/client/validate.js", "../../svelte/src/internal/client/dom/elements/custom-element.js", "../../svelte/src/internal/shared/validate.js", "../../svelte/src/internal/client/dev/console-log.js", "../../svelte/src/index-client.js"],
  "sourcesContent": ["import { sanitize_location } from '../../../utils.js';\r\nimport { untrack } from '../runtime.js';\r\nimport * as w from '../warnings.js';\r\n\r\n/**\r\n *\r\n * @param {any} a\r\n * @param {any} b\r\n * @param {string} property\r\n * @param {string} location\r\n */\r\nfunction compare(a, b, property, location) {\r\n\tif (a !== b) {\r\n\t\tw.assignment_value_stale(property, /** @type {string} */ (sanitize_location(location)));\r\n\t}\r\n\r\n\treturn a;\r\n}\r\n\r\n/**\r\n * @param {any} object\r\n * @param {string} property\r\n * @param {any} value\r\n * @param {string} location\r\n */\r\nexport function assign(object, property, value, location) {\r\n\treturn compare(\r\n\t\t(object[property] = value),\r\n\t\tuntrack(() => object[property]),\r\n\t\tproperty,\r\n\t\tlocation\r\n\t);\r\n}\r\n\r\n/**\r\n * @param {any} object\r\n * @param {string} property\r\n * @param {any} value\r\n * @param {string} location\r\n */\r\nexport function assign_and(object, property, value, location) {\r\n\treturn compare(\r\n\t\t(object[property] &&= value),\r\n\t\tuntrack(() => object[property]),\r\n\t\tproperty,\r\n\t\tlocation\r\n\t);\r\n}\r\n\r\n/**\r\n * @param {any} object\r\n * @param {string} property\r\n * @param {any} value\r\n * @param {string} location\r\n */\r\nexport function assign_or(object, property, value, location) {\r\n\treturn compare(\r\n\t\t(object[property] ||= value),\r\n\t\tuntrack(() => object[property]),\r\n\t\tproperty,\r\n\t\tlocation\r\n\t);\r\n}\r\n\r\n/**\r\n * @param {any} object\r\n * @param {string} property\r\n * @param {any} value\r\n * @param {string} location\r\n */\r\nexport function assign_nullish(object, property, value, location) {\r\n\treturn compare(\r\n\t\t(object[property] ??= value),\r\n\t\tuntrack(() => object[property]),\r\n\t\tproperty,\r\n\t\tlocation\r\n\t);\r\n}\r\n", "/** @type {Map<String, Set<HTMLStyleElement>>} */\r\nvar all_styles = new Map();\r\n\r\n/**\r\n * @param {String} hash\r\n * @param {HTMLStyleElement} style\r\n */\r\nexport function register_style(hash, style) {\r\n\tvar styles = all_styles.get(hash);\r\n\r\n\tif (!styles) {\r\n\t\tstyles = new Set();\r\n\t\tall_styles.set(hash, styles);\r\n\t}\r\n\r\n\tstyles.add(style);\r\n}\r\n\r\n/**\r\n * @param {String} hash\r\n */\r\nexport function cleanup_styles(hash) {\r\n\tvar styles = all_styles.get(hash);\r\n\tif (!styles) return;\r\n\r\n\tfor (const style of styles) {\r\n\t\tstyle.remove();\r\n\t}\r\n\r\n\tall_styles.delete(hash);\r\n}\r\n", "/** @import { SourceLocation } from '#shared' */\r\nimport { HYDRATION_END, HYDRATION_START, HYDRATION_START_ELSE } from '../../../constants.js';\r\nimport { hydrating } from '../dom/hydration.js';\r\n\r\n/**\r\n * @param {any} fn\r\n * @param {string} filename\r\n * @param {SourceLocation[]} locations\r\n * @returns {any}\r\n */\r\nexport function add_locations(fn, filename, locations) {\r\n\treturn (/** @type {any[]} */ ...args) => {\r\n\t\tconst dom = fn(...args);\r\n\r\n\t\tvar node = hydrating ? dom : dom.nodeType === 11 ? dom.firstChild : dom;\r\n\t\tassign_locations(node, filename, locations);\r\n\r\n\t\treturn dom;\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {string} filename\r\n * @param {SourceLocation} location\r\n */\r\nfunction assign_location(element, filename, location) {\r\n\t// @ts-expect-error\r\n\telement.__svelte_meta = {\r\n\t\tloc: { file: filename, line: location[0], column: location[1] }\r\n\t};\r\n\r\n\tif (location[2]) {\r\n\t\tassign_locations(element.firstChild, filename, location[2]);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Node | null} node\r\n * @param {string} filename\r\n * @param {SourceLocation[]} locations\r\n */\r\nfunction assign_locations(node, filename, locations) {\r\n\tvar i = 0;\r\n\tvar depth = 0;\r\n\r\n\twhile (node && i < locations.length) {\r\n\t\tif (hydrating && node.nodeType === 8) {\r\n\t\t\tvar comment = /** @type {Comment} */ (node);\r\n\t\t\tif (comment.data === HYDRATION_START || comment.data === HYDRATION_START_ELSE) depth += 1;\r\n\t\t\telse if (comment.data[0] === HYDRATION_END) depth -= 1;\r\n\t\t}\r\n\r\n\t\tif (depth === 0 && node.nodeType === 1) {\r\n\t\t\tassign_location(/** @type {Element} */ (node), filename, locations[i++]);\r\n\t\t}\r\n\r\n\t\tnode = node.nextSibling;\r\n\t}\r\n}\r\n", "/** @import { Source, Effect, TemplateNode } from '#client' */\r\nimport { FILENAME, HMR } from '../../../constants.js';\r\nimport { EFFECT_TRANSPARENT } from '../constants.js';\r\nimport { hydrate_node, hydrating } from '../dom/hydration.js';\r\nimport { block, branch, destroy_effect } from '../reactivity/effects.js';\r\nimport { source } from '../reactivity/sources.js';\r\nimport { set_should_intro } from '../render.js';\r\nimport { get } from '../runtime.js';\r\n\r\n/**\r\n * @template {(anchor: Comment, props: any) => any} Component\r\n * @param {Component} original\r\n * @param {() => Source<Component>} get_source\r\n */\r\nexport function hmr(original, get_source) {\r\n\t/**\r\n\t * @param {TemplateNode} anchor\r\n\t * @param {any} props\r\n\t */\r\n\tfunction wrapper(anchor, props) {\r\n\t\tlet instance = {};\r\n\r\n\t\t/** @type {Effect} */\r\n\t\tlet effect;\r\n\r\n\t\tlet ran = false;\r\n\r\n\t\tblock(() => {\r\n\t\t\tconst source = get_source();\r\n\t\t\tconst component = get(source);\r\n\r\n\t\t\tif (effect) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tfor (var k in instance) delete instance[k];\r\n\t\t\t\tdestroy_effect(effect);\r\n\t\t\t}\r\n\r\n\t\t\teffect = branch(() => {\r\n\t\t\t\t// when the component is invalidated, replace it without transitions\r\n\t\t\t\tif (ran) set_should_intro(false);\r\n\r\n\t\t\t\t// preserve getters/setters\r\n\t\t\t\tObject.defineProperties(\r\n\t\t\t\t\tinstance,\r\n\t\t\t\t\tObject.getOwnPropertyDescriptors(\r\n\t\t\t\t\t\t// @ts-expect-error\r\n\t\t\t\t\t\tnew.target ? new component(anchor, props) : component(anchor, props)\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (ran) set_should_intro(true);\r\n\t\t\t});\r\n\t\t}, EFFECT_TRANSPARENT);\r\n\r\n\t\tran = true;\r\n\r\n\t\tif (hydrating) {\r\n\t\t\tanchor = hydrate_node;\r\n\t\t}\r\n\r\n\t\treturn instance;\r\n\t}\r\n\r\n\t// @ts-expect-error\r\n\twrapper[FILENAME] = original[FILENAME];\r\n\r\n\t// @ts-expect-error\r\n\twrapper[HMR] = {\r\n\t\t// When we accept an update, we set the original source to the new component\r\n\t\toriginal,\r\n\t\t// The `get_source` parameter reads `wrapper[HMR].source`, but in the `accept`\r\n\t\t// function we always replace it with `previous[HMR].source`, which in practice\r\n\t\t// means we only ever update the original\r\n\t\tsource: source(original)\r\n\t};\r\n\r\n\treturn wrapper;\r\n}\r\n", "import * as e from '../errors.js';\r\nimport { component_context } from '../runtime.js';\r\nimport { FILENAME } from '../../../constants.js';\r\nimport { get_component } from './ownership.js';\r\n\r\n/** @param {Function & { [FILENAME]: string }} target */\r\nexport function check_target(target) {\r\n\tif (target) {\r\n\t\te.component_api_invalid_new(target[FILENAME] ?? 'a component', target.name);\r\n\t}\r\n}\r\n\r\nexport function legacy_api() {\r\n\tconst component = component_context?.function;\r\n\r\n\t/** @param {string} method */\r\n\tfunction error(method) {\r\n\t\t// @ts-expect-error\r\n\t\tconst parent = get_component()?.[FILENAME] ?? 'Something';\r\n\t\te.component_api_changed(parent, method, component[FILENAME]);\r\n\t}\r\n\r\n\treturn {\r\n\t\t$destroy: () => error('$destroy()'),\r\n\t\t$on: () => error('$on(...)'),\r\n\t\t$set: () => error('$set(...)')\r\n\t};\r\n}\r\n", "import { UNINITIALIZED } from '../../../constants.js';\r\nimport { snapshot } from '../../shared/clone.js';\r\nimport { inspect_effect, validate_effect } from '../reactivity/effects.js';\r\n\r\n/**\r\n * @param {() => any[]} get_value\r\n * @param {Function} [inspector]\r\n */\r\n// eslint-disable-next-line no-console\r\nexport function inspect(get_value, inspector = console.log) {\r\n\tvalidate_effect('$inspect');\r\n\r\n\tlet initial = true;\r\n\r\n\tinspect_effect(() => {\r\n\t\t/** @type {any} */\r\n\t\tvar value = UNINITIALIZED;\r\n\r\n\t\t// Capturing the value might result in an exception due to the inspect effect being\r\n\t\t// sync and thus operating on stale data. In the case we encounter an exception we\r\n\t\t// can bail-out of reporting the value. Instead we simply console.error the error\r\n\t\t// so at least it's known that an error occured, but we don't stop execution\r\n\t\ttry {\r\n\t\t\tvalue = get_value();\r\n\t\t} catch (error) {\r\n\t\t\t// eslint-disable-next-line no-console\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\r\n\t\tif (value !== UNINITIALIZED) {\r\n\t\t\tinspector(initial ? 'init' : 'update', ...snapshot(value, true));\r\n\t\t}\r\n\r\n\t\tinitial = false;\r\n\t});\r\n}\r\n", "/** @import { Effect, Source, TemplateNode } from '#client' */\r\nimport { DEV } from 'esm-env';\r\nimport { is_promise } from '../../../shared/utils.js';\r\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\r\nimport { internal_set, mutable_source, source } from '../../reactivity/sources.js';\r\nimport {\r\n\tcomponent_context,\r\n\tflush_sync,\r\n\tis_runes,\r\n\tset_active_effect,\r\n\tset_active_reaction,\r\n\tset_component_context,\r\n\tset_dev_current_component_function\r\n} from '../../runtime.js';\r\nimport { hydrate_next, hydrate_node, hydrating } from '../hydration.js';\r\nimport { queue_micro_task } from '../task.js';\r\nimport { UNINITIALIZED } from '../../../../constants.js';\r\n\r\nconst PENDING = 0;\r\nconst THEN = 1;\r\nconst CATCH = 2;\r\n\r\n/**\r\n * @template V\r\n * @param {TemplateNode} node\r\n * @param {(() => Promise<V>)} get_input\r\n * @param {null | ((anchor: Node) => void)} pending_fn\r\n * @param {null | ((anchor: Node, value: Source<V>) => void)} then_fn\r\n * @param {null | ((anchor: Node, error: unknown) => void)} catch_fn\r\n * @returns {void}\r\n */\r\nexport function await_block(node, get_input, pending_fn, then_fn, catch_fn) {\r\n\tif (hydrating) {\r\n\t\thydrate_next();\r\n\t}\r\n\r\n\tvar anchor = node;\r\n\tvar runes = is_runes();\r\n\tvar active_component_context = component_context;\r\n\r\n\t/** @type {any} */\r\n\tvar component_function = DEV ? component_context?.function : null;\r\n\r\n\t/** @type {V | Promise<V> | typeof UNINITIALIZED} */\r\n\tvar input = UNINITIALIZED;\r\n\r\n\t/** @type {Effect | null} */\r\n\tvar pending_effect;\r\n\r\n\t/** @type {Effect | null} */\r\n\tvar then_effect;\r\n\r\n\t/** @type {Effect | null} */\r\n\tvar catch_effect;\r\n\r\n\tvar input_source = (runes ? source : mutable_source)(/** @type {V} */ (undefined));\r\n\tvar error_source = (runes ? source : mutable_source)(undefined);\r\n\tvar resolved = false;\r\n\r\n\t/**\r\n\t * @param {PENDING | THEN | CATCH} state\r\n\t * @param {boolean} restore\r\n\t */\r\n\tfunction update(state, restore) {\r\n\t\tresolved = true;\r\n\r\n\t\tif (restore) {\r\n\t\t\tset_active_effect(effect);\r\n\t\t\tset_active_reaction(effect); // TODO do we need both?\r\n\t\t\tset_component_context(active_component_context);\r\n\t\t\tif (DEV) set_dev_current_component_function(component_function);\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tif (state === PENDING && pending_fn) {\r\n\t\t\t\tif (pending_effect) resume_effect(pending_effect);\r\n\t\t\t\telse pending_effect = branch(() => pending_fn(anchor));\r\n\t\t\t}\r\n\r\n\t\t\tif (state === THEN && then_fn) {\r\n\t\t\t\tif (then_effect) resume_effect(then_effect);\r\n\t\t\t\telse then_effect = branch(() => then_fn(anchor, input_source));\r\n\t\t\t}\r\n\r\n\t\t\tif (state === CATCH && catch_fn) {\r\n\t\t\t\tif (catch_effect) resume_effect(catch_effect);\r\n\t\t\t\telse catch_effect = branch(() => catch_fn(anchor, error_source));\r\n\t\t\t}\r\n\r\n\t\t\tif (state !== PENDING && pending_effect) {\r\n\t\t\t\tpause_effect(pending_effect, () => (pending_effect = null));\r\n\t\t\t}\r\n\r\n\t\t\tif (state !== THEN && then_effect) {\r\n\t\t\t\tpause_effect(then_effect, () => (then_effect = null));\r\n\t\t\t}\r\n\r\n\t\t\tif (state !== CATCH && catch_effect) {\r\n\t\t\t\tpause_effect(catch_effect, () => (catch_effect = null));\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tif (restore) {\r\n\t\t\t\tif (DEV) set_dev_current_component_function(null);\r\n\t\t\t\tset_component_context(null);\r\n\t\t\t\tset_active_reaction(null);\r\n\t\t\t\tset_active_effect(null);\r\n\r\n\t\t\t\t// without this, the DOM does not update until two ticks after the promise\r\n\t\t\t\t// resolves, which is unexpected behaviour (and somewhat irksome to test)\r\n\t\t\t\tflush_sync();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar effect = block(() => {\r\n\t\tif (input === (input = get_input())) return;\r\n\r\n\t\tif (is_promise(input)) {\r\n\t\t\tvar promise = input;\r\n\r\n\t\t\tresolved = false;\r\n\r\n\t\t\tpromise.then(\r\n\t\t\t\t(value) => {\r\n\t\t\t\t\tif (promise !== input) return;\r\n\t\t\t\t\t// we technically could use `set` here since it's on the next microtick\r\n\t\t\t\t\t// but let's use internal_set for consistency and just to be safe\r\n\t\t\t\t\tinternal_set(input_source, value);\r\n\t\t\t\t\tupdate(THEN, true);\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tif (promise !== input) return;\r\n\t\t\t\t\t// we technically could use `set` here since it's on the next microtick\r\n\t\t\t\t\t// but let's use internal_set for consistency and just to be safe\r\n\t\t\t\t\tinternal_set(error_source, error);\r\n\t\t\t\t\tupdate(CATCH, true);\r\n\t\t\t\t\tif (!catch_fn) {\r\n\t\t\t\t\t\t// Rethrow the error if no catch block exists\r\n\t\t\t\t\t\tthrow error_source.v;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tif (hydrating) {\r\n\t\t\t\tif (pending_fn) {\r\n\t\t\t\t\tpending_effect = branch(() => pending_fn(anchor));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Wait a microtask before checking if we should show the pending state as\r\n\t\t\t\t// the promise might have resolved by the next microtask.\r\n\t\t\t\tqueue_micro_task(() => {\r\n\t\t\t\t\tif (!resolved) update(PENDING, true);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tinternal_set(input_source, input);\r\n\t\t\tupdate(THEN, false);\r\n\t\t}\r\n\r\n\t\t// Set the input to something else, in order to disable the promise callbacks\r\n\t\treturn () => (input = UNINITIALIZED);\r\n\t});\r\n\r\n\tif (hydrating) {\r\n\t\tanchor = hydrate_node;\r\n\t}\r\n}\r\n", "/** @import { Effect, TemplateNode } from '#client' */\r\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\r\nimport {\r\n\thydrate_next,\r\n\thydrate_node,\r\n\thydrating,\r\n\tremove_nodes,\r\n\tset_hydrate_node,\r\n\tset_hydrating\r\n} from '../hydration.js';\r\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\r\nimport { HYDRATION_START_ELSE, UNINITIALIZED } from '../../../../constants.js';\r\n\r\n/**\r\n * @param {TemplateNode} node\r\n * @param {(branch: (fn: (anchor: Node) => void, flag?: boolean) => void) => void} fn\r\n * @param {boolean} [elseif] True if this is an `{:else if ...}` block rather than an `{#if ...}`, as that affects which transitions are considered 'local'\r\n * @returns {void}\r\n */\r\nexport function if_block(node, fn, elseif = false) {\r\n\tif (hydrating) {\r\n\t\thydrate_next();\r\n\t}\r\n\r\n\tvar anchor = node;\r\n\r\n\t/** @type {Effect | null} */\r\n\tvar consequent_effect = null;\r\n\r\n\t/** @type {Effect | null} */\r\n\tvar alternate_effect = null;\r\n\r\n\t/** @type {UNINITIALIZED | boolean | null} */\r\n\tvar condition = UNINITIALIZED;\r\n\r\n\tvar flags = elseif ? EFFECT_TRANSPARENT : 0;\r\n\r\n\tvar has_branch = false;\r\n\r\n\tconst set_branch = (/** @type {(anchor: Node) => void} */ fn, flag = true) => {\r\n\t\thas_branch = true;\r\n\t\tupdate_branch(flag, fn);\r\n\t};\r\n\r\n\tconst update_branch = (\r\n\t\t/** @type {boolean | null} */ new_condition,\r\n\t\t/** @type {null | ((anchor: Node) => void)} */ fn\r\n\t) => {\r\n\t\tif (condition === (condition = new_condition)) return;\r\n\r\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\r\n\t\tlet mismatch = false;\r\n\r\n\t\tif (hydrating) {\r\n\t\t\tconst is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\r\n\r\n\t\t\tif (!!condition === is_else) {\r\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\r\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\r\n\t\t\t\tanchor = remove_nodes();\r\n\r\n\t\t\t\tset_hydrate_node(anchor);\r\n\t\t\t\tset_hydrating(false);\r\n\t\t\t\tmismatch = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (condition) {\r\n\t\t\tif (consequent_effect) {\r\n\t\t\t\tresume_effect(consequent_effect);\r\n\t\t\t} else if (fn) {\r\n\t\t\t\tconsequent_effect = branch(() => fn(anchor));\r\n\t\t\t}\r\n\r\n\t\t\tif (alternate_effect) {\r\n\t\t\t\tpause_effect(alternate_effect, () => {\r\n\t\t\t\t\talternate_effect = null;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (alternate_effect) {\r\n\t\t\t\tresume_effect(alternate_effect);\r\n\t\t\t} else if (fn) {\r\n\t\t\t\talternate_effect = branch(() => fn(anchor));\r\n\t\t\t}\r\n\r\n\t\t\tif (consequent_effect) {\r\n\t\t\t\tpause_effect(consequent_effect, () => {\r\n\t\t\t\t\tconsequent_effect = null;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (mismatch) {\r\n\t\t\t// continue in hydration mode\r\n\t\t\tset_hydrating(true);\r\n\t\t}\r\n\t};\r\n\r\n\tblock(() => {\r\n\t\thas_branch = false;\r\n\t\tfn(set_branch);\r\n\t\tif (!has_branch) {\r\n\t\t\tupdate_branch(null, null);\r\n\t\t}\r\n\t}, flags);\r\n\r\n\tif (hydrating) {\r\n\t\tanchor = hydrate_node;\r\n\t}\r\n}\r\n", "/** @import { Effect, TemplateNode } from '#client' */\r\nimport { UNINITIALIZED } from '../../../../constants.js';\r\nimport { block, branch, pause_effect } from '../../reactivity/effects.js';\r\nimport { not_equal, safe_not_equal } from '../../reactivity/equality.js';\r\nimport { is_runes } from '../../runtime.js';\r\nimport { hydrate_next, hydrate_node, hydrating } from '../hydration.js';\r\n\r\n/**\r\n * @template V\r\n * @param {TemplateNode} node\r\n * @param {() => V} get_key\r\n * @param {(anchor: Node) => TemplateNode | void} render_fn\r\n * @returns {void}\r\n */\r\nexport function key_block(node, get_key, render_fn) {\r\n\tif (hydrating) {\r\n\t\thydrate_next();\r\n\t}\r\n\r\n\tvar anchor = node;\r\n\r\n\t/** @type {V | typeof UNINITIALIZED} */\r\n\tvar key = UNINITIALIZED;\r\n\r\n\t/** @type {Effect} */\r\n\tvar effect;\r\n\r\n\tvar changed = is_runes() ? not_equal : safe_not_equal;\r\n\r\n\tblock(() => {\r\n\t\tif (changed(key, (key = get_key()))) {\r\n\t\t\tif (effect) {\r\n\t\t\t\tpause_effect(effect);\r\n\t\t\t}\r\n\r\n\t\t\teffect = branch(() => render_fn(anchor));\r\n\t\t}\r\n\t});\r\n\r\n\tif (hydrating) {\r\n\t\tanchor = hydrate_node;\r\n\t}\r\n}\r\n", "/** @import { TemplateNode } from '#client' */\r\nimport { render_effect, teardown } from '../../reactivity/effects.js';\r\nimport { hydrate_node, hydrating, set_hydrate_node } from '../hydration.js';\r\nimport { get_first_child } from '../operations.js';\r\n\r\n/**\r\n * @param {HTMLDivElement | SVGGElement} element\r\n * @param {() => Record<string, string>} get_styles\r\n * @returns {void}\r\n */\r\nexport function css_props(element, get_styles) {\r\n\tif (hydrating) {\r\n\t\tset_hydrate_node(/** @type {TemplateNode} */ (get_first_child(element)));\r\n\t}\r\n\r\n\trender_effect(() => {\r\n\t\tvar styles = get_styles();\r\n\r\n\t\tfor (var key in styles) {\r\n\t\t\tvar value = styles[key];\r\n\r\n\t\t\tif (value) {\r\n\t\t\t\telement.style.setProperty(key, value);\r\n\t\t\t} else {\r\n\t\t\t\telement.style.removeProperty(key);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tteardown(() => {\r\n\t\telement.remove();\r\n\t});\r\n}\r\n", "/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\r\nimport {\r\n\tEACH_INDEX_REACTIVE,\r\n\tEACH_IS_ANIMATED,\r\n\tEACH_IS_CONTROLLED,\r\n\tEACH_ITEM_IMMUTABLE,\r\n\tEACH_ITEM_REACTIVE,\r\n\tHYDRATION_END,\r\n\tHYDRATION_START_ELSE\r\n} from '../../../../constants.js';\r\nimport {\r\n\thydrate_next,\r\n\thydrate_node,\r\n\thydrating,\r\n\tremove_nodes,\r\n\tset_hydrate_node,\r\n\tset_hydrating\r\n} from '../hydration.js';\r\nimport {\r\n\tclear_text_content,\r\n\tcreate_text,\r\n\tget_first_child,\r\n\tget_next_sibling\r\n} from '../operations.js';\r\nimport {\r\n\tblock,\r\n\tbranch,\r\n\tdestroy_effect,\r\n\trun_out_transitions,\r\n\tpause_children,\r\n\tpause_effect,\r\n\tresume_effect\r\n} from '../../reactivity/effects.js';\r\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\r\nimport { array_from, is_array } from '../../../shared/utils.js';\r\nimport { INERT } from '../../constants.js';\r\nimport { queue_micro_task } from '../task.js';\r\nimport { active_effect, active_reaction } from '../../runtime.js';\r\nimport { DEV } from 'esm-env';\r\n\r\n/**\r\n * The row of a keyed each block that is currently updating. We track this\r\n * so that `animate:` directives have something to attach themselves to\r\n * @type {EachItem | null}\r\n */\r\nexport let current_each_item = null;\r\n\r\n/** @param {EachItem | null} item */\r\nexport function set_current_each_item(item) {\r\n\tcurrent_each_item = item;\r\n}\r\n\r\n/**\r\n * @param {any} _\r\n * @param {number} i\r\n */\r\nexport function index(_, i) {\r\n\treturn i;\r\n}\r\n\r\n/**\r\n * Pause multiple effects simultaneously, and coordinate their\r\n * subsequent destruction. Used in each blocks\r\n * @param {EachState} state\r\n * @param {EachItem[]} items\r\n * @param {null | Node} controlled_anchor\r\n * @param {Map<any, EachItem>} items_map\r\n */\r\nfunction pause_effects(state, items, controlled_anchor, items_map) {\r\n\t/** @type {TransitionManager[]} */\r\n\tvar transitions = [];\r\n\tvar length = items.length;\r\n\r\n\tfor (var i = 0; i < length; i++) {\r\n\t\tpause_children(items[i].e, transitions, true);\r\n\t}\r\n\r\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\r\n\t// If we have a controlled anchor, it means that the each block is inside a single\r\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\r\n\tif (is_controlled) {\r\n\t\tvar parent_node = /** @type {Element} */ (\r\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\r\n\t\t);\r\n\t\tclear_text_content(parent_node);\r\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\r\n\t\titems_map.clear();\r\n\t\tlink(state, items[0].prev, items[length - 1].next);\r\n\t}\r\n\r\n\trun_out_transitions(transitions, () => {\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\tvar item = items[i];\r\n\t\t\tif (!is_controlled) {\r\n\t\t\t\titems_map.delete(item.k);\r\n\t\t\t\tlink(state, item.prev, item.next);\r\n\t\t\t}\r\n\t\t\tdestroy_effect(item.e, !is_controlled);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\r\n * @param {number} flags\r\n * @param {() => V[]} get_collection\r\n * @param {(value: V, index: number) => any} get_key\r\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\r\n * @param {null | ((anchor: Node) => void)} fallback_fn\r\n * @returns {void}\r\n */\r\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\r\n\tvar anchor = node;\r\n\r\n\t/** @type {EachState} */\r\n\tvar state = { flags, items: new Map(), first: null };\r\n\r\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\r\n\r\n\tif (is_controlled) {\r\n\t\tvar parent_node = /** @type {Element} */ (node);\r\n\r\n\t\tanchor = hydrating\r\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\r\n\t\t\t: parent_node.appendChild(create_text());\r\n\t}\r\n\r\n\tif (hydrating) {\r\n\t\thydrate_next();\r\n\t}\r\n\r\n\t/** @type {Effect | null} */\r\n\tvar fallback = null;\r\n\r\n\tvar was_empty = false;\r\n\r\n\tblock(() => {\r\n\t\tvar collection = get_collection();\r\n\r\n\t\tvar array = is_array(collection)\r\n\t\t\t? collection\r\n\t\t\t: collection == null\r\n\t\t\t\t? []\r\n\t\t\t\t: array_from(collection);\r\n\r\n\t\tvar length = array.length;\r\n\r\n\t\tif (was_empty && length === 0) {\r\n\t\t\t// ignore updates if the array is empty,\r\n\t\t\t// and it already was empty on previous run\r\n\t\t\treturn;\r\n\t\t}\r\n\t\twas_empty = length === 0;\r\n\r\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\r\n\t\tlet mismatch = false;\r\n\r\n\t\tif (hydrating) {\r\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\r\n\r\n\t\t\tif (is_else !== (length === 0)) {\r\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\r\n\t\t\t\tanchor = remove_nodes();\r\n\r\n\t\t\t\tset_hydrate_node(anchor);\r\n\t\t\t\tset_hydrating(false);\r\n\t\t\t\tmismatch = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// this is separate to the previous block because `hydrating` might change\r\n\t\tif (hydrating) {\r\n\t\t\t/** @type {EachItem | null} */\r\n\t\t\tvar prev = null;\r\n\r\n\t\t\t/** @type {EachItem} */\r\n\t\t\tvar item;\r\n\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif (\r\n\t\t\t\t\thydrate_node.nodeType === 8 &&\r\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\r\n\t\t\t\t) {\r\n\t\t\t\t\t// The server rendered fewer items than expected,\r\n\t\t\t\t\t// so break out and continue appending non-hydrated items\r\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\r\n\t\t\t\t\tmismatch = true;\r\n\t\t\t\t\tset_hydrating(false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar value = array[i];\r\n\t\t\t\tvar key = get_key(value, i);\r\n\t\t\t\titem = create_item(\r\n\t\t\t\t\thydrate_node,\r\n\t\t\t\t\tstate,\r\n\t\t\t\t\tprev,\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\tkey,\r\n\t\t\t\t\ti,\r\n\t\t\t\t\trender_fn,\r\n\t\t\t\t\tflags,\r\n\t\t\t\t\tget_collection\r\n\t\t\t\t);\r\n\t\t\t\tstate.items.set(key, item);\r\n\r\n\t\t\t\tprev = item;\r\n\t\t\t}\r\n\r\n\t\t\t// remove excess nodes\r\n\t\t\tif (length > 0) {\r\n\t\t\t\tset_hydrate_node(remove_nodes());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!hydrating) {\r\n\t\t\tvar effect = /** @type {Effect} */ (active_reaction);\r\n\t\t\treconcile(\r\n\t\t\t\tarray,\r\n\t\t\t\tstate,\r\n\t\t\t\tanchor,\r\n\t\t\t\trender_fn,\r\n\t\t\t\tflags,\r\n\t\t\t\t(effect.f & INERT) !== 0,\r\n\t\t\t\tget_key,\r\n\t\t\t\tget_collection\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (fallback_fn !== null) {\r\n\t\t\tif (length === 0) {\r\n\t\t\t\tif (fallback) {\r\n\t\t\t\t\tresume_effect(fallback);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\r\n\t\t\t\t}\r\n\t\t\t} else if (fallback !== null) {\r\n\t\t\t\tpause_effect(fallback, () => {\r\n\t\t\t\t\tfallback = null;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (mismatch) {\r\n\t\t\t// continue in hydration mode\r\n\t\t\tset_hydrating(true);\r\n\t\t}\r\n\r\n\t\t// When we mount the each block for the first time, the collection won't be\r\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\r\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\r\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\r\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\r\n\t\t// will now be `CLEAN`.\r\n\t\tget_collection();\r\n\t});\r\n\r\n\tif (hydrating) {\r\n\t\tanchor = hydrate_node;\r\n\t}\r\n}\r\n\r\n/**\r\n * Add, remove, or reorder items output by an each block as its input changes\r\n * @template V\r\n * @param {Array<V>} array\r\n * @param {EachState} state\r\n * @param {Element | Comment | Text} anchor\r\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>) => void} render_fn\r\n * @param {number} flags\r\n * @param {boolean} is_inert\r\n * @param {(value: V, index: number) => any} get_key\r\n * @param {() => V[]} get_collection\r\n * @returns {void}\r\n */\r\nfunction reconcile(array, state, anchor, render_fn, flags, is_inert, get_key, get_collection) {\r\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\r\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\r\n\r\n\tvar length = array.length;\r\n\tvar items = state.items;\r\n\tvar first = state.first;\r\n\tvar current = first;\r\n\r\n\t/** @type {undefined | Set<EachItem>} */\r\n\tvar seen;\r\n\r\n\t/** @type {EachItem | null} */\r\n\tvar prev = null;\r\n\r\n\t/** @type {undefined | Set<EachItem>} */\r\n\tvar to_animate;\r\n\r\n\t/** @type {EachItem[]} */\r\n\tvar matched = [];\r\n\r\n\t/** @type {EachItem[]} */\r\n\tvar stashed = [];\r\n\r\n\t/** @type {V} */\r\n\tvar value;\r\n\r\n\t/** @type {any} */\r\n\tvar key;\r\n\r\n\t/** @type {EachItem | undefined} */\r\n\tvar item;\r\n\r\n\t/** @type {number} */\r\n\tvar i;\r\n\r\n\tif (is_animated) {\r\n\t\tfor (i = 0; i < length; i += 1) {\r\n\t\t\tvalue = array[i];\r\n\t\t\tkey = get_key(value, i);\r\n\t\t\titem = items.get(key);\r\n\r\n\t\t\tif (item !== undefined) {\r\n\t\t\t\titem.a?.measure();\r\n\t\t\t\t(to_animate ??= new Set()).add(item);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor (i = 0; i < length; i += 1) {\r\n\t\tvalue = array[i];\r\n\t\tkey = get_key(value, i);\r\n\t\titem = items.get(key);\r\n\r\n\t\tif (item === undefined) {\r\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\r\n\r\n\t\t\tprev = create_item(\r\n\t\t\t\tchild_anchor,\r\n\t\t\t\tstate,\r\n\t\t\t\tprev,\r\n\t\t\t\tprev === null ? state.first : prev.next,\r\n\t\t\t\tvalue,\r\n\t\t\t\tkey,\r\n\t\t\t\ti,\r\n\t\t\t\trender_fn,\r\n\t\t\t\tflags,\r\n\t\t\t\tget_collection\r\n\t\t\t);\r\n\r\n\t\t\titems.set(key, prev);\r\n\r\n\t\t\tmatched = [];\r\n\t\t\tstashed = [];\r\n\r\n\t\t\tcurrent = prev.next;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (should_update) {\r\n\t\t\tupdate_item(item, value, i, flags);\r\n\t\t}\r\n\r\n\t\tif ((item.e.f & INERT) !== 0) {\r\n\t\t\tresume_effect(item.e);\r\n\t\t\tif (is_animated) {\r\n\t\t\t\titem.a?.unfix();\r\n\t\t\t\t(to_animate ??= new Set()).delete(item);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (item !== current) {\r\n\t\t\tif (seen !== undefined && seen.has(item)) {\r\n\t\t\t\tif (matched.length < stashed.length) {\r\n\t\t\t\t\t// more efficient to move later items to the front\r\n\t\t\t\t\tvar start = stashed[0];\r\n\t\t\t\t\tvar j;\r\n\r\n\t\t\t\t\tprev = start.prev;\r\n\r\n\t\t\t\t\tvar a = matched[0];\r\n\t\t\t\t\tvar b = matched[matched.length - 1];\r\n\r\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\r\n\t\t\t\t\t\tmove(matched[j], start, anchor);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\r\n\t\t\t\t\t\tseen.delete(stashed[j]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlink(state, a.prev, b.next);\r\n\t\t\t\t\tlink(state, prev, a);\r\n\t\t\t\t\tlink(state, b, start);\r\n\r\n\t\t\t\t\tcurrent = start;\r\n\t\t\t\t\tprev = b;\r\n\t\t\t\t\ti -= 1;\r\n\r\n\t\t\t\t\tmatched = [];\r\n\t\t\t\t\tstashed = [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// more efficient to move earlier items to the back\r\n\t\t\t\t\tseen.delete(item);\r\n\t\t\t\t\tmove(item, current, anchor);\r\n\r\n\t\t\t\t\tlink(state, item.prev, item.next);\r\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\r\n\t\t\t\t\tlink(state, prev, item);\r\n\r\n\t\t\t\t\tprev = item;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tmatched = [];\r\n\t\t\tstashed = [];\r\n\r\n\t\t\twhile (current !== null && current.k !== key) {\r\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\r\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\r\n\t\t\t\tif (is_inert || (current.e.f & INERT) === 0) {\r\n\t\t\t\t\t(seen ??= new Set()).add(current);\r\n\t\t\t\t}\r\n\t\t\t\tstashed.push(current);\r\n\t\t\t\tcurrent = current.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (current === null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\titem = current;\r\n\t\t}\r\n\r\n\t\tmatched.push(item);\r\n\t\tprev = item;\r\n\t\tcurrent = item.next;\r\n\t}\r\n\r\n\tif (current !== null || seen !== undefined) {\r\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\r\n\r\n\t\twhile (current !== null) {\r\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\r\n\t\t\tif (is_inert || (current.e.f & INERT) === 0) {\r\n\t\t\t\tto_destroy.push(current);\r\n\t\t\t}\r\n\t\t\tcurrent = current.next;\r\n\t\t}\r\n\r\n\t\tvar destroy_length = to_destroy.length;\r\n\r\n\t\tif (destroy_length > 0) {\r\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\r\n\r\n\t\t\tif (is_animated) {\r\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\r\n\t\t\t\t\tto_destroy[i].a?.measure();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\r\n\t\t\t\t\tto_destroy[i].a?.fix();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\r\n\t\t}\r\n\t}\r\n\r\n\tif (is_animated) {\r\n\t\tqueue_micro_task(() => {\r\n\t\t\tif (to_animate === undefined) return;\r\n\t\t\tfor (item of to_animate) {\r\n\t\t\t\titem.a?.apply();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\r\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\r\n}\r\n\r\n/**\r\n * @param {EachItem} item\r\n * @param {any} value\r\n * @param {number} index\r\n * @param {number} type\r\n * @returns {void}\r\n */\r\nfunction update_item(item, value, index, type) {\r\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\r\n\t\tinternal_set(item.v, value);\r\n\t}\r\n\r\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\r\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\r\n\t} else {\r\n\t\titem.i = index;\r\n\t}\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {Node} anchor\r\n * @param {EachState} state\r\n * @param {EachItem | null} prev\r\n * @param {EachItem | null} next\r\n * @param {V} value\r\n * @param {unknown} key\r\n * @param {number} index\r\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>) => void} render_fn\r\n * @param {number} flags\r\n * @param {() => V[]} get_collection\r\n * @returns {EachItem}\r\n */\r\nfunction create_item(\r\n\tanchor,\r\n\tstate,\r\n\tprev,\r\n\tnext,\r\n\tvalue,\r\n\tkey,\r\n\tindex,\r\n\trender_fn,\r\n\tflags,\r\n\tget_collection\r\n) {\r\n\tvar previous_each_item = current_each_item;\r\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\r\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\r\n\r\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\r\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\r\n\r\n\tif (DEV && reactive) {\r\n\t\t// For tracing purposes, we need to link the source signal we create with the\r\n\t\t// collection + index so that tracing works as intended\r\n\t\t/** @type {Value} */ (v).debug = () => {\r\n\t\t\tvar collection_index = typeof i === 'number' ? index : i.v;\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\r\n\t\t\tget_collection()[collection_index];\r\n\t\t};\r\n\t}\r\n\r\n\t/** @type {EachItem} */\r\n\tvar item = {\r\n\t\ti,\r\n\t\tv,\r\n\t\tk: key,\r\n\t\ta: null,\r\n\t\t// @ts-expect-error\r\n\t\te: null,\r\n\t\tprev,\r\n\t\tnext\r\n\t};\r\n\r\n\tcurrent_each_item = item;\r\n\r\n\ttry {\r\n\t\titem.e = branch(() => render_fn(anchor, v, i), hydrating);\r\n\r\n\t\titem.e.prev = prev && prev.e;\r\n\t\titem.e.next = next && next.e;\r\n\r\n\t\tif (prev === null) {\r\n\t\t\tstate.first = item;\r\n\t\t} else {\r\n\t\t\tprev.next = item;\r\n\t\t\tprev.e.next = item.e;\r\n\t\t}\r\n\r\n\t\tif (next !== null) {\r\n\t\t\tnext.prev = item;\r\n\t\t\tnext.e.prev = item.e;\r\n\t\t}\r\n\r\n\t\treturn item;\r\n\t} finally {\r\n\t\tcurrent_each_item = previous_each_item;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {EachItem} item\r\n * @param {EachItem | null} next\r\n * @param {Text | Element | Comment} anchor\r\n */\r\nfunction move(item, next, anchor) {\r\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\r\n\r\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\r\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\r\n\r\n\twhile (node !== end) {\r\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\r\n\t\tdest.before(node);\r\n\t\tnode = next_node;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {EachState} state\r\n * @param {EachItem | null} prev\r\n * @param {EachItem | null} next\r\n */\r\nfunction link(state, prev, next) {\r\n\tif (prev === null) {\r\n\t\tstate.first = next;\r\n\t} else {\r\n\t\tprev.next = next;\r\n\t\tprev.e.next = next && next.e;\r\n\t}\r\n\r\n\tif (next !== null) {\r\n\t\tnext.prev = prev;\r\n\t\tnext.e.prev = prev && prev.e;\r\n\t}\r\n}\r\n", "/** @import { Effect, TemplateNode } from '#client' */\r\nimport { FILENAME, HYDRATION_ERROR } from '../../../../constants.js';\r\nimport { block, branch, destroy_effect } from '../../reactivity/effects.js';\r\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from '../hydration.js';\r\nimport { create_fragment_from_html } from '../reconciler.js';\r\nimport { assign_nodes } from '../template.js';\r\nimport * as w from '../../warnings.js';\r\nimport { hash, sanitize_location } from '../../../../utils.js';\r\nimport { DEV } from 'esm-env';\r\nimport { dev_current_component_function } from '../../runtime.js';\r\nimport { get_first_child, get_next_sibling } from '../operations.js';\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {string | null} server_hash\r\n * @param {string} value\r\n */\r\nfunction check_hash(element, server_hash, value) {\r\n\tif (!server_hash || server_hash === hash(String(value ?? ''))) return;\r\n\r\n\tlet location;\r\n\r\n\t// @ts-expect-error\r\n\tconst loc = element.__svelte_meta?.loc;\r\n\tif (loc) {\r\n\t\tlocation = `near ${loc.file}:${loc.line}:${loc.column}`;\r\n\t} else if (dev_current_component_function?.[FILENAME]) {\r\n\t\tlocation = `in ${dev_current_component_function[FILENAME]}`;\r\n\t}\r\n\r\n\tw.hydration_html_changed(sanitize_location(location));\r\n}\r\n\r\n/**\r\n * @param {Element | Text | Comment} node\r\n * @param {() => string} get_value\r\n * @param {boolean} svg\r\n * @param {boolean} mathml\r\n * @param {boolean} [skip_warning]\r\n * @returns {void}\r\n */\r\nexport function html(node, get_value, svg, mathml, skip_warning) {\r\n\tvar anchor = node;\r\n\r\n\tvar value = '';\r\n\r\n\t/** @type {Effect | undefined} */\r\n\tvar effect;\r\n\r\n\tblock(() => {\r\n\t\tif (value === (value = get_value() ?? '')) {\r\n\t\t\tif (hydrating) {\r\n\t\t\t\thydrate_next();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (effect !== undefined) {\r\n\t\t\tdestroy_effect(effect);\r\n\t\t\teffect = undefined;\r\n\t\t}\r\n\r\n\t\tif (value === '') return;\r\n\r\n\t\teffect = branch(() => {\r\n\t\t\tif (hydrating) {\r\n\t\t\t\t// We're deliberately not trying to repair mismatches between server and client,\r\n\t\t\t\t// as it's costly and error-prone (and it's an edge case to have a mismatch anyway)\r\n\t\t\t\tvar hash = /** @type {Comment} */ (hydrate_node).data;\r\n\t\t\t\tvar next = hydrate_next();\r\n\t\t\t\tvar last = next;\r\n\r\n\t\t\t\twhile (\r\n\t\t\t\t\tnext !== null &&\r\n\t\t\t\t\t(next.nodeType !== 8 || /** @type {Comment} */ (next).data !== '')\r\n\t\t\t\t) {\r\n\t\t\t\t\tlast = next;\r\n\t\t\t\t\tnext = /** @type {TemplateNode} */ (get_next_sibling(next));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (next === null) {\r\n\t\t\t\t\tw.hydration_mismatch();\r\n\t\t\t\t\tthrow HYDRATION_ERROR;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (DEV && !skip_warning) {\r\n\t\t\t\t\tcheck_hash(/** @type {Element} */ (next.parentNode), hash, value);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tassign_nodes(hydrate_node, last);\r\n\t\t\t\tanchor = set_hydrate_node(next);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar html = value + '';\r\n\t\t\tif (svg) html = `<svg>${html}</svg>`;\r\n\t\t\telse if (mathml) html = `<math>${html}</math>`;\r\n\r\n\t\t\t// Don't use create_fragment_with_script_from_html here because that would mean script tags are executed.\r\n\t\t\t// @html is basically `.innerHTML = ...` and that doesn't execute scripts either due to security reasons.\r\n\t\t\t/** @type {DocumentFragment | Element} */\r\n\t\t\tvar node = create_fragment_from_html(html);\r\n\r\n\t\t\tif (svg || mathml) {\r\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(node));\r\n\t\t\t}\r\n\r\n\t\t\tassign_nodes(\r\n\t\t\t\t/** @type {TemplateNode} */ (get_first_child(node)),\r\n\t\t\t\t/** @type {TemplateNode} */ (node.lastChild)\r\n\t\t\t);\r\n\r\n\t\t\tif (svg || mathml) {\r\n\t\t\t\twhile (get_first_child(node)) {\r\n\t\t\t\t\tanchor.before(/** @type {Node} */ (get_first_child(node)));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tanchor.before(node);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n", "import { hydrate_next, hydrating } from '../hydration.js';\r\n\r\n/**\r\n * @param {Comment} anchor\r\n * @param {Record<string, any>} $$props\r\n * @param {string} name\r\n * @param {Record<string, unknown>} slot_props\r\n * @param {null | ((anchor: Comment) => void)} fallback_fn\r\n */\r\nexport function slot(anchor, $$props, name, slot_props, fallback_fn) {\r\n\tif (hydrating) {\r\n\t\thydrate_next();\r\n\t}\r\n\r\n\tvar slot_fn = $$props.$$slots?.[name];\r\n\t// Interop: Can use snippets to fill slots\r\n\tvar is_interop = false;\r\n\tif (slot_fn === true) {\r\n\t\tslot_fn = $$props[name === 'default' ? 'children' : name];\r\n\t\tis_interop = true;\r\n\t}\r\n\r\n\tif (slot_fn === undefined) {\r\n\t\tif (fallback_fn !== null) {\r\n\t\t\tfallback_fn(anchor);\r\n\t\t}\r\n\t} else {\r\n\t\tslot_fn(anchor, is_interop ? () => slot_props : slot_props);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Record<string, any>} props\r\n * @returns {Record<string, boolean>}\r\n */\r\nexport function sanitize_slots(props) {\r\n\t/** @type {Record<string, boolean>} */\r\n\tconst sanitized = {};\r\n\tif (props.children) sanitized.default = true;\r\n\tfor (const key in props.$$slots) {\r\n\t\tsanitized[key] = true;\r\n\t}\r\n\treturn sanitized;\r\n}\r\n", "/** @import { Snippet } from 'svelte' */\r\n/** @import { Effect, TemplateNode } from '#client' */\r\n/** @import { Getters } from '#shared' */\r\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\r\nimport { branch, block, destroy_effect, teardown } from '../../reactivity/effects.js';\r\nimport {\r\n\tdev_current_component_function,\r\n\tset_dev_current_component_function\r\n} from '../../runtime.js';\r\nimport { hydrate_next, hydrate_node, hydrating } from '../hydration.js';\r\nimport { create_fragment_from_html } from '../reconciler.js';\r\nimport { assign_nodes } from '../template.js';\r\nimport * as w from '../../warnings.js';\r\nimport * as e from '../../errors.js';\r\nimport { DEV } from 'esm-env';\r\nimport { get_first_child, get_next_sibling } from '../operations.js';\r\nimport { noop } from '../../../shared/utils.js';\r\n\r\n/**\r\n * @template {(node: TemplateNode, ...args: any[]) => void} SnippetFn\r\n * @param {TemplateNode} node\r\n * @param {() => SnippetFn | null | undefined} get_snippet\r\n * @param {(() => any)[]} args\r\n * @returns {void}\r\n */\r\nexport function snippet(node, get_snippet, ...args) {\r\n\tvar anchor = node;\r\n\r\n\t/** @type {SnippetFn | null | undefined} */\r\n\t// @ts-ignore\r\n\tvar snippet = noop;\r\n\r\n\t/** @type {Effect | null} */\r\n\tvar snippet_effect;\r\n\r\n\tblock(() => {\r\n\t\tif (snippet === (snippet = get_snippet())) return;\r\n\r\n\t\tif (snippet_effect) {\r\n\t\t\tdestroy_effect(snippet_effect);\r\n\t\t\tsnippet_effect = null;\r\n\t\t}\r\n\r\n\t\tif (DEV && snippet == null) {\r\n\t\t\te.invalid_snippet();\r\n\t\t}\r\n\r\n\t\tsnippet_effect = branch(() => /** @type {SnippetFn} */ (snippet)(anchor, ...args));\r\n\t}, EFFECT_TRANSPARENT);\r\n\r\n\tif (hydrating) {\r\n\t\tanchor = hydrate_node;\r\n\t}\r\n}\r\n\r\n/**\r\n * In development, wrap the snippet function so that it passes validation, and so that the\r\n * correct component context is set for ownership checks\r\n * @param {any} component\r\n * @param {(node: TemplateNode, ...args: any[]) => void} fn\r\n */\r\nexport function wrap_snippet(component, fn) {\r\n\treturn (/** @type {TemplateNode} */ node, /** @type {any[]} */ ...args) => {\r\n\t\tvar previous_component_function = dev_current_component_function;\r\n\t\tset_dev_current_component_function(component);\r\n\r\n\t\ttry {\r\n\t\t\treturn fn(node, ...args);\r\n\t\t} finally {\r\n\t\t\tset_dev_current_component_function(previous_component_function);\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Create a snippet programmatically\r\n * @template {unknown[]} Params\r\n * @param {(...params: Getters<Params>) => {\r\n *   render: () => string\r\n *   setup?: (element: Element) => void | (() => void)\r\n * }} fn\r\n * @returns {Snippet<Params>}\r\n */\r\nexport function createRawSnippet(fn) {\r\n\t// @ts-expect-error the types are a lie\r\n\treturn (/** @type {TemplateNode} */ anchor, /** @type {Getters<Params>} */ ...params) => {\r\n\t\tvar snippet = fn(...params);\r\n\r\n\t\t/** @type {Element} */\r\n\t\tvar element;\r\n\r\n\t\tif (hydrating) {\r\n\t\t\telement = /** @type {Element} */ (hydrate_node);\r\n\t\t\thydrate_next();\r\n\t\t} else {\r\n\t\t\tvar html = snippet.render().trim();\r\n\t\t\tvar fragment = create_fragment_from_html(html);\r\n\t\t\telement = /** @type {Element} */ (get_first_child(fragment));\r\n\r\n\t\t\tif (DEV && (get_next_sibling(element) !== null || element.nodeType !== 1)) {\r\n\t\t\t\tw.invalid_raw_snippet_render();\r\n\t\t\t}\r\n\r\n\t\t\tanchor.before(element);\r\n\t\t}\r\n\r\n\t\tconst result = snippet.setup?.(element);\r\n\t\tassign_nodes(element, element);\r\n\r\n\t\tif (typeof result === 'function') {\r\n\t\t\tteardown(result);\r\n\t\t}\r\n\t};\r\n}\r\n", "/** @import { TemplateNode, Dom, Effect } from '#client' */\r\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\r\nimport { block, branch, pause_effect } from '../../reactivity/effects.js';\r\nimport { hydrate_next, hydrate_node, hydrating } from '../hydration.js';\r\n\r\n/**\r\n * @template P\r\n * @template {(props: P) => void} C\r\n * @param {TemplateNode} node\r\n * @param {() => C} get_component\r\n * @param {(anchor: TemplateNode, component: C) => Dom | void} render_fn\r\n * @returns {void}\r\n */\r\nexport function component(node, get_component, render_fn) {\r\n\tif (hydrating) {\r\n\t\thydrate_next();\r\n\t}\r\n\r\n\tvar anchor = node;\r\n\r\n\t/** @type {C} */\r\n\tvar component;\r\n\r\n\t/** @type {Effect | null} */\r\n\tvar effect;\r\n\r\n\tblock(() => {\r\n\t\tif (component === (component = get_component())) return;\r\n\r\n\t\tif (effect) {\r\n\t\t\tpause_effect(effect);\r\n\t\t\teffect = null;\r\n\t\t}\r\n\r\n\t\tif (component) {\r\n\t\t\teffect = branch(() => render_fn(anchor, component));\r\n\t\t}\r\n\t}, EFFECT_TRANSPARENT);\r\n\r\n\tif (hydrating) {\r\n\t\tanchor = hydrate_node;\r\n\t}\r\n}\r\n", "/** @import { Effect, TemplateNode } from '#client' */\r\nimport { FILENAME, NAMESPACE_SVG } from '../../../../constants.js';\r\nimport {\r\n\thydrate_next,\r\n\thydrate_node,\r\n\thydrating,\r\n\tset_hydrate_node,\r\n\tset_hydrating\r\n} from '../hydration.js';\r\nimport { create_text, get_first_child } from '../operations.js';\r\nimport {\r\n\tblock,\r\n\tbranch,\r\n\tdestroy_effect,\r\n\tpause_effect,\r\n\tresume_effect\r\n} from '../../reactivity/effects.js';\r\nimport { set_should_intro } from '../../render.js';\r\nimport { current_each_item, set_current_each_item } from './each.js';\r\nimport { component_context, active_effect } from '../../runtime.js';\r\nimport { DEV } from 'esm-env';\r\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\r\nimport { assign_nodes } from '../template.js';\r\nimport { is_raw_text_element } from '../../../../utils.js';\r\n\r\n/**\r\n * @param {Comment | Element} node\r\n * @param {() => string} get_tag\r\n * @param {boolean} is_svg\r\n * @param {undefined | ((element: Element, anchor: Node | null) => void)} render_fn,\r\n * @param {undefined | (() => string)} get_namespace\r\n * @param {undefined | [number, number]} location\r\n * @returns {void}\r\n */\r\nexport function element(node, get_tag, is_svg, render_fn, get_namespace, location) {\r\n\tlet was_hydrating = hydrating;\r\n\r\n\tif (hydrating) {\r\n\t\thydrate_next();\r\n\t}\r\n\r\n\tvar filename = DEV && location && component_context?.function[FILENAME];\r\n\r\n\t/** @type {string | null} */\r\n\tvar tag;\r\n\r\n\t/** @type {string | null} */\r\n\tvar current_tag;\r\n\r\n\t/** @type {null | Element} */\r\n\tvar element = null;\r\n\r\n\tif (hydrating && hydrate_node.nodeType === 1) {\r\n\t\telement = /** @type {Element} */ (hydrate_node);\r\n\t\thydrate_next();\r\n\t}\r\n\r\n\tvar anchor = /** @type {TemplateNode} */ (hydrating ? hydrate_node : node);\r\n\r\n\t/** @type {Effect | null} */\r\n\tvar effect;\r\n\r\n\t/**\r\n\t * The keyed `{#each ...}` item block, if any, that this element is inside.\r\n\t * We track this so we can set it when changing the element, allowing any\r\n\t * `animate:` directive to bind itself to the correct block\r\n\t */\r\n\tvar each_item_block = current_each_item;\r\n\r\n\tblock(() => {\r\n\t\tconst next_tag = get_tag() || null;\r\n\t\tvar ns = get_namespace ? get_namespace() : is_svg || next_tag === 'svg' ? NAMESPACE_SVG : null;\r\n\r\n\t\t// Assumption: Noone changes the namespace but not the tag (what would that even mean?)\r\n\t\tif (next_tag === tag) return;\r\n\r\n\t\t// See explanation of `each_item_block` above\r\n\t\tvar previous_each_item = current_each_item;\r\n\t\tset_current_each_item(each_item_block);\r\n\r\n\t\tif (effect) {\r\n\t\t\tif (next_tag === null) {\r\n\t\t\t\t// start outro\r\n\t\t\t\tpause_effect(effect, () => {\r\n\t\t\t\t\teffect = null;\r\n\t\t\t\t\tcurrent_tag = null;\r\n\t\t\t\t});\r\n\t\t\t} else if (next_tag === current_tag) {\r\n\t\t\t\t// same tag as is currently rendered — abort outro\r\n\t\t\t\tresume_effect(effect);\r\n\t\t\t} else {\r\n\t\t\t\t// tag is changing — destroy immediately, render contents without intro transitions\r\n\t\t\t\tdestroy_effect(effect);\r\n\t\t\t\tset_should_intro(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (next_tag && next_tag !== current_tag) {\r\n\t\t\teffect = branch(() => {\r\n\t\t\t\telement = hydrating\r\n\t\t\t\t\t? /** @type {Element} */ (element)\r\n\t\t\t\t\t: ns\r\n\t\t\t\t\t\t? document.createElementNS(ns, next_tag)\r\n\t\t\t\t\t\t: document.createElement(next_tag);\r\n\r\n\t\t\t\tif (DEV && location) {\r\n\t\t\t\t\t// @ts-expect-error\r\n\t\t\t\t\telement.__svelte_meta = {\r\n\t\t\t\t\t\tloc: {\r\n\t\t\t\t\t\t\tfile: filename,\r\n\t\t\t\t\t\t\tline: location[0],\r\n\t\t\t\t\t\t\tcolumn: location[1]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tassign_nodes(element, element);\r\n\r\n\t\t\t\tif (render_fn) {\r\n\t\t\t\t\tif (hydrating && is_raw_text_element(next_tag)) {\r\n\t\t\t\t\t\t// prevent hydration glitches\r\n\t\t\t\t\t\telement.append(document.createComment(''));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If hydrating, use the existing ssr comment as the anchor so that the\r\n\t\t\t\t\t// inner open and close methods can pick up the existing nodes correctly\r\n\t\t\t\t\tvar child_anchor = /** @type {TemplateNode} */ (\r\n\t\t\t\t\t\thydrating ? get_first_child(element) : element.appendChild(create_text())\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif (hydrating) {\r\n\t\t\t\t\t\tif (child_anchor === null) {\r\n\t\t\t\t\t\t\tset_hydrating(false);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tset_hydrate_node(child_anchor);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// `child_anchor` is undefined if this is a void element, but we still\r\n\t\t\t\t\t// need to call `render_fn` in order to run actions etc. If the element\r\n\t\t\t\t\t// contains children, it's a user error (which is warned on elsewhere)\r\n\t\t\t\t\t// and the DOM will be silently discarded\r\n\t\t\t\t\trender_fn(element, child_anchor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// we do this after calling `render_fn` so that child effects don't override `nodes.end`\r\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = element;\r\n\r\n\t\t\t\tanchor.before(element);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\ttag = next_tag;\r\n\t\tif (tag) current_tag = tag;\r\n\t\tset_should_intro(true);\r\n\r\n\t\tset_current_each_item(previous_each_item);\r\n\t}, EFFECT_TRANSPARENT);\r\n\r\n\tif (was_hydrating) {\r\n\t\tset_hydrating(true);\r\n\t\tset_hydrate_node(anchor);\r\n\t}\r\n}\r\n", "import { DEV } from 'esm-env';\r\nimport { queue_micro_task } from './task.js';\r\nimport { register_style } from '../dev/css.js';\r\n\r\n/**\r\n * @param {Node} anchor\r\n * @param {{ hash: string, code: string }} css\r\n */\r\nexport function append_styles(anchor, css) {\r\n\t// Use `queue_micro_task` to ensure `anchor` is in the DOM, otherwise getRootNode() will yield wrong results\r\n\tqueue_micro_task(() => {\r\n\t\tvar root = anchor.getRootNode();\r\n\r\n\t\tvar target = /** @type {ShadowRoot} */ (root).host\r\n\t\t\t? /** @type {ShadowRoot} */ (root)\r\n\t\t\t: /** @type {Document} */ (root).head ?? /** @type {Document} */ (root.ownerDocument).head;\r\n\r\n\t\t// Always querying the DOM is roughly the same perf as additionally checking for presence in a map first assuming\r\n\t\t// that you'll get cache hits half of the time, so we just always query the dom for simplicity and code savings.\r\n\t\tif (!target.querySelector('#' + css.hash)) {\r\n\t\t\tconst style = document.createElement('style');\r\n\t\t\tstyle.id = css.hash;\r\n\t\t\tstyle.textContent = css.code;\r\n\r\n\t\t\ttarget.appendChild(style);\r\n\r\n\t\t\tif (DEV) {\r\n\t\t\t\tregister_style(css.hash, style);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n", "/** @import { ActionPayload } from '#client' */\r\nimport { effect, render_effect } from '../../reactivity/effects.js';\r\nimport { safe_not_equal } from '../../reactivity/equality.js';\r\nimport { deep_read_state, untrack } from '../../runtime.js';\r\n\r\n/**\r\n * @template P\r\n * @param {Element} dom\r\n * @param {(dom: Element, value?: P) => ActionPayload<P>} action\r\n * @param {() => P} [get_value]\r\n * @returns {void}\r\n */\r\nexport function action(dom, action, get_value) {\r\n\teffect(() => {\r\n\t\tvar payload = untrack(() => action(dom, get_value?.()) || {});\r\n\r\n\t\tif (get_value && payload?.update) {\r\n\t\t\tvar inited = false;\r\n\t\t\t/** @type {P} */\r\n\t\t\tvar prev = /** @type {any} */ ({}); // initialize with something so it's never equal on first run\r\n\r\n\t\t\trender_effect(() => {\r\n\t\t\t\tvar value = get_value();\r\n\r\n\t\t\t\t// Action's update method is coarse-grained, i.e. when anything in the passed value changes, update.\r\n\t\t\t\t// This works in legacy mode because of mutable_source being updated as a whole, but when using $state\r\n\t\t\t\t// together with actions and mutation, it wouldn't notice the change without a deep read.\r\n\t\t\t\tdeep_read_state(value);\r\n\r\n\t\t\t\tif (inited && safe_not_equal(prev, value)) {\r\n\t\t\t\t\tprev = value;\r\n\t\t\t\t\t/** @type {Function} */ (payload.update)(value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tinited = true;\r\n\t\t}\r\n\r\n\t\tif (payload?.destroy) {\r\n\t\t\treturn () => /** @type {Function} */ (payload.destroy)();\r\n\t\t}\r\n\t});\r\n}\r\n", "const ATTR_REGEX = /[&\"<]/g;\r\nconst CONTENT_REGEX = /[&<]/g;\r\n\r\n/**\r\n * @template V\r\n * @param {V} value\r\n * @param {boolean} [is_attr]\r\n */\r\nexport function escape_html(value, is_attr) {\r\n\tconst str = String(value ?? '');\r\n\r\n\tconst pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\r\n\tpattern.lastIndex = 0;\r\n\r\n\tlet escaped = '';\r\n\tlet last = 0;\r\n\r\n\twhile (pattern.test(str)) {\r\n\t\tconst i = pattern.lastIndex - 1;\r\n\t\tconst ch = str[i];\r\n\t\tescaped += str.substring(last, i) + (ch === '&' ? '&amp;' : ch === '\"' ? '&quot;' : '&lt;');\r\n\t\tlast = i + 1;\r\n\t}\r\n\r\n\treturn escaped + str.substring(last);\r\n}\r\n", "import { escape_html } from '../../escaping.js';\r\nimport { clsx as _clsx } from 'clsx';\r\n\r\n/**\r\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\r\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\r\n * may be other odd cases that need to be added to this list in future\r\n * @type {Record<string, Map<any, string>>}\r\n */\r\nconst replacements = {\r\n\ttranslate: new Map([\r\n\t\t[true, 'yes'],\r\n\t\t[false, 'no']\r\n\t])\r\n};\r\n\r\n/**\r\n * @template V\r\n * @param {string} name\r\n * @param {V} value\r\n * @param {boolean} [is_boolean]\r\n * @returns {string}\r\n */\r\nexport function attr(name, value, is_boolean = false) {\r\n\tif (value == null || (!value && is_boolean) || (value === '' && name === 'class')) return '';\r\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\r\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\r\n\treturn ` ${name}${assignment}`;\r\n}\r\n\r\n/**\r\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\r\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\r\n * @param  {any} value\r\n */\r\nexport function clsx(value) {\r\n\tif (typeof value === 'object') {\r\n\t\treturn _clsx(value);\r\n\t} else {\r\n\t\treturn value ?? '';\r\n\t}\r\n}\r\n", "import { DEV } from 'esm-env';\r\nimport { hydrating } from '../hydration.js';\r\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\r\nimport { create_event, delegate } from './events.js';\r\nimport { add_form_reset_listener, autofocus } from './misc.js';\r\nimport * as w from '../../warnings.js';\r\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\r\nimport { queue_idle_task } from '../task.js';\r\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\r\nimport {\r\n\tactive_effect,\r\n\tactive_reaction,\r\n\tset_active_effect,\r\n\tset_active_reaction\r\n} from '../../runtime.js';\r\nimport { clsx } from '../../../shared/attributes.js';\r\n\r\n/**\r\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\r\n * to remove it upon hydration to avoid a bug when someone resets the form value.\r\n * @param {HTMLInputElement} input\r\n * @returns {void}\r\n */\r\nexport function remove_input_defaults(input) {\r\n\tif (!hydrating) return;\r\n\r\n\tvar already_removed = false;\r\n\r\n\t// We try and remove the default attributes later, rather than sync during hydration.\r\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\r\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\r\n\t// the idle callback, then we ensure the input defaults are cleared just before.\r\n\tvar remove_defaults = () => {\r\n\t\tif (already_removed) return;\r\n\t\talready_removed = true;\r\n\r\n\t\t// Remove the attributes but preserve the values\r\n\t\tif (input.hasAttribute('value')) {\r\n\t\t\tvar value = input.value;\r\n\t\t\tset_attribute(input, 'value', null);\r\n\t\t\tinput.value = value;\r\n\t\t}\r\n\r\n\t\tif (input.hasAttribute('checked')) {\r\n\t\t\tvar checked = input.checked;\r\n\t\t\tset_attribute(input, 'checked', null);\r\n\t\t\tinput.checked = checked;\r\n\t\t}\r\n\t};\r\n\r\n\t// @ts-expect-error\r\n\tinput.__on_r = remove_defaults;\r\n\tqueue_idle_task(remove_defaults);\r\n\tadd_form_reset_listener();\r\n}\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {any} value\r\n */\r\nexport function set_value(element, value) {\r\n\t// @ts-expect-error\r\n\tvar attributes = (element.__attributes ??= {});\r\n\r\n\tif (\r\n\t\tattributes.value ===\r\n\t\t\t(attributes.value =\r\n\t\t\t\t// treat null and undefined the same for the initial value\r\n\t\t\t\tvalue ?? undefined) ||\r\n\t\t// @ts-expect-error\r\n\t\t// `progress` elements always need their value set when its `0`\r\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\r\n\t) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// @ts-expect-error\r\n\telement.value = value;\r\n}\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {boolean} checked\r\n */\r\nexport function set_checked(element, checked) {\r\n\t// @ts-expect-error\r\n\tvar attributes = (element.__attributes ??= {});\r\n\r\n\tif (\r\n\t\tattributes.checked ===\r\n\t\t(attributes.checked =\r\n\t\t\t// treat null and undefined the same for the initial value\r\n\t\t\tchecked ?? undefined)\r\n\t) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// @ts-expect-error\r\n\telement.checked = checked;\r\n}\r\n\r\n/**\r\n * Sets the `selected` attribute on an `option` element.\r\n * Not set through the property because that doesn't reflect to the DOM,\r\n * which means it wouldn't be taken into account when a form is reset.\r\n * @param {HTMLOptionElement} element\r\n * @param {boolean} selected\r\n */\r\nexport function set_selected(element, selected) {\r\n\tif (selected) {\r\n\t\t// The selected option could've changed via user selection, and\r\n\t\t// setting the value without this check would set it back.\r\n\t\tif (!element.hasAttribute('selected')) {\r\n\t\t\telement.setAttribute('selected', '');\r\n\t\t}\r\n\t} else {\r\n\t\telement.removeAttribute('selected');\r\n\t}\r\n}\r\n\r\n/**\r\n * Applies the default checked property without influencing the current checked property.\r\n * @param {HTMLInputElement} element\r\n * @param {boolean} checked\r\n */\r\nexport function set_default_checked(element, checked) {\r\n\tconst existing_value = element.checked;\r\n\telement.defaultChecked = checked;\r\n\telement.checked = existing_value;\r\n}\r\n\r\n/**\r\n * Applies the default value property without influencing the current value property.\r\n * @param {HTMLInputElement | HTMLTextAreaElement} element\r\n * @param {string} value\r\n */\r\nexport function set_default_value(element, value) {\r\n\tconst existing_value = element.value;\r\n\telement.defaultValue = value;\r\n\telement.value = existing_value;\r\n}\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {string} attribute\r\n * @param {string | null} value\r\n * @param {boolean} [skip_warning]\r\n */\r\nexport function set_attribute(element, attribute, value, skip_warning) {\r\n\t// @ts-expect-error\r\n\tvar attributes = (element.__attributes ??= {});\r\n\r\n\tif (hydrating) {\r\n\t\tattributes[attribute] = element.getAttribute(attribute);\r\n\r\n\t\tif (\r\n\t\t\tattribute === 'src' ||\r\n\t\t\tattribute === 'srcset' ||\r\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\r\n\t\t) {\r\n\t\t\tif (!skip_warning) {\r\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\r\n\t\t\t}\r\n\r\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\r\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\r\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\r\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\r\n\r\n\tif (attribute === 'style' && '__styles' in element) {\r\n\t\t// reset styles to force style: directive to update\r\n\t\telement.__styles = {};\r\n\t}\r\n\r\n\tif (attribute === 'loading') {\r\n\t\t// @ts-expect-error\r\n\t\telement[LOADING_ATTR_SYMBOL] = value;\r\n\t}\r\n\r\n\tif (value == null) {\r\n\t\telement.removeAttribute(attribute);\r\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\r\n\t\t// @ts-ignore\r\n\t\telement[attribute] = value;\r\n\t} else {\r\n\t\telement.setAttribute(attribute, value);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Element} dom\r\n * @param {string} attribute\r\n * @param {string} value\r\n */\r\nexport function set_xlink_attribute(dom, attribute, value) {\r\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} node\r\n * @param {string} prop\r\n * @param {any} value\r\n */\r\nexport function set_custom_element_data(node, prop, value) {\r\n\t// We need to ensure that setting custom element props, which can\r\n\t// invoke lifecycle methods on other custom elements, does not also\r\n\t// associate those lifecycle methods with the current active reaction\r\n\t// or effect\r\n\tvar previous_reaction = active_reaction;\r\n\tvar previous_effect = active_effect;\r\n\r\n\tset_active_reaction(null);\r\n\tset_active_effect(null);\r\n\ttry {\r\n\t\tif (\r\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\r\n\t\t\t// because during their upgrade/instantiation they might add more setters.\r\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\r\n\t\t\tsetters_cache.has(node.nodeName) || customElements.get(node.tagName.toLowerCase())\r\n\t\t\t\t? get_setters(node).includes(prop)\r\n\t\t\t\t: value && typeof value === 'object'\r\n\t\t) {\r\n\t\t\t// @ts-expect-error\r\n\t\t\tnode[prop] = value;\r\n\t\t} else {\r\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\r\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\r\n\t\t\t// the setters cache too early.\r\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\r\n\t\t}\r\n\t} finally {\r\n\t\tset_active_reaction(previous_reaction);\r\n\t\tset_active_effect(previous_effect);\r\n\t}\r\n}\r\n\r\n/**\r\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\r\n * @param {Element & ElementCSSInlineStyle} element\r\n * @param {Record<string, any> | undefined} prev\r\n * @param {Record<string, any>} next New attributes - this function mutates this object\r\n * @param {string} [css_hash]\r\n * @param {boolean} [preserve_attribute_case]\r\n * @param {boolean} [is_custom_element]\r\n * @param {boolean} [skip_warning]\r\n * @returns {Record<string, any>}\r\n */\r\nexport function set_attributes(\r\n\telement,\r\n\tprev,\r\n\tnext,\r\n\tcss_hash,\r\n\tpreserve_attribute_case = false,\r\n\tis_custom_element = false,\r\n\tskip_warning = false\r\n) {\r\n\tvar current = prev || {};\r\n\tvar is_option_element = element.tagName === 'OPTION';\r\n\r\n\tfor (var key in prev) {\r\n\t\tif (!(key in next)) {\r\n\t\t\tnext[key] = null;\r\n\t\t}\r\n\t}\r\n\r\n\tif (next.class) {\r\n\t\tnext.class = clsx(next.class);\r\n\t}\r\n\r\n\tif (css_hash !== undefined) {\r\n\t\tnext.class = next.class ? next.class + ' ' + css_hash : css_hash;\r\n\t}\r\n\r\n\tvar setters = get_setters(element);\r\n\r\n\t// @ts-expect-error\r\n\tvar attributes = /** @type {Record<string, unknown>} **/ (element.__attributes ??= {});\r\n\r\n\t// since key is captured we use const\r\n\tfor (const key in next) {\r\n\t\t// let instead of var because referenced in a closure\r\n\t\tlet value = next[key];\r\n\r\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\r\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\r\n\t\tif (is_option_element && key === 'value' && value == null) {\r\n\t\t\t// The <option> element is a special case because removing the value attribute means\r\n\t\t\t// the value is set to the text content of the option element, and setting the value\r\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\r\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\r\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\r\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\r\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\r\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\r\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\r\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\r\n\t\t\t// @ts-ignore\r\n\t\t\telement.value = element.__value = '';\r\n\t\t\tcurrent[key] = value;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tvar prev_value = current[key];\r\n\t\tif (value === prev_value) continue;\r\n\r\n\t\tcurrent[key] = value;\r\n\r\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\r\n\t\tif (prefix === '$$') continue;\r\n\r\n\t\tif (prefix === 'on') {\r\n\t\t\t/** @type {{ capture?: true }} */\r\n\t\t\tconst opts = {};\r\n\t\t\tconst event_handle_key = '$$' + key;\r\n\t\t\tlet event_name = key.slice(2);\r\n\t\t\tvar delegated = is_delegated(event_name);\r\n\r\n\t\t\tif (is_capture_event(event_name)) {\r\n\t\t\t\tevent_name = event_name.slice(0, -7);\r\n\t\t\t\topts.capture = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (!delegated && prev_value) {\r\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\r\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\r\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\r\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\r\n\t\t\t\tif (value != null) continue;\r\n\r\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\r\n\t\t\t\tcurrent[event_handle_key] = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (value != null) {\r\n\t\t\t\tif (!delegated) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * @this {any}\r\n\t\t\t\t\t * @param {Event} evt\r\n\t\t\t\t\t */\r\n\t\t\t\t\tfunction handle(evt) {\r\n\t\t\t\t\t\tcurrent[key].call(this, evt);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\telement[`__${event_name}`] = value;\r\n\t\t\t\t\tdelegate([event_name]);\r\n\t\t\t\t}\r\n\t\t\t} else if (delegated) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\telement[`__${event_name}`] = undefined;\r\n\t\t\t}\r\n\t\t} else if (key === 'style' && value != null) {\r\n\t\t\telement.style.cssText = value + '';\r\n\t\t} else if (key === 'autofocus') {\r\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\r\n\t\t} else if (key === '__value' || (key === 'value' && value != null)) {\r\n\t\t\t// @ts-ignore\r\n\t\t\telement.value = element[key] = element.__value = value;\r\n\t\t} else if (key === 'selected' && is_option_element) {\r\n\t\t\tset_selected(/** @type {HTMLOptionElement} */ (element), value);\r\n\t\t} else {\r\n\t\t\tvar name = key;\r\n\t\t\tif (!preserve_attribute_case) {\r\n\t\t\t\tname = normalize_attribute(name);\r\n\t\t\t}\r\n\r\n\t\t\tvar is_default = name === 'defaultValue' || name === 'defaultChecked';\r\n\r\n\t\t\tif (value == null && !is_custom_element && !is_default) {\r\n\t\t\t\tattributes[key] = null;\r\n\r\n\t\t\t\tif (name === 'value' || name === 'checked') {\r\n\t\t\t\t\t// removing value/checked also removes defaultValue/defaultChecked — preserve\r\n\t\t\t\t\tlet input = /** @type {HTMLInputElement} */ (element);\r\n\r\n\t\t\t\t\tif (name === 'value') {\r\n\t\t\t\t\t\tlet prev = input.defaultValue;\r\n\t\t\t\t\t\tinput.removeAttribute(name);\r\n\t\t\t\t\t\tinput.defaultValue = prev;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet prev = input.defaultChecked;\r\n\t\t\t\t\t\tinput.removeAttribute(name);\r\n\t\t\t\t\t\tinput.defaultChecked = prev;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.removeAttribute(key);\r\n\t\t\t\t}\r\n\t\t\t} else if (\r\n\t\t\t\tis_default ||\r\n\t\t\t\t(setters.includes(name) && (is_custom_element || typeof value !== 'string'))\r\n\t\t\t) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\telement[name] = value;\r\n\t\t\t} else if (typeof value !== 'function') {\r\n\t\t\t\tif (hydrating && (name === 'src' || name === 'href' || name === 'srcset')) {\r\n\t\t\t\t\tif (!skip_warning) check_src_in_dev_hydration(element, name, value ?? '');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tset_attribute(element, name, value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (key === 'style' && '__styles' in element) {\r\n\t\t\t// reset styles to force style: directive to update\r\n\t\t\telement.__styles = {};\r\n\t\t}\r\n\t}\r\n\r\n\treturn current;\r\n}\r\n\r\n/** @type {Map<string, string[]>} */\r\nvar setters_cache = new Map();\r\n\r\n/** @param {Element} element */\r\nfunction get_setters(element) {\r\n\tvar setters = setters_cache.get(element.nodeName);\r\n\tif (setters) return setters;\r\n\tsetters_cache.set(element.nodeName, (setters = []));\r\n\r\n\tvar descriptors;\r\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\r\n\tvar element_proto = Element.prototype;\r\n\r\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\r\n\t// Do not use contructor.name here as that's unreliable in some browser environments\r\n\twhile (element_proto !== proto) {\r\n\t\tdescriptors = get_descriptors(proto);\r\n\r\n\t\tfor (var key in descriptors) {\r\n\t\t\tif (descriptors[key].set) {\r\n\t\t\t\tsetters.push(key);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tproto = get_prototype_of(proto);\r\n\t}\r\n\r\n\treturn setters;\r\n}\r\n\r\n/**\r\n * @param {any} element\r\n * @param {string} attribute\r\n * @param {string} value\r\n */\r\nfunction check_src_in_dev_hydration(element, attribute, value) {\r\n\tif (!DEV) return;\r\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\r\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\r\n\r\n\tw.hydration_attribute_changed(\r\n\t\tattribute,\r\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\r\n\t\tString(value)\r\n\t);\r\n}\r\n\r\n/**\r\n * @param {string} element_src\r\n * @param {string} url\r\n * @returns {boolean}\r\n */\r\nfunction src_url_equal(element_src, url) {\r\n\tif (element_src === url) return true;\r\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\r\n}\r\n\r\n/** @param {string} srcset */\r\nfunction split_srcset(srcset) {\r\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\r\n}\r\n\r\n/**\r\n * @param {HTMLSourceElement | HTMLImageElement} element\r\n * @param {string} srcset\r\n * @returns {boolean}\r\n */\r\nfunction srcset_url_equal(element, srcset) {\r\n\tvar element_urls = split_srcset(element.srcset);\r\n\tvar urls = split_srcset(srcset);\r\n\r\n\treturn (\r\n\t\turls.length === element_urls.length &&\r\n\t\turls.every(\r\n\t\t\t([url, width], i) =>\r\n\t\t\t\twidth === element_urls[i][1] &&\r\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\r\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\r\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\r\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\r\n\t\t\t\t// contain relative or absolute URLs.\r\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\r\n\t\t)\r\n\t);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} element\r\n * @returns {void}\r\n */\r\nexport function handle_lazy_img(element) {\r\n\t// If we're using an image that has a lazy loading attribute, we need to apply\r\n\t// the loading and src after the img element has been appended to the document.\r\n\t// Otherwise the lazy behaviour will not work due to our cloneNode heuristic for\r\n\t// templates.\r\n\tif (!hydrating && element.loading === 'lazy') {\r\n\t\tvar src = element.src;\r\n\t\t// @ts-expect-error\r\n\t\telement[LOADING_ATTR_SYMBOL] = null;\r\n\t\telement.loading = 'eager';\r\n\t\telement.removeAttribute('src');\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\t// @ts-expect-error\r\n\t\t\tif (element[LOADING_ATTR_SYMBOL] !== 'eager') {\r\n\t\t\t\telement.loading = 'lazy';\r\n\t\t\t}\r\n\t\t\telement.src = src;\r\n\t\t});\r\n\t}\r\n}\r\n", "import { hydrating } from '../hydration.js';\r\n\r\n/**\r\n * @param {SVGElement} dom\r\n * @param {string} value\r\n * @param {string} [hash]\r\n * @returns {void}\r\n */\r\nexport function set_svg_class(dom, value, hash) {\r\n\t// @ts-expect-error need to add __className to patched prototype\r\n\tvar prev_class_name = dom.__className;\r\n\tvar next_class_name = to_class(value, hash);\r\n\r\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\r\n\t\t// In case of hydration don't reset the class as it's already correct.\r\n\t\t// @ts-expect-error need to add __className to patched prototype\r\n\t\tdom.__className = next_class_name;\r\n\t} else if (\r\n\t\tprev_class_name !== next_class_name ||\r\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\r\n\t) {\r\n\t\tif (next_class_name === '') {\r\n\t\t\tdom.removeAttribute('class');\r\n\t\t} else {\r\n\t\t\tdom.setAttribute('class', next_class_name);\r\n\t\t}\r\n\r\n\t\t// @ts-expect-error need to add __className to patched prototype\r\n\t\tdom.__className = next_class_name;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {MathMLElement} dom\r\n * @param {string} value\r\n * @param {string} [hash]\r\n * @returns {void}\r\n */\r\nexport function set_mathml_class(dom, value, hash) {\r\n\t// @ts-expect-error need to add __className to patched prototype\r\n\tvar prev_class_name = dom.__className;\r\n\tvar next_class_name = to_class(value, hash);\r\n\r\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\r\n\t\t// In case of hydration don't reset the class as it's already correct.\r\n\t\t// @ts-expect-error need to add __className to patched prototype\r\n\t\tdom.__className = next_class_name;\r\n\t} else if (\r\n\t\tprev_class_name !== next_class_name ||\r\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\r\n\t) {\r\n\t\tif (next_class_name === '') {\r\n\t\t\tdom.removeAttribute('class');\r\n\t\t} else {\r\n\t\t\tdom.setAttribute('class', next_class_name);\r\n\t\t}\r\n\r\n\t\t// @ts-expect-error need to add __className to patched prototype\r\n\t\tdom.__className = next_class_name;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} dom\r\n * @param {string} value\r\n * @param {string} [hash]\r\n * @returns {void}\r\n */\r\nexport function set_class(dom, value, hash) {\r\n\t// @ts-expect-error need to add __className to patched prototype\r\n\tvar prev_class_name = dom.__className;\r\n\tvar next_class_name = to_class(value, hash);\r\n\r\n\tif (hydrating && dom.className === next_class_name) {\r\n\t\t// In case of hydration don't reset the class as it's already correct.\r\n\t\t// @ts-expect-error need to add __className to patched prototype\r\n\t\tdom.__className = next_class_name;\r\n\t} else if (\r\n\t\tprev_class_name !== next_class_name ||\r\n\t\t(hydrating && dom.className !== next_class_name)\r\n\t) {\r\n\t\t// Removing the attribute when the value is only an empty string causes\r\n\t\t// peformance issues vs simply making the className an empty string. So\r\n\t\t// we should only remove the class if the the value is nullish.\r\n\t\tif (value == null && !hash) {\r\n\t\t\tdom.removeAttribute('class');\r\n\t\t} else {\r\n\t\t\tdom.className = next_class_name;\r\n\t\t}\r\n\r\n\t\t// @ts-expect-error need to add __className to patched prototype\r\n\t\tdom.__className = next_class_name;\r\n\t}\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {V} value\r\n * @param {string} [hash]\r\n * @returns {string | V}\r\n */\r\nfunction to_class(value, hash) {\r\n\treturn (value == null ? '' : value) + (hash ? ' ' + hash : '');\r\n}\r\n\r\n/**\r\n * @param {Element} dom\r\n * @param {string} class_name\r\n * @param {boolean} value\r\n * @returns {void}\r\n */\r\nexport function toggle_class(dom, class_name, value) {\r\n\tif (value) {\r\n\t\tif (dom.classList.contains(class_name)) return;\r\n\t\tdom.classList.add(class_name);\r\n\t} else {\r\n\t\tif (!dom.classList.contains(class_name)) return;\r\n\t\tdom.classList.remove(class_name);\r\n\t}\r\n}\r\n", "/**\r\n * @param {HTMLElement} dom\r\n * @param {string} key\r\n * @param {string} value\r\n * @param {boolean} [important]\r\n */\r\nexport function set_style(dom, key, value, important) {\r\n\t// @ts-expect-error\r\n\tvar styles = (dom.__styles ??= {});\r\n\r\n\tif (styles[key] === value) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tstyles[key] = value;\r\n\r\n\tif (value == null) {\r\n\t\tdom.style.removeProperty(key);\r\n\t} else {\r\n\t\tdom.style.setProperty(key, value, important ? 'important' : '');\r\n\t}\r\n}\r\n", "/** @import { Raf } from '#client' */\r\nimport { noop } from '../shared/utils.js';\r\n\r\nimport { BROWSER } from 'esm-env';\r\n\r\nconst now = BROWSER ? () => performance.now() : () => Date.now();\r\n\r\n/** @type {Raf} */\r\nexport const raf = {\r\n\t// don't access requestAnimationFrame eagerly outside method\r\n\t// this allows basic testing of user code without JSDOM\r\n\t// bunder will eval and remove ternary when the user's app is built\r\n\ttick: /** @param {any} _ */ (_) => (BROWSER ? requestAnimationFrame : noop)(_),\r\n\tnow: () => now(),\r\n\ttasks: new Set()\r\n};\r\n", "/** @import { TaskCallback, Task, TaskEntry } from '#client' */\r\nimport { raf } from './timing.js';\r\n\r\n// TODO move this into timing.js where it probably belongs\r\n\r\n/**\r\n * @returns {void}\r\n */\r\nfunction run_tasks() {\r\n\t// use `raf.now()` instead of the `requestAnimationFrame` callback argument, because\r\n\t// otherwise things can get wonky https://github.com/sveltejs/svelte/pull/14541\r\n\tconst now = raf.now();\r\n\r\n\traf.tasks.forEach((task) => {\r\n\t\tif (!task.c(now)) {\r\n\t\t\traf.tasks.delete(task);\r\n\t\t\ttask.f();\r\n\t\t}\r\n\t});\r\n\r\n\tif (raf.tasks.size !== 0) {\r\n\t\traf.tick(run_tasks);\r\n\t}\r\n}\r\n\r\n/**\r\n * Creates a new task that runs on each raf frame\r\n * until it returns a falsy value or is aborted\r\n * @param {TaskCallback} callback\r\n * @returns {Task}\r\n */\r\nexport function loop(callback) {\r\n\t/** @type {TaskEntry} */\r\n\tlet task;\r\n\r\n\tif (raf.tasks.size === 0) {\r\n\t\traf.tick(run_tasks);\r\n\t}\r\n\r\n\treturn {\r\n\t\tpromise: new Promise((fulfill) => {\r\n\t\t\traf.tasks.add((task = { c: callback, f: fulfill }));\r\n\t\t}),\r\n\t\tabort() {\r\n\t\t\traf.tasks.delete(task);\r\n\t\t}\r\n\t};\r\n}\r\n", "/** @import { AnimateFn, Animation, AnimationConfig, EachItem, Effect, TransitionFn, TransitionManager } from '#client' */\r\nimport { noop, is_function } from '../../../shared/utils.js';\r\nimport { effect } from '../../reactivity/effects.js';\r\nimport {\r\n\tactive_effect,\r\n\tactive_reaction,\r\n\tset_active_effect,\r\n\tset_active_reaction,\r\n\tuntrack\r\n} from '../../runtime.js';\r\nimport { loop } from '../../loop.js';\r\nimport { should_intro } from '../../render.js';\r\nimport { current_each_item } from '../blocks/each.js';\r\nimport { TRANSITION_GLOBAL, TRANSITION_IN, TRANSITION_OUT } from '../../../../constants.js';\r\nimport { BLOCK_EFFECT, EFFECT_RAN, EFFECT_TRANSPARENT } from '../../constants.js';\r\nimport { queue_micro_task } from '../task.js';\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {'introstart' | 'introend' | 'outrostart' | 'outroend'} type\r\n * @returns {void}\r\n */\r\nfunction dispatch_event(element, type) {\r\n\telement.dispatchEvent(new CustomEvent(type));\r\n}\r\n\r\n/**\r\n * Converts a property to the camel-case format expected by Element.animate(), KeyframeEffect(), and KeyframeEffect.setKeyframes().\r\n * @param {string} style\r\n * @returns {string}\r\n */\r\nfunction css_property_to_camelcase(style) {\r\n\t// in compliance with spec\r\n\tif (style === 'float') return 'cssFloat';\r\n\tif (style === 'offset') return 'cssOffset';\r\n\r\n\t// do not rename custom @properties\r\n\tif (style.startsWith('--')) return style;\r\n\r\n\tconst parts = style.split('-');\r\n\tif (parts.length === 1) return parts[0];\r\n\treturn (\r\n\t\tparts[0] +\r\n\t\tparts\r\n\t\t\t.slice(1)\r\n\t\t\t.map(/** @param {any} word */ (word) => word[0].toUpperCase() + word.slice(1))\r\n\t\t\t.join('')\r\n\t);\r\n}\r\n\r\n/**\r\n * @param {string} css\r\n * @returns {Keyframe}\r\n */\r\nfunction css_to_keyframe(css) {\r\n\t/** @type {Keyframe} */\r\n\tconst keyframe = {};\r\n\tconst parts = css.split(';');\r\n\tfor (const part of parts) {\r\n\t\tconst [property, value] = part.split(':');\r\n\t\tif (!property || value === undefined) break;\r\n\r\n\t\tconst formatted_property = css_property_to_camelcase(property.trim());\r\n\t\tkeyframe[formatted_property] = value.trim();\r\n\t}\r\n\treturn keyframe;\r\n}\r\n\r\n/** @param {number} t */\r\nconst linear = (t) => t;\r\n\r\n/**\r\n * Called inside keyed `{#each ...}` blocks (as `$.animation(...)`). This creates an animation manager\r\n * and attaches it to the block, so that moves can be animated following reconciliation.\r\n * @template P\r\n * @param {Element} element\r\n * @param {() => AnimateFn<P | undefined>} get_fn\r\n * @param {(() => P) | null} get_params\r\n */\r\nexport function animation(element, get_fn, get_params) {\r\n\tvar item = /** @type {EachItem} */ (current_each_item);\r\n\r\n\t/** @type {DOMRect} */\r\n\tvar from;\r\n\r\n\t/** @type {DOMRect} */\r\n\tvar to;\r\n\r\n\t/** @type {Animation | undefined} */\r\n\tvar animation;\r\n\r\n\t/** @type {null | { position: string, width: string, height: string, transform: string }} */\r\n\tvar original_styles = null;\r\n\r\n\titem.a ??= {\r\n\t\telement,\r\n\t\tmeasure() {\r\n\t\t\tfrom = this.element.getBoundingClientRect();\r\n\t\t},\r\n\t\tapply() {\r\n\t\t\tanimation?.abort();\r\n\r\n\t\t\tto = this.element.getBoundingClientRect();\r\n\r\n\t\t\tif (\r\n\t\t\t\tfrom.left !== to.left ||\r\n\t\t\t\tfrom.right !== to.right ||\r\n\t\t\t\tfrom.top !== to.top ||\r\n\t\t\t\tfrom.bottom !== to.bottom\r\n\t\t\t) {\r\n\t\t\t\tconst options = get_fn()(this.element, { from, to }, get_params?.());\r\n\r\n\t\t\t\tanimation = animate(this.element, options, undefined, 1, () => {\r\n\t\t\t\t\tanimation?.abort();\r\n\t\t\t\t\tanimation = undefined;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tfix() {\r\n\t\t\t// If an animation is already running, transforming the element is likely to fail,\r\n\t\t\t// because the styles applied by the animation take precedence. In the case of crossfade,\r\n\t\t\t// that means the `translate(...)` of the crossfade transition overrules the `translate(...)`\r\n\t\t\t// we would apply below, leading to the element jumping somewhere to the top left.\r\n\t\t\tif (element.getAnimations().length) return;\r\n\r\n\t\t\t// It's important to destructure these to get fixed values - the object itself has getters,\r\n\t\t\t// and changing the style to 'absolute' can for example influence the width.\r\n\t\t\tvar { position, width, height } = getComputedStyle(element);\r\n\r\n\t\t\tif (position !== 'absolute' && position !== 'fixed') {\r\n\t\t\t\tvar style = /** @type {HTMLElement | SVGElement} */ (element).style;\r\n\r\n\t\t\t\toriginal_styles = {\r\n\t\t\t\t\tposition: style.position,\r\n\t\t\t\t\twidth: style.width,\r\n\t\t\t\t\theight: style.height,\r\n\t\t\t\t\ttransform: style.transform\r\n\t\t\t\t};\r\n\r\n\t\t\t\tstyle.position = 'absolute';\r\n\t\t\t\tstyle.width = width;\r\n\t\t\t\tstyle.height = height;\r\n\t\t\t\tvar to = element.getBoundingClientRect();\r\n\r\n\t\t\t\tif (from.left !== to.left || from.top !== to.top) {\r\n\t\t\t\t\tvar transform = `translate(${from.left - to.left}px, ${from.top - to.top}px)`;\r\n\t\t\t\t\tstyle.transform = style.transform ? `${style.transform} ${transform}` : transform;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tunfix() {\r\n\t\t\tif (original_styles) {\r\n\t\t\t\tvar style = /** @type {HTMLElement | SVGElement} */ (element).style;\r\n\r\n\t\t\t\tstyle.position = original_styles.position;\r\n\t\t\t\tstyle.width = original_styles.width;\r\n\t\t\t\tstyle.height = original_styles.height;\r\n\t\t\t\tstyle.transform = original_styles.transform;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// in the case of a `<svelte:element>`, it's possible for `$.animation(...)` to be called\r\n\t// when an animation manager already exists, if the tag changes. in that case, we need to\r\n\t// swap out the element rather than creating a new manager, in case it happened at the same\r\n\t// moment as a reconciliation\r\n\titem.a.element = element;\r\n}\r\n\r\n/**\r\n * Called inside block effects as `$.transition(...)`. This creates a transition manager and\r\n * attaches it to the current effect — later, inside `pause_effect` and `resume_effect`, we\r\n * use this to create `intro` and `outro` transitions.\r\n * @template P\r\n * @param {number} flags\r\n * @param {HTMLElement} element\r\n * @param {() => TransitionFn<P | undefined>} get_fn\r\n * @param {(() => P) | null} get_params\r\n * @returns {void}\r\n */\r\nexport function transition(flags, element, get_fn, get_params) {\r\n\tvar is_intro = (flags & TRANSITION_IN) !== 0;\r\n\tvar is_outro = (flags & TRANSITION_OUT) !== 0;\r\n\tvar is_both = is_intro && is_outro;\r\n\tvar is_global = (flags & TRANSITION_GLOBAL) !== 0;\r\n\r\n\t/** @type {'in' | 'out' | 'both'} */\r\n\tvar direction = is_both ? 'both' : is_intro ? 'in' : 'out';\r\n\r\n\t/** @type {AnimationConfig | ((opts: { direction: 'in' | 'out' }) => AnimationConfig) | undefined} */\r\n\tvar current_options;\r\n\r\n\tvar inert = element.inert;\r\n\r\n\t/** @type {Animation | undefined} */\r\n\tvar intro;\r\n\r\n\t/** @type {Animation | undefined} */\r\n\tvar outro;\r\n\r\n\tfunction get_options() {\r\n\t\tvar previous_reaction = active_reaction;\r\n\t\tvar previous_effect = active_effect;\r\n\t\tset_active_reaction(null);\r\n\t\tset_active_effect(null);\r\n\t\ttry {\r\n\t\t\t// If a transition is still ongoing, we use the existing options rather than generating\r\n\t\t\t// new ones. This ensures that reversible transitions reverse smoothly, rather than\r\n\t\t\t// jumping to a new spot because (for example) a different `duration` was used\r\n\t\t\treturn (current_options ??= get_fn()(element, get_params?.() ?? /** @type {P} */ ({}), {\r\n\t\t\t\tdirection\r\n\t\t\t}));\r\n\t\t} finally {\r\n\t\t\tset_active_reaction(previous_reaction);\r\n\t\t\tset_active_effect(previous_effect);\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {TransitionManager} */\r\n\tvar transition = {\r\n\t\tis_global,\r\n\t\tin() {\r\n\t\t\telement.inert = inert;\r\n\r\n\t\t\tif (!is_intro) {\r\n\t\t\t\toutro?.abort();\r\n\t\t\t\toutro?.reset?.();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!is_outro) {\r\n\t\t\t\t// if we intro then outro then intro again, we want to abort the first intro,\r\n\t\t\t\t// if it's not a bidirectional transition\r\n\t\t\t\tintro?.abort();\r\n\t\t\t}\r\n\r\n\t\t\tdispatch_event(element, 'introstart');\r\n\r\n\t\t\tintro = animate(element, get_options(), outro, 1, () => {\r\n\t\t\t\tdispatch_event(element, 'introend');\r\n\r\n\t\t\t\t// Ensure we cancel the animation to prevent leaking\r\n\t\t\t\tintro?.abort();\r\n\t\t\t\tintro = current_options = undefined;\r\n\t\t\t});\r\n\t\t},\r\n\t\tout(fn) {\r\n\t\t\tif (!is_outro) {\r\n\t\t\t\tfn?.();\r\n\t\t\t\tcurrent_options = undefined;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement.inert = true;\r\n\r\n\t\t\tdispatch_event(element, 'outrostart');\r\n\r\n\t\t\toutro = animate(element, get_options(), intro, 0, () => {\r\n\t\t\t\tdispatch_event(element, 'outroend');\r\n\t\t\t\tfn?.();\r\n\t\t\t});\r\n\t\t},\r\n\t\tstop: () => {\r\n\t\t\tintro?.abort();\r\n\t\t\toutro?.abort();\r\n\t\t}\r\n\t};\r\n\r\n\tvar e = /** @type {Effect} */ (active_effect);\r\n\r\n\t(e.transitions ??= []).push(transition);\r\n\r\n\t// if this is a local transition, we only want to run it if the parent (branch) effect's\r\n\t// parent (block) effect is where the state change happened. we can determine that by\r\n\t// looking at whether the block effect is currently initializing\r\n\tif (is_intro && should_intro) {\r\n\t\tvar run = is_global;\r\n\r\n\t\tif (!run) {\r\n\t\t\tvar block = /** @type {Effect | null} */ (e.parent);\r\n\r\n\t\t\t// skip over transparent blocks (e.g. snippets, else-if blocks)\r\n\t\t\twhile (block && (block.f & EFFECT_TRANSPARENT) !== 0) {\r\n\t\t\t\twhile ((block = block.parent)) {\r\n\t\t\t\t\tif ((block.f & BLOCK_EFFECT) !== 0) break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\trun = !block || (block.f & EFFECT_RAN) !== 0;\r\n\t\t}\r\n\r\n\t\tif (run) {\r\n\t\t\teffect(() => {\r\n\t\t\t\tuntrack(() => transition.in());\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Animates an element, according to the provided configuration\r\n * @param {Element} element\r\n * @param {AnimationConfig | ((opts: { direction: 'in' | 'out' }) => AnimationConfig)} options\r\n * @param {Animation | undefined} counterpart The corresponding intro/outro to this outro/intro\r\n * @param {number} t2 The target `t` value — `1` for intro, `0` for outro\r\n * @param {(() => void)} on_finish Called after successfully completing the animation\r\n * @returns {Animation}\r\n */\r\nfunction animate(element, options, counterpart, t2, on_finish) {\r\n\tvar is_intro = t2 === 1;\r\n\r\n\tif (is_function(options)) {\r\n\t\t// In the case of a deferred transition (such as `crossfade`), `option` will be\r\n\t\t// a function rather than an `AnimationConfig`. We need to call this function\r\n\t\t// once the DOM has been updated...\r\n\t\t/** @type {Animation} */\r\n\t\tvar a;\r\n\t\tvar aborted = false;\r\n\r\n\t\tqueue_micro_task(() => {\r\n\t\t\tif (aborted) return;\r\n\t\t\tvar o = options({ direction: is_intro ? 'in' : 'out' });\r\n\t\t\ta = animate(element, o, counterpart, t2, on_finish);\r\n\t\t});\r\n\r\n\t\t// ...but we want to do so without using `async`/`await` everywhere, so\r\n\t\t// we return a facade that allows everything to remain synchronous\r\n\t\treturn {\r\n\t\t\tabort: () => {\r\n\t\t\t\taborted = true;\r\n\t\t\t\ta?.abort();\r\n\t\t\t},\r\n\t\t\tdeactivate: () => a.deactivate(),\r\n\t\t\treset: () => a.reset(),\r\n\t\t\tt: () => a.t()\r\n\t\t};\r\n\t}\r\n\r\n\tcounterpart?.deactivate();\r\n\r\n\tif (!options?.duration) {\r\n\t\ton_finish();\r\n\r\n\t\treturn {\r\n\t\t\tabort: noop,\r\n\t\t\tdeactivate: noop,\r\n\t\t\treset: noop,\r\n\t\t\tt: () => t2\r\n\t\t};\r\n\t}\r\n\r\n\tconst { delay = 0, css, tick, easing = linear } = options;\r\n\r\n\tvar keyframes = [];\r\n\r\n\tif (is_intro && counterpart === undefined) {\r\n\t\tif (tick) {\r\n\t\t\ttick(0, 1); // TODO put in nested effect, to avoid interleaved reads/writes?\r\n\t\t}\r\n\r\n\t\tif (css) {\r\n\t\t\tvar styles = css_to_keyframe(css(0, 1));\r\n\t\t\tkeyframes.push(styles, styles);\r\n\t\t}\r\n\t}\r\n\r\n\tvar get_t = () => 1 - t2;\r\n\r\n\t// create a dummy animation that lasts as long as the delay (but with whatever devtools\r\n\t// multiplier is in effect). in the common case that it is `0`, we keep it anyway so that\r\n\t// the CSS keyframes aren't created until the DOM is updated\r\n\tvar animation = element.animate(keyframes, { duration: delay });\r\n\r\n\tanimation.onfinish = () => {\r\n\t\t// for bidirectional transitions, we start from the current position,\r\n\t\t// rather than doing a full intro/outro\r\n\t\tvar t1 = counterpart?.t() ?? 1 - t2;\r\n\t\tcounterpart?.abort();\r\n\r\n\t\tvar delta = t2 - t1;\r\n\t\tvar duration = /** @type {number} */ (options.duration) * Math.abs(delta);\r\n\t\tvar keyframes = [];\r\n\r\n\t\tif (duration > 0) {\r\n\t\t\tif (css) {\r\n\t\t\t\tvar n = Math.ceil(duration / (1000 / 60)); // `n` must be an integer, or we risk missing the `t2` value\r\n\r\n\t\t\t\tfor (var i = 0; i <= n; i += 1) {\r\n\t\t\t\t\tvar t = t1 + delta * easing(i / n);\r\n\t\t\t\t\tvar styles = css(t, 1 - t);\r\n\t\t\t\t\tkeyframes.push(css_to_keyframe(styles));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tget_t = () => {\r\n\t\t\t\tvar time = /** @type {number} */ (\r\n\t\t\t\t\t/** @type {globalThis.Animation} */ (animation).currentTime\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn t1 + delta * easing(time / duration);\r\n\t\t\t};\r\n\r\n\t\t\tif (tick) {\r\n\t\t\t\tloop(() => {\r\n\t\t\t\t\tif (animation.playState !== 'running') return false;\r\n\r\n\t\t\t\t\tvar t = get_t();\r\n\t\t\t\t\ttick(t, 1 - t);\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tanimation = element.animate(keyframes, { duration, fill: 'forwards' });\r\n\r\n\t\tanimation.onfinish = () => {\r\n\t\t\tget_t = () => t2;\r\n\t\t\ttick?.(t2, 1 - t2);\r\n\t\t\ton_finish();\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tabort: () => {\r\n\t\t\tif (animation) {\r\n\t\t\t\tanimation.cancel();\r\n\t\t\t\t// This prevents memory leaks in Chromium\r\n\t\t\t\tanimation.effect = null;\r\n\t\t\t\t// This prevents onfinish to be launched after cancel(),\r\n\t\t\t\t// which can happen in some rare cases\r\n\t\t\t\t// see https://github.com/sveltejs/svelte/issues/13681\r\n\t\t\t\tanimation.onfinish = noop;\r\n\t\t\t}\r\n\t\t},\r\n\t\tdeactivate: () => {\r\n\t\t\ton_finish = noop;\r\n\t\t},\r\n\t\treset: () => {\r\n\t\t\tif (t2 === 0) {\r\n\t\t\t\ttick?.(1, 0);\r\n\t\t\t}\r\n\t\t},\r\n\t\tt: () => get_t()\r\n\t};\r\n}\r\n", "import { listen } from './shared.js';\r\n\r\n/**\r\n * @param {(activeElement: Element | null) => void} update\r\n * @returns {void}\r\n */\r\nexport function bind_active_element(update) {\r\n\tlisten(document, ['focusin', 'focusout'], (event) => {\r\n\t\tif (event && event.type === 'focusout' && /** @type {FocusEvent} */ (event).relatedTarget) {\r\n\t\t\t// The tests still pass if we remove this, because of JSDOM limitations, but it is necessary\r\n\t\t\t// to avoid temporarily resetting to `document.body`\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tupdate(document.activeElement);\r\n\t});\r\n}\r\n", "import { DEV } from 'esm-env';\r\nimport { render_effect, teardown } from '../../../reactivity/effects.js';\r\nimport { listen_to_event_and_reset_event } from './shared.js';\r\nimport * as e from '../../../errors.js';\r\nimport { is } from '../../../proxy.js';\r\nimport { queue_micro_task } from '../../task.js';\r\nimport { hydrating } from '../../hydration.js';\r\nimport { is_runes, untrack } from '../../../runtime.js';\r\n\r\n/**\r\n * @param {HTMLInputElement} input\r\n * @param {() => unknown} get\r\n * @param {(value: unknown) => void} set\r\n * @returns {void}\r\n */\r\nexport function bind_value(input, get, set = get) {\r\n\tvar runes = is_runes();\r\n\r\n\tlisten_to_event_and_reset_event(input, 'input', (is_reset) => {\r\n\t\tif (DEV && input.type === 'checkbox') {\r\n\t\t\t// TODO should this happen in prod too?\r\n\t\t\te.bind_invalid_checkbox_value();\r\n\t\t}\r\n\r\n\t\t/** @type {any} */\r\n\t\tvar value = is_reset ? input.defaultValue : input.value;\r\n\t\tvalue = is_numberlike_input(input) ? to_number(value) : value;\r\n\t\tset(value);\r\n\r\n\t\t// In runes mode, respect any validation in accessors (doesn't apply in legacy mode,\r\n\t\t// because we use mutable state which ensures the render effect always runs)\r\n\t\tif (runes && value !== (value = get())) {\r\n\t\t\tvar start = input.selectionStart;\r\n\t\t\tvar end = input.selectionEnd;\r\n\r\n\t\t\t// the value is coerced on assignment\r\n\t\t\tinput.value = value ?? '';\r\n\r\n\t\t\t// Restore selection\r\n\t\t\tif (end !== null) {\r\n\t\t\t\tinput.selectionStart = start;\r\n\t\t\t\tinput.selectionEnd = Math.min(end, input.value.length);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tif (\r\n\t\t// If we are hydrating and the value has since changed,\r\n\t\t// then use the updated value from the input instead.\r\n\t\t(hydrating && input.defaultValue !== input.value) ||\r\n\t\t// If defaultValue is set, then value == defaultValue\r\n\t\t// TODO Svelte 6: remove input.value check and set to empty string?\r\n\t\t(untrack(get) == null && input.value)\r\n\t) {\r\n\t\tset(is_numberlike_input(input) ? to_number(input.value) : input.value);\r\n\t}\r\n\r\n\trender_effect(() => {\r\n\t\tif (DEV && input.type === 'checkbox') {\r\n\t\t\t// TODO should this happen in prod too?\r\n\t\t\te.bind_invalid_checkbox_value();\r\n\t\t}\r\n\r\n\t\tvar value = get();\r\n\r\n\t\tif (is_numberlike_input(input) && value === to_number(input.value)) {\r\n\t\t\t// handles 0 vs 00 case (see https://github.com/sveltejs/svelte/issues/9959)\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (input.type === 'date' && !value && !input.value) {\r\n\t\t\t// Handles the case where a temporarily invalid date is set (while typing, for example with a leading 0 for the day)\r\n\t\t\t// and prevents this state from clearing the other parts of the date input (see https://github.com/sveltejs/svelte/issues/7897)\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// don't set the value of the input if it's the same to allow\r\n\t\t// minlength to work properly\r\n\t\tif (value !== input.value) {\r\n\t\t\t// @ts-expect-error the value is coerced on assignment\r\n\t\t\tinput.value = value ?? '';\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/** @type {Set<HTMLInputElement[]>} */\r\nconst pending = new Set();\r\n\r\n/**\r\n * @param {HTMLInputElement[]} inputs\r\n * @param {null | [number]} group_index\r\n * @param {HTMLInputElement} input\r\n * @param {() => unknown} get\r\n * @param {(value: unknown) => void} set\r\n * @returns {void}\r\n */\r\nexport function bind_group(inputs, group_index, input, get, set = get) {\r\n\tvar is_checkbox = input.getAttribute('type') === 'checkbox';\r\n\tvar binding_group = inputs;\r\n\r\n\t// needs to be let or related code isn't treeshaken out if it's always false\r\n\tlet hydration_mismatch = false;\r\n\r\n\tif (group_index !== null) {\r\n\t\tfor (var index of group_index) {\r\n\t\t\t// @ts-expect-error\r\n\t\t\tbinding_group = binding_group[index] ??= [];\r\n\t\t}\r\n\t}\r\n\r\n\tbinding_group.push(input);\r\n\r\n\tlisten_to_event_and_reset_event(\r\n\t\tinput,\r\n\t\t'change',\r\n\t\t() => {\r\n\t\t\t// @ts-ignore\r\n\t\t\tvar value = input.__value;\r\n\r\n\t\t\tif (is_checkbox) {\r\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\r\n\t\t\t}\r\n\r\n\t\t\tset(value);\r\n\t\t},\r\n\t\t// TODO better default value handling\r\n\t\t() => set(is_checkbox ? [] : null)\r\n\t);\r\n\r\n\trender_effect(() => {\r\n\t\tvar value = get();\r\n\r\n\t\t// If we are hydrating and the value has since changed, then use the update value\r\n\t\t// from the input instead.\r\n\t\tif (hydrating && input.defaultChecked !== input.checked) {\r\n\t\t\thydration_mismatch = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (is_checkbox) {\r\n\t\t\tvalue = value || [];\r\n\t\t\t// @ts-ignore\r\n\t\t\tinput.checked = value.includes(input.__value);\r\n\t\t} else {\r\n\t\t\t// @ts-ignore\r\n\t\t\tinput.checked = is(input.__value, value);\r\n\t\t}\r\n\t});\r\n\r\n\tteardown(() => {\r\n\t\tvar index = binding_group.indexOf(input);\r\n\r\n\t\tif (index !== -1) {\r\n\t\t\tbinding_group.splice(index, 1);\r\n\t\t}\r\n\t});\r\n\r\n\tif (!pending.has(binding_group)) {\r\n\t\tpending.add(binding_group);\r\n\r\n\t\tqueue_micro_task(() => {\r\n\t\t\t// necessary to maintain binding group order in all insertion scenarios\r\n\t\t\tbinding_group.sort((a, b) => (a.compareDocumentPosition(b) === 4 ? -1 : 1));\r\n\t\t\tpending.delete(binding_group);\r\n\t\t});\r\n\t}\r\n\r\n\tqueue_micro_task(() => {\r\n\t\tif (hydration_mismatch) {\r\n\t\t\tvar value;\r\n\r\n\t\t\tif (is_checkbox) {\r\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\r\n\t\t\t} else {\r\n\t\t\t\tvar hydration_input = binding_group.find((input) => input.checked);\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tvalue = hydration_input?.__value;\r\n\t\t\t}\r\n\r\n\t\t\tset(value);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {HTMLInputElement} input\r\n * @param {() => unknown} get\r\n * @param {(value: unknown) => void} set\r\n * @returns {void}\r\n */\r\nexport function bind_checked(input, get, set = get) {\r\n\tlisten_to_event_and_reset_event(input, 'change', (is_reset) => {\r\n\t\tvar value = is_reset ? input.defaultChecked : input.checked;\r\n\t\tset(value);\r\n\t});\r\n\r\n\tif (\r\n\t\t// If we are hydrating and the value has since changed,\r\n\t\t// then use the update value from the input instead.\r\n\t\t(hydrating && input.defaultChecked !== input.checked) ||\r\n\t\t// If defaultChecked is set, then checked == defaultChecked\r\n\t\tuntrack(get) == null\r\n\t) {\r\n\t\tset(input.checked);\r\n\t}\r\n\r\n\trender_effect(() => {\r\n\t\tvar value = get();\r\n\t\tinput.checked = Boolean(value);\r\n\t});\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {Array<HTMLInputElement>} group\r\n * @param {V} __value\r\n * @param {boolean} checked\r\n * @returns {V[]}\r\n */\r\nfunction get_binding_group_value(group, __value, checked) {\r\n\tvar value = new Set();\r\n\r\n\tfor (var i = 0; i < group.length; i += 1) {\r\n\t\tif (group[i].checked) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tvalue.add(group[i].__value);\r\n\t\t}\r\n\t}\r\n\r\n\tif (!checked) {\r\n\t\tvalue.delete(__value);\r\n\t}\r\n\r\n\treturn Array.from(value);\r\n}\r\n\r\n/**\r\n * @param {HTMLInputElement} input\r\n */\r\nfunction is_numberlike_input(input) {\r\n\tvar type = input.type;\r\n\treturn type === 'number' || type === 'range';\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n */\r\nfunction to_number(value) {\r\n\treturn value === '' ? null : +value;\r\n}\r\n\r\n/**\r\n * @param {HTMLInputElement} input\r\n * @param {() => FileList | null} get\r\n * @param {(value: FileList | null) => void} set\r\n */\r\nexport function bind_files(input, get, set = get) {\r\n\tlisten_to_event_and_reset_event(input, 'change', () => {\r\n\t\tset(input.files);\r\n\t});\r\n\r\n\trender_effect(() => {\r\n\t\tinput.files = get();\r\n\t});\r\n}\r\n", "import { hydrating } from '../../hydration.js';\r\nimport { render_effect, effect, teardown } from '../../../reactivity/effects.js';\r\nimport { listen } from './shared.js';\r\n\r\n/** @param {TimeRanges} ranges */\r\nfunction time_ranges_to_array(ranges) {\r\n\tvar array = [];\r\n\r\n\tfor (var i = 0; i < ranges.length; i += 1) {\r\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\r\n\t}\r\n\r\n\treturn array;\r\n}\r\n\r\n/**\r\n * @param {HTMLVideoElement | HTMLAudioElement} media\r\n * @param {() => number | undefined} get\r\n * @param {(value: number) => void} set\r\n * @returns {void}\r\n */\r\nexport function bind_current_time(media, get, set = get) {\r\n\t/** @type {number} */\r\n\tvar raf_id;\r\n\t/** @type {number} */\r\n\tvar value;\r\n\r\n\t// Ideally, listening to timeupdate would be enough, but it fires too infrequently for the currentTime\r\n\t// binding, which is why we use a raf loop, too. We additionally still listen to timeupdate because\r\n\t// the user could be scrubbing through the video using the native controls when the media is paused.\r\n\tvar callback = () => {\r\n\t\tcancelAnimationFrame(raf_id);\r\n\r\n\t\tif (!media.paused) {\r\n\t\t\traf_id = requestAnimationFrame(callback);\r\n\t\t}\r\n\r\n\t\tvar next_value = media.currentTime;\r\n\t\tif (value !== next_value) {\r\n\t\t\tset((value = next_value));\r\n\t\t}\r\n\t};\r\n\r\n\traf_id = requestAnimationFrame(callback);\r\n\tmedia.addEventListener('timeupdate', callback);\r\n\r\n\trender_effect(() => {\r\n\t\tvar next_value = Number(get());\r\n\r\n\t\tif (value !== next_value && !isNaN(/** @type {any} */ (next_value))) {\r\n\t\t\tmedia.currentTime = value = next_value;\r\n\t\t}\r\n\t});\r\n\r\n\tteardown(() => cancelAnimationFrame(raf_id));\r\n}\r\n\r\n/**\r\n * @param {HTMLVideoElement | HTMLAudioElement} media\r\n * @param {(array: Array<{ start: number; end: number }>) => void} set\r\n */\r\nexport function bind_buffered(media, set) {\r\n\tlisten(media, ['loadedmetadata', 'progress'], () => set(time_ranges_to_array(media.buffered)));\r\n}\r\n\r\n/**\r\n * @param {HTMLVideoElement | HTMLAudioElement} media\r\n * @param {(array: Array<{ start: number; end: number }>) => void} set\r\n */\r\nexport function bind_seekable(media, set) {\r\n\tlisten(media, ['loadedmetadata'], () => set(time_ranges_to_array(media.seekable)));\r\n}\r\n\r\n/**\r\n * @param {HTMLVideoElement | HTMLAudioElement} media\r\n * @param {(array: Array<{ start: number; end: number }>) => void} set\r\n */\r\nexport function bind_played(media, set) {\r\n\tlisten(media, ['timeupdate'], () => set(time_ranges_to_array(media.played)));\r\n}\r\n\r\n/**\r\n * @param {HTMLVideoElement | HTMLAudioElement} media\r\n * @param {(seeking: boolean) => void} set\r\n */\r\nexport function bind_seeking(media, set) {\r\n\tlisten(media, ['seeking', 'seeked'], () => set(media.seeking));\r\n}\r\n\r\n/**\r\n * @param {HTMLVideoElement | HTMLAudioElement} media\r\n * @param {(seeking: boolean) => void} set\r\n */\r\nexport function bind_ended(media, set) {\r\n\tlisten(media, ['timeupdate', 'ended'], () => set(media.ended));\r\n}\r\n\r\n/**\r\n * @param {HTMLVideoElement | HTMLAudioElement} media\r\n * @param {(ready_state: number) => void} set\r\n */\r\nexport function bind_ready_state(media, set) {\r\n\tlisten(\r\n\t\tmedia,\r\n\t\t['loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'emptied'],\r\n\t\t() => set(media.readyState)\r\n\t);\r\n}\r\n\r\n/**\r\n * @param {HTMLVideoElement | HTMLAudioElement} media\r\n * @param {() => number | undefined} get\r\n * @param {(playback_rate: number) => void} set\r\n */\r\nexport function bind_playback_rate(media, get, set = get) {\r\n\t// Needs to happen after element is inserted into the dom (which is guaranteed by using effect),\r\n\t// else playback will be set back to 1 by the browser\r\n\teffect(() => {\r\n\t\tvar value = Number(get());\r\n\r\n\t\tif (value !== media.playbackRate && !isNaN(value)) {\r\n\t\t\tmedia.playbackRate = value;\r\n\t\t}\r\n\t});\r\n\r\n\t// Start listening to ratechange events after the element is inserted into the dom,\r\n\t// else playback will be set to 1 by the browser\r\n\teffect(() => {\r\n\t\tlisten(media, ['ratechange'], () => {\r\n\t\t\tset(media.playbackRate);\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {HTMLVideoElement | HTMLAudioElement} media\r\n * @param {() => boolean | undefined} get\r\n * @param {(paused: boolean) => void} set\r\n */\r\nexport function bind_paused(media, get, set = get) {\r\n\tvar paused = get();\r\n\r\n\tvar update = () => {\r\n\t\tif (paused !== media.paused) {\r\n\t\t\tset((paused = media.paused));\r\n\t\t}\r\n\t};\r\n\r\n\t// If someone switches the src while media is playing, the player will pause.\r\n\t// Listen to the canplay event to get notified of this situation.\r\n\tlisten(media, ['play', 'pause', 'canplay'], update, paused == null);\r\n\r\n\t// Needs to be an effect to ensure media element is mounted: else, if paused is `false` (i.e. should play right away)\r\n\t// a \"The play() request was interrupted by a new load request\" error would be thrown because the resource isn't loaded yet.\r\n\teffect(() => {\r\n\t\tif ((paused = !!get()) !== media.paused) {\r\n\t\t\tif (paused) {\r\n\t\t\t\tmedia.pause();\r\n\t\t\t} else {\r\n\t\t\t\tmedia.play().catch(() => {\r\n\t\t\t\t\tset((paused = true));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {HTMLVideoElement | HTMLAudioElement} media\r\n * @param {() => number | undefined} get\r\n * @param {(volume: number) => void} set\r\n */\r\nexport function bind_volume(media, get, set = get) {\r\n\tvar callback = () => {\r\n\t\tset(media.volume);\r\n\t};\r\n\r\n\tif (get() == null) {\r\n\t\tcallback();\r\n\t}\r\n\r\n\tlisten(media, ['volumechange'], callback, false);\r\n\r\n\trender_effect(() => {\r\n\t\tvar value = Number(get());\r\n\r\n\t\tif (value !== media.volume && !isNaN(value)) {\r\n\t\t\tmedia.volume = value;\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {HTMLVideoElement | HTMLAudioElement} media\r\n * @param {() => boolean | undefined} get\r\n * @param {(muted: boolean) => void} set\r\n */\r\nexport function bind_muted(media, get, set = get) {\r\n\tvar callback = () => {\r\n\t\tset(media.muted);\r\n\t};\r\n\r\n\tif (get() == null) {\r\n\t\tcallback();\r\n\t}\r\n\r\n\tlisten(media, ['volumechange'], callback, false);\r\n\r\n\trender_effect(() => {\r\n\t\tvar value = !!get();\r\n\r\n\t\tif (media.muted !== value) media.muted = value;\r\n\t});\r\n}\r\n", "import { listen } from './shared.js';\r\n\r\n/**\r\n * @param {(online: boolean) => void} update\r\n * @returns {void}\r\n */\r\nexport function bind_online(update) {\r\n\tlisten(window, ['online', 'offline'], () => {\r\n\t\tupdate(navigator.onLine);\r\n\t});\r\n}\r\n", "import { teardown } from '../../../reactivity/effects.js';\r\nimport { get_descriptor } from '../../../../shared/utils.js';\r\n\r\n/**\r\n * Makes an `export`ed (non-prop) variable available on the `$$props` object\r\n * so that consumers can do `bind:x` on the component.\r\n * @template V\r\n * @param {Record<string, unknown>} props\r\n * @param {string} prop\r\n * @param {V} value\r\n * @returns {void}\r\n */\r\nexport function bind_prop(props, prop, value) {\r\n\tvar desc = get_descriptor(props, prop);\r\n\r\n\tif (desc && desc.set) {\r\n\t\tprops[prop] = value;\r\n\t\tteardown(() => {\r\n\t\t\tprops[prop] = null;\r\n\t\t});\r\n\t}\r\n}\r\n", "import { effect } from '../../../reactivity/effects.js';\r\nimport { listen_to_event_and_reset_event } from './shared.js';\r\nimport { untrack } from '../../../runtime.js';\r\nimport { is } from '../../../proxy.js';\r\n\r\n/**\r\n * Selects the correct option(s) (depending on whether this is a multiple select)\r\n * @template V\r\n * @param {HTMLSelectElement} select\r\n * @param {V} value\r\n * @param {boolean} [mounting]\r\n */\r\nexport function select_option(select, value, mounting) {\r\n\tif (select.multiple) {\r\n\t\treturn select_options(select, value);\r\n\t}\r\n\r\n\tfor (var option of select.options) {\r\n\t\tvar option_value = get_option_value(option);\r\n\t\tif (is(option_value, value)) {\r\n\t\t\toption.selected = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tif (!mounting || value !== undefined) {\r\n\t\tselect.selectedIndex = -1; // no option should be selected\r\n\t}\r\n}\r\n\r\n/**\r\n * Selects the correct option(s) if `value` is given,\r\n * and then sets up a mutation observer to sync the\r\n * current selection to the dom when it changes. Such\r\n * changes could for example occur when options are\r\n * inside an `#each` block.\r\n * @template V\r\n * @param {HTMLSelectElement} select\r\n * @param {() => V} [get_value]\r\n */\r\nexport function init_select(select, get_value) {\r\n\tlet mounting = true;\r\n\teffect(() => {\r\n\t\tif (get_value) {\r\n\t\t\tselect_option(select, untrack(get_value), mounting);\r\n\t\t}\r\n\t\tmounting = false;\r\n\r\n\t\tvar observer = new MutationObserver(() => {\r\n\t\t\t// @ts-ignore\r\n\t\t\tvar value = select.__value;\r\n\t\t\tselect_option(select, value);\r\n\t\t\t// Deliberately don't update the potential binding value,\r\n\t\t\t// the model should be preserved unless explicitly changed\r\n\t\t});\r\n\r\n\t\tobserver.observe(select, {\r\n\t\t\t// Listen to option element changes\r\n\t\t\tchildList: true,\r\n\t\t\tsubtree: true, // because of <optgroup>\r\n\t\t\t// Listen to option element value attribute changes\r\n\t\t\t// (doesn't get notified of select value changes,\r\n\t\t\t// because that property is not reflected as an attribute)\r\n\t\t\tattributes: true,\r\n\t\t\tattributeFilter: ['value']\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tobserver.disconnect();\r\n\t\t};\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {HTMLSelectElement} select\r\n * @param {() => unknown} get\r\n * @param {(value: unknown) => void} set\r\n * @returns {void}\r\n */\r\nexport function bind_select_value(select, get, set = get) {\r\n\tvar mounting = true;\r\n\r\n\tlisten_to_event_and_reset_event(select, 'change', (is_reset) => {\r\n\t\tvar query = is_reset ? '[selected]' : ':checked';\r\n\t\t/** @type {unknown} */\r\n\t\tvar value;\r\n\r\n\t\tif (select.multiple) {\r\n\t\t\tvalue = [].map.call(select.querySelectorAll(query), get_option_value);\r\n\t\t} else {\r\n\t\t\t/** @type {HTMLOptionElement | null} */\r\n\t\t\tvar selected_option =\r\n\t\t\t\tselect.querySelector(query) ??\r\n\t\t\t\t// will fall back to first non-disabled option if no option is selected\r\n\t\t\t\tselect.querySelector('option:not([disabled])');\r\n\t\t\tvalue = selected_option && get_option_value(selected_option);\r\n\t\t}\r\n\r\n\t\tset(value);\r\n\t});\r\n\r\n\t// Needs to be an effect, not a render_effect, so that in case of each loops the logic runs after the each block has updated\r\n\teffect(() => {\r\n\t\tvar value = get();\r\n\t\tselect_option(select, value, mounting);\r\n\r\n\t\t// Mounting and value undefined -> take selection from dom\r\n\t\tif (mounting && value === undefined) {\r\n\t\t\t/** @type {HTMLOptionElement | null} */\r\n\t\t\tvar selected_option = select.querySelector(':checked');\r\n\t\t\tif (selected_option !== null) {\r\n\t\t\t\tvalue = get_option_value(selected_option);\r\n\t\t\t\tset(value);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// @ts-ignore\r\n\t\tselect.__value = value;\r\n\t\tmounting = false;\r\n\t});\r\n\r\n\t// don't pass get_value, we already initialize it in the effect above\r\n\tinit_select(select);\r\n}\r\n\r\n/**\r\n * @template V\r\n * @param {HTMLSelectElement} select\r\n * @param {V} value\r\n */\r\nfunction select_options(select, value) {\r\n\tfor (var option of select.options) {\r\n\t\t// @ts-ignore\r\n\t\toption.selected = ~value.indexOf(get_option_value(option));\r\n\t}\r\n}\r\n\r\n/** @param {HTMLOptionElement} option */\r\nfunction get_option_value(option) {\r\n\t// __value only exists if the <option> has a value attribute\r\n\tif ('__value' in option) {\r\n\t\treturn option.__value;\r\n\t} else {\r\n\t\treturn option.value;\r\n\t}\r\n}\r\n", "import { effect, teardown } from '../../../reactivity/effects.js';\r\nimport { untrack } from '../../../runtime.js';\r\n\r\n/**\r\n * Resize observer singleton.\r\n * One listener per element only!\r\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\r\n */\r\nclass ResizeObserverSingleton {\r\n\t/** */\r\n\t#listeners = new WeakMap();\r\n\r\n\t/** @type {ResizeObserver | undefined} */\r\n\t#observer;\r\n\r\n\t/** @type {ResizeObserverOptions} */\r\n\t#options;\r\n\r\n\t/** @static */\r\n\tstatic entries = new WeakMap();\r\n\r\n\t/** @param {ResizeObserverOptions} options */\r\n\tconstructor(options) {\r\n\t\tthis.#options = options;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Element} element\r\n\t * @param {(entry: ResizeObserverEntry) => any} listener\r\n\t */\r\n\tobserve(element, listener) {\r\n\t\tvar listeners = this.#listeners.get(element) || new Set();\r\n\t\tlisteners.add(listener);\r\n\r\n\t\tthis.#listeners.set(element, listeners);\r\n\t\tthis.#getObserver().observe(element, this.#options);\r\n\r\n\t\treturn () => {\r\n\t\t\tvar listeners = this.#listeners.get(element);\r\n\t\t\tlisteners.delete(listener);\r\n\r\n\t\t\tif (listeners.size === 0) {\r\n\t\t\t\tthis.#listeners.delete(element);\r\n\t\t\t\t/** @type {ResizeObserver} */ (this.#observer).unobserve(element);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t#getObserver() {\r\n\t\treturn (\r\n\t\t\tthis.#observer ??\r\n\t\t\t(this.#observer = new ResizeObserver(\r\n\t\t\t\t/** @param {any} entries */ (entries) => {\r\n\t\t\t\t\tfor (var entry of entries) {\r\n\t\t\t\t\t\tResizeObserverSingleton.entries.set(entry.target, entry);\r\n\t\t\t\t\t\tfor (var listener of this.#listeners.get(entry.target) || []) {\r\n\t\t\t\t\t\t\tlistener(entry);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t))\r\n\t\t);\r\n\t}\r\n}\r\n\r\nvar resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\r\n\tbox: 'content-box'\r\n});\r\n\r\nvar resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\r\n\tbox: 'border-box'\r\n});\r\n\r\nvar resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\r\n\tbox: 'device-pixel-content-box'\r\n});\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {'contentRect' | 'contentBoxSize' | 'borderBoxSize' | 'devicePixelContentBoxSize'} type\r\n * @param {(entry: keyof ResizeObserverEntry) => void} set\r\n */\r\nexport function bind_resize_observer(element, type, set) {\r\n\tvar observer =\r\n\t\ttype === 'contentRect' || type === 'contentBoxSize'\r\n\t\t\t? resize_observer_content_box\r\n\t\t\t: type === 'borderBoxSize'\r\n\t\t\t\t? resize_observer_border_box\r\n\t\t\t\t: resize_observer_device_pixel_content_box;\r\n\r\n\tvar unsub = observer.observe(element, /** @param {any} entry */ (entry) => set(entry[type]));\r\n\tteardown(unsub);\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} element\r\n * @param {'clientWidth' | 'clientHeight' | 'offsetWidth' | 'offsetHeight'} type\r\n * @param {(size: number) => void} set\r\n */\r\nexport function bind_element_size(element, type, set) {\r\n\tvar unsub = resize_observer_border_box.observe(element, () => set(element[type]));\r\n\r\n\teffect(() => {\r\n\t\t// The update could contain reads which should be ignored\r\n\t\tuntrack(() => set(element[type]));\r\n\t\treturn unsub;\r\n\t});\r\n}\r\n", "import { STATE_SYMBOL } from '../../../constants.js';\r\nimport { effect, render_effect } from '../../../reactivity/effects.js';\r\nimport { untrack } from '../../../runtime.js';\r\nimport { queue_micro_task } from '../../task.js';\r\n\r\n/**\r\n * @param {any} bound_value\r\n * @param {Element} element_or_component\r\n * @returns {boolean}\r\n */\r\nfunction is_bound_this(bound_value, element_or_component) {\r\n\treturn (\r\n\t\tbound_value === element_or_component || bound_value?.[STATE_SYMBOL] === element_or_component\r\n\t);\r\n}\r\n\r\n/**\r\n * @param {any} element_or_component\r\n * @param {(value: unknown, ...parts: unknown[]) => void} update\r\n * @param {(...parts: unknown[]) => unknown} get_value\r\n * @param {() => unknown[]} [get_parts] Set if the this binding is used inside an each block,\r\n * \t\t\t\t\t\t\t\t\t\treturns all the parts of the each block context that are used in the expression\r\n * @returns {void}\r\n */\r\nexport function bind_this(element_or_component = {}, update, get_value, get_parts) {\r\n\teffect(() => {\r\n\t\t/** @type {unknown[]} */\r\n\t\tvar old_parts;\r\n\r\n\t\t/** @type {unknown[]} */\r\n\t\tvar parts;\r\n\r\n\t\trender_effect(() => {\r\n\t\t\told_parts = parts;\r\n\t\t\t// We only track changes to the parts, not the value itself to avoid unnecessary reruns.\r\n\t\t\tparts = get_parts?.() || [];\r\n\r\n\t\t\tuntrack(() => {\r\n\t\t\t\tif (element_or_component !== get_value(...parts)) {\r\n\t\t\t\t\tupdate(element_or_component, ...parts);\r\n\t\t\t\t\t// If this is an effect rerun (cause: each block context changes), then nullfiy the binding at\r\n\t\t\t\t\t// the previous position if it isn't already taken over by a different effect.\r\n\t\t\t\t\tif (old_parts && is_bound_this(get_value(...old_parts), element_or_component)) {\r\n\t\t\t\t\t\tupdate(null, ...old_parts);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\t// We cannot use effects in the teardown phase, we we use a microtask instead.\r\n\t\t\tqueue_micro_task(() => {\r\n\t\t\t\tif (parts && is_bound_this(get_value(...parts), element_or_component)) {\r\n\t\t\t\t\tupdate(null, ...parts);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\t});\r\n\r\n\treturn element_or_component;\r\n}\r\n", "import { render_effect, teardown } from '../../../reactivity/effects.js';\r\nimport { listen } from './shared.js';\r\n\r\n/**\r\n * @param {'innerHTML' | 'textContent' | 'innerText'} property\r\n * @param {HTMLElement} element\r\n * @param {() => unknown} get\r\n * @param {(value: unknown) => void} set\r\n * @returns {void}\r\n */\r\nexport function bind_content_editable(property, element, get, set = get) {\r\n\telement.addEventListener('input', () => {\r\n\t\t// @ts-ignore\r\n\t\tset(element[property]);\r\n\t});\r\n\r\n\trender_effect(() => {\r\n\t\tvar value = get();\r\n\r\n\t\tif (element[property] !== value) {\r\n\t\t\tif (value == null) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tvar non_null_value = element[property];\r\n\t\t\t\tset(non_null_value);\r\n\t\t\t} else {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\telement[property] = value + '';\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {string} property\r\n * @param {string} event_name\r\n * @param {Element} element\r\n * @param {(value: unknown) => void} set\r\n * @param {() => unknown} [get]\r\n * @returns {void}\r\n */\r\nexport function bind_property(property, event_name, element, set, get) {\r\n\tvar handler = () => {\r\n\t\t// @ts-ignore\r\n\t\tset(element[property]);\r\n\t};\r\n\r\n\telement.addEventListener(event_name, handler);\r\n\r\n\tif (get) {\r\n\t\trender_effect(() => {\r\n\t\t\t// @ts-ignore\r\n\t\t\telement[property] = get();\r\n\t\t});\r\n\t} else {\r\n\t\thandler();\r\n\t}\r\n\r\n\t// @ts-ignore\r\n\tif (element === document.body || element === window || element === document) {\r\n\t\tteardown(() => {\r\n\t\t\telement.removeEventListener(event_name, handler);\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} element\r\n * @param {(value: unknown) => void} set\r\n * @returns {void}\r\n */\r\nexport function bind_focused(element, set) {\r\n\tlisten(element, ['focus', 'blur'], () => {\r\n\t\tset(element === document.activeElement);\r\n\t});\r\n}\r\n", "import { effect, render_effect, teardown } from '../../../reactivity/effects.js';\r\nimport { listen, without_reactive_context } from './shared.js';\r\n\r\n/**\r\n * @param {'x' | 'y'} type\r\n * @param {() => number} get\r\n * @param {(value: number) => void} set\r\n * @returns {void}\r\n */\r\nexport function bind_window_scroll(type, get, set = get) {\r\n\tvar is_scrolling_x = type === 'x';\r\n\r\n\tvar target_handler = () =>\r\n\t\twithout_reactive_context(() => {\r\n\t\t\tscrolling = true;\r\n\t\t\tclearTimeout(timeout);\r\n\t\t\ttimeout = setTimeout(clear, 100); // TODO use scrollend event if supported (or when supported everywhere?)\r\n\r\n\t\t\tset(window[is_scrolling_x ? 'scrollX' : 'scrollY']);\r\n\t\t});\r\n\r\n\taddEventListener('scroll', target_handler, {\r\n\t\tpassive: true\r\n\t});\r\n\r\n\tvar scrolling = false;\r\n\r\n\t/** @type {ReturnType<typeof setTimeout>} */\r\n\tvar timeout;\r\n\tvar clear = () => {\r\n\t\tscrolling = false;\r\n\t};\r\n\tvar first = true;\r\n\r\n\trender_effect(() => {\r\n\t\tvar latest_value = get();\r\n\t\t// Don't scroll to the initial value for accessibility reasons\r\n\t\tif (first) {\r\n\t\t\tfirst = false;\r\n\t\t} else if (!scrolling && latest_value != null) {\r\n\t\t\tscrolling = true;\r\n\t\t\tclearTimeout(timeout);\r\n\t\t\tif (is_scrolling_x) {\r\n\t\t\t\tscrollTo(latest_value, window.scrollY);\r\n\t\t\t} else {\r\n\t\t\t\tscrollTo(window.scrollX, latest_value);\r\n\t\t\t}\r\n\t\t\ttimeout = setTimeout(clear, 100);\r\n\t\t}\r\n\t});\r\n\r\n\t// Browsers don't fire the scroll event for the initial scroll position when scroll style isn't set to smooth\r\n\teffect(target_handler);\r\n\r\n\tteardown(() => {\r\n\t\tremoveEventListener('scroll', target_handler);\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {'innerWidth' | 'innerHeight' | 'outerWidth' | 'outerHeight'} type\r\n * @param {(size: number) => void} set\r\n */\r\nexport function bind_window_size(type, set) {\r\n\tlisten(window, ['resize'], () => without_reactive_context(() => set(window[type])));\r\n}\r\n", "/** @import { ComponentContextLegacy } from '#client' */\r\nimport { run, run_all } from '../../../shared/utils.js';\r\nimport { derived } from '../../reactivity/deriveds.js';\r\nimport { user_pre_effect, user_effect } from '../../reactivity/effects.js';\r\nimport { component_context, deep_read_state, get, untrack } from '../../runtime.js';\r\n\r\n/**\r\n * Legacy-mode only: Call `onMount` callbacks and set up `beforeUpdate`/`afterUpdate` effects\r\n * @param {boolean} [immutable]\r\n */\r\nexport function init(immutable = false) {\r\n\tconst context = /** @type {ComponentContextLegacy} */ (component_context);\r\n\r\n\tconst callbacks = context.l.u;\r\n\tif (!callbacks) return;\r\n\r\n\tlet props = () => deep_read_state(context.s);\r\n\r\n\tif (immutable) {\r\n\t\tlet version = 0;\r\n\t\tlet prev = /** @type {Record<string, any>} */ ({});\r\n\r\n\t\t// In legacy immutable mode, before/afterUpdate only fire if the object identity of a prop changes\r\n\t\tconst d = derived(() => {\r\n\t\t\tlet changed = false;\r\n\t\t\tconst props = context.s;\r\n\t\t\tfor (const key in props) {\r\n\t\t\t\tif (props[key] !== prev[key]) {\r\n\t\t\t\t\tprev[key] = props[key];\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (changed) version++;\r\n\t\t\treturn version;\r\n\t\t});\r\n\r\n\t\tprops = () => get(d);\r\n\t}\r\n\r\n\t// beforeUpdate\r\n\tif (callbacks.b.length) {\r\n\t\tuser_pre_effect(() => {\r\n\t\t\tobserve_all(context, props);\r\n\t\t\trun_all(callbacks.b);\r\n\t\t});\r\n\t}\r\n\r\n\t// onMount (must run before afterUpdate)\r\n\tuser_effect(() => {\r\n\t\tconst fns = untrack(() => callbacks.m.map(run));\r\n\t\treturn () => {\r\n\t\t\tfor (const fn of fns) {\r\n\t\t\t\tif (typeof fn === 'function') {\r\n\t\t\t\t\tfn();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\r\n\t// afterUpdate\r\n\tif (callbacks.a.length) {\r\n\t\tuser_effect(() => {\r\n\t\t\tobserve_all(context, props);\r\n\t\t\trun_all(callbacks.a);\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Invoke the getter of all signals associated with a component\r\n * so they can be registered to the effect this function is called in.\r\n * @param {ComponentContextLegacy} context\r\n * @param {(() => void)} props\r\n */\r\nfunction observe_all(context, props) {\r\n\tif (context.l.s) {\r\n\t\tfor (const signal of context.l.s) get(signal);\r\n\t}\r\n\r\n\tprops();\r\n}\r\n", "import { set, source } from '../../reactivity/sources.js';\r\nimport { get } from '../../runtime.js';\r\nimport { is_array } from '../../../shared/utils.js';\r\n\r\n/**\r\n * Under some circumstances, imports may be reactive in legacy mode. In that case,\r\n * they should be using `reactive_import` as part of the transformation\r\n * @param {() => any} fn\r\n */\r\nexport function reactive_import(fn) {\r\n\tvar s = source(0);\r\n\r\n\treturn function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tset(s, get(s) + 1);\r\n\t\t\treturn arguments[0];\r\n\t\t} else {\r\n\t\t\tget(s);\r\n\t\t\treturn fn();\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * @this {any}\r\n * @param {Record<string, unknown>} $$props\r\n * @param {Event} event\r\n * @returns {void}\r\n */\r\nexport function bubble_event($$props, event) {\r\n\tvar events = /** @type {Record<string, Function[] | Function>} */ ($$props.$$events)?.[\r\n\t\tevent.type\r\n\t];\r\n\r\n\tvar callbacks = is_array(events) ? events.slice() : events == null ? [] : [events];\r\n\r\n\tfor (var fn of callbacks) {\r\n\t\t// Preserve \"this\" context\r\n\t\tfn.call(this, event);\r\n\t}\r\n}\r\n\r\n/**\r\n * Used to simulate `$on` on a component instance when `compatibility.componentApi === 4`\r\n * @param {Record<string, any>} $$props\r\n * @param {string} event_name\r\n * @param {Function} event_callback\r\n */\r\nexport function add_legacy_event_listener($$props, event_name, event_callback) {\r\n\t$$props.$$events ||= {};\r\n\t$$props.$$events[event_name] ||= [];\r\n\t$$props.$$events[event_name].push(event_callback);\r\n}\r\n\r\n/**\r\n * Used to simulate `$set` on a component instance when `compatibility.componentApi === 4`.\r\n * Needs component accessors so that it can call the setter of the prop. Therefore doesn't\r\n * work for updating props in `$$props` or `$$restProps`.\r\n * @this {Record<string, any>}\r\n * @param {Record<string, any>} $$new_props\r\n */\r\nexport function update_legacy_props($$new_props) {\r\n\tfor (var key in $$new_props) {\r\n\t\tif (key in this) {\r\n\t\t\tthis[key] = $$new_props[key];\r\n\t\t}\r\n\t}\r\n}\r\n", "/** @import { Readable } from './public' */\r\nimport { untrack } from '../index-client.js';\r\nimport { noop } from '../internal/shared/utils.js';\r\n\r\n/**\r\n * @template T\r\n * @param {Readable<T> | null | undefined} store\r\n * @param {(value: T) => void} run\r\n * @param {(value: T) => void} [invalidate]\r\n * @returns {() => void}\r\n */\r\nexport function subscribe_to_store(store, run, invalidate) {\r\n\tif (store == null) {\r\n\t\t// @ts-expect-error\r\n\t\trun(undefined);\r\n\r\n\t\t// @ts-expect-error\r\n\t\tif (invalidate) invalidate(undefined);\r\n\r\n\t\treturn noop;\r\n\t}\r\n\r\n\t// Svelte store takes a private second argument\r\n\t// StartStopNotifier could mutate state, and we want to silence the corresponding validation error\r\n\tconst unsub = untrack(() =>\r\n\t\tstore.subscribe(\r\n\t\t\trun,\r\n\t\t\t// @ts-expect-error\r\n\t\t\tinvalidate\r\n\t\t)\r\n\t);\r\n\r\n\t// Also support RxJS\r\n\t// @ts-expect-error TODO fix this in the types?\r\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\r\n}\r\n", "/** @import { StoreReferencesContainer } from '#client' */\r\n/** @import { Store } from '#shared' */\r\nimport { subscribe_to_store } from '../../../store/utils.js';\r\nimport { noop } from '../../shared/utils.js';\r\nimport { get } from '../runtime.js';\r\nimport { teardown } from './effects.js';\r\nimport { mutable_source, set } from './sources.js';\r\n\r\n/**\r\n * Whether or not the prop currently being read is a store binding, as in\r\n * `<Child bind:x={$y} />`. If it is, we treat the prop as mutable even in\r\n * runes mode, and skip `binding_property_non_reactive` validation\r\n */\r\nlet is_store_binding = false;\r\n\r\n/**\r\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\r\n * signal that will be updated when the store is. The store references container is needed to\r\n * track reassignments to stores and to track the correct component context.\r\n * @template V\r\n * @param {Store<V> | null | undefined} store\r\n * @param {string} store_name\r\n * @param {StoreReferencesContainer} stores\r\n * @returns {V}\r\n */\r\nexport function store_get(store, store_name, stores) {\r\n\tconst entry = (stores[store_name] ??= {\r\n\t\tstore: null,\r\n\t\tsource: mutable_source(undefined),\r\n\t\tunsubscribe: noop\r\n\t});\r\n\r\n\tif (entry.store !== store) {\r\n\t\tentry.unsubscribe();\r\n\t\tentry.store = store ?? null;\r\n\r\n\t\tif (store == null) {\r\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\r\n\t\t\tentry.unsubscribe = noop;\r\n\t\t} else {\r\n\t\t\tvar is_synchronous_callback = true;\r\n\r\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\r\n\t\t\t\tif (is_synchronous_callback) {\r\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\r\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\r\n\t\t\t\t\tentry.source.v = v;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tset(entry.source, v);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tis_synchronous_callback = false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn get(entry.source);\r\n}\r\n\r\n/**\r\n * Unsubscribe from a store if it's not the same as the one in the store references container.\r\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\r\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\r\n * @param {Store<any> | null | undefined} store\r\n * @param {string} store_name\r\n * @param {StoreReferencesContainer} stores\r\n */\r\nexport function store_unsub(store, store_name, stores) {\r\n\t/** @type {StoreReferencesContainer[''] | undefined} */\r\n\tlet entry = stores[store_name];\r\n\r\n\tif (entry && entry.store !== store) {\r\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\r\n\t\tentry.unsubscribe();\r\n\t\tentry.unsubscribe = noop;\r\n\t}\r\n\r\n\treturn store;\r\n}\r\n\r\n/**\r\n * Sets the new value of a store and returns that value.\r\n * @template V\r\n * @param {Store<V>} store\r\n * @param {V} value\r\n * @returns {V}\r\n */\r\nexport function store_set(store, value) {\r\n\tstore.set(value);\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * @param {StoreReferencesContainer} stores\r\n * @param {string} store_name\r\n */\r\nexport function invalidate_store(stores, store_name) {\r\n\tvar entry = stores[store_name];\r\n\tif (entry.store !== null) {\r\n\t\tstore_set(entry.store, entry.source.v);\r\n\t}\r\n}\r\n\r\n/**\r\n * Unsubscribes from all auto-subscribed stores on destroy\r\n * @returns {StoreReferencesContainer}\r\n */\r\nexport function setup_stores() {\r\n\t/** @type {StoreReferencesContainer} */\r\n\tconst stores = {};\r\n\r\n\tteardown(() => {\r\n\t\tfor (var store_name in stores) {\r\n\t\t\tconst ref = stores[store_name];\r\n\t\t\tref.unsubscribe();\r\n\t\t}\r\n\t});\r\n\r\n\treturn stores;\r\n}\r\n\r\n/**\r\n * Updates a store with a new value.\r\n * @param {Store<V>} store  the store to update\r\n * @param {any} expression  the expression that mutates the store\r\n * @param {V} new_value  the new store value\r\n * @template V\r\n */\r\nexport function store_mutate(store, expression, new_value) {\r\n\tstore.set(new_value);\r\n\treturn expression;\r\n}\r\n\r\n/**\r\n * @param {Store<number>} store\r\n * @param {number} store_value\r\n * @param {1 | -1} [d]\r\n * @returns {number}\r\n */\r\nexport function update_store(store, store_value, d = 1) {\r\n\tstore.set(store_value + d);\r\n\treturn store_value;\r\n}\r\n\r\n/**\r\n * @param {Store<number>} store\r\n * @param {number} store_value\r\n * @param {1 | -1} [d]\r\n * @returns {number}\r\n */\r\nexport function update_pre_store(store, store_value, d = 1) {\r\n\tconst value = store_value + d;\r\n\tstore.set(value);\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Called inside prop getters to communicate that the prop is a store binding\r\n */\r\nexport function mark_store_binding() {\r\n\tis_store_binding = true;\r\n}\r\n\r\n/**\r\n * Returns a tuple that indicates whether `fn()` reads a prop that is a store binding.\r\n * Used to prevent `binding_property_non_reactive` validation false positives and\r\n * ensure that these props are treated as mutable even in runes mode\r\n * @template T\r\n * @param {() => T} fn\r\n * @returns {[T, boolean]}\r\n */\r\nexport function capture_store_binding(fn) {\r\n\tvar previous_is_store_binding = is_store_binding;\r\n\r\n\ttry {\r\n\t\tis_store_binding = false;\r\n\t\treturn [fn(), is_store_binding];\r\n\t} finally {\r\n\t\tis_store_binding = previous_is_store_binding;\r\n\t}\r\n}\r\n", "/** @import { Source } from './types.js' */\r\nimport { DEV } from 'esm-env';\r\nimport {\r\n\tPROPS_IS_BINDABLE,\r\n\tPROPS_IS_IMMUTABLE,\r\n\tPROPS_IS_LAZY_INITIAL,\r\n\tPROPS_IS_RUNES,\r\n\tPROPS_IS_UPDATED\r\n} from '../../../constants.js';\r\nimport { get_descriptor, is_function } from '../../shared/utils.js';\r\nimport { mutable_source, set, source } from './sources.js';\r\nimport { derived, derived_safe_equal } from './deriveds.js';\r\nimport {\r\n\tactive_effect,\r\n\tget,\r\n\tcaptured_signals,\r\n\tset_active_effect,\r\n\tuntrack,\r\n\tupdate\r\n} from '../runtime.js';\r\nimport { safe_equals } from './equality.js';\r\nimport * as e from '../errors.js';\r\nimport {\r\n\tBRANCH_EFFECT,\r\n\tLEGACY_DERIVED_PROP,\r\n\tLEGACY_PROPS,\r\n\tROOT_EFFECT,\r\n\tSTATE_SYMBOL\r\n} from '../constants.js';\r\nimport { proxy } from '../proxy.js';\r\nimport { capture_store_binding } from './store.js';\r\nimport { legacy_mode_flag } from '../../flags/index.js';\r\n\r\n/**\r\n * @param {((value?: number) => number)} fn\r\n * @param {1 | -1} [d]\r\n * @returns {number}\r\n */\r\nexport function update_prop(fn, d = 1) {\r\n\tconst value = fn();\r\n\tfn(value + d);\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * @param {((value?: number) => number)} fn\r\n * @param {1 | -1} [d]\r\n * @returns {number}\r\n */\r\nexport function update_pre_prop(fn, d = 1) {\r\n\tconst value = fn() + d;\r\n\tfn(value);\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\r\n * Is passed the full `$$props` object and excludes the named props.\r\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\r\n */\r\nconst rest_props_handler = {\r\n\tget(target, key) {\r\n\t\tif (target.exclude.includes(key)) return;\r\n\t\treturn target.props[key];\r\n\t},\r\n\tset(target, key) {\r\n\t\tif (DEV) {\r\n\t\t\t// TODO should this happen in prod too?\r\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\tgetOwnPropertyDescriptor(target, key) {\r\n\t\tif (target.exclude.includes(key)) return;\r\n\t\tif (key in target.props) {\r\n\t\t\treturn {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: target.props[key]\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\thas(target, key) {\r\n\t\tif (target.exclude.includes(key)) return false;\r\n\t\treturn key in target.props;\r\n\t},\r\n\townKeys(target) {\r\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\r\n\t}\r\n};\r\n\r\n/**\r\n * @param {Record<string, unknown>} props\r\n * @param {string[]} exclude\r\n * @param {string} [name]\r\n * @returns {Record<string, unknown>}\r\n */\r\n/*#__NO_SIDE_EFFECTS__*/\r\nexport function rest_props(props, exclude, name) {\r\n\treturn new Proxy(\r\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\r\n\t\trest_props_handler\r\n\t);\r\n}\r\n\r\n/**\r\n * The proxy handler for legacy $$restProps and $$props\r\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\r\n */\r\nconst legacy_rest_props_handler = {\r\n\tget(target, key) {\r\n\t\tif (target.exclude.includes(key)) return;\r\n\t\tget(target.version);\r\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\r\n\t},\r\n\tset(target, key, value) {\r\n\t\tif (!(key in target.special)) {\r\n\t\t\t// Handle props that can temporarily get out of sync with the parent\r\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\r\n\t\t\ttarget.special[key] = prop(\r\n\t\t\t\t{\r\n\t\t\t\t\tget [key]() {\r\n\t\t\t\t\t\treturn target.props[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/** @type {string} */ (key),\r\n\t\t\t\tPROPS_IS_UPDATED\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\ttarget.special[key](value);\r\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\r\n\t\treturn true;\r\n\t},\r\n\tgetOwnPropertyDescriptor(target, key) {\r\n\t\tif (target.exclude.includes(key)) return;\r\n\t\tif (key in target.props) {\r\n\t\t\treturn {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: target.props[key]\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\tdeleteProperty(target, key) {\r\n\t\t// Svelte 4 allowed for deletions on $$restProps\r\n\t\tif (target.exclude.includes(key)) return true;\r\n\t\ttarget.exclude.push(key);\r\n\t\tupdate(target.version);\r\n\t\treturn true;\r\n\t},\r\n\thas(target, key) {\r\n\t\tif (target.exclude.includes(key)) return false;\r\n\t\treturn key in target.props;\r\n\t},\r\n\townKeys(target) {\r\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\r\n\t}\r\n};\r\n\r\n/**\r\n * @param {Record<string, unknown>} props\r\n * @param {string[]} exclude\r\n * @returns {Record<string, unknown>}\r\n */\r\nexport function legacy_rest_props(props, exclude) {\r\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\r\n}\r\n\r\n/**\r\n * The proxy handler for spread props. Handles the incoming array of props\r\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\r\n * them so that the whole thing is passed to the component as the `$$props` argument.\r\n * @template {Record<string | symbol, unknown>} T\r\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\r\n */\r\nconst spread_props_handler = {\r\n\tget(target, key) {\r\n\t\tlet i = target.props.length;\r\n\t\twhile (i--) {\r\n\t\t\tlet p = target.props[i];\r\n\t\t\tif (is_function(p)) p = p();\r\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\r\n\t\t}\r\n\t},\r\n\tset(target, key, value) {\r\n\t\tlet i = target.props.length;\r\n\t\twhile (i--) {\r\n\t\t\tlet p = target.props[i];\r\n\t\t\tif (is_function(p)) p = p();\r\n\t\t\tconst desc = get_descriptor(p, key);\r\n\t\t\tif (desc && desc.set) {\r\n\t\t\t\tdesc.set(value);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tgetOwnPropertyDescriptor(target, key) {\r\n\t\tlet i = target.props.length;\r\n\t\twhile (i--) {\r\n\t\t\tlet p = target.props[i];\r\n\t\t\tif (is_function(p)) p = p();\r\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\r\n\t\t\t\tconst descriptor = get_descriptor(p, key);\r\n\t\t\t\tif (descriptor && !descriptor.configurable) {\r\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\r\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\r\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\r\n\t\t\t\t\tdescriptor.configurable = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn descriptor;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\thas(target, key) {\r\n\t\t// To prevent a false positive `is_entry_props` in the `prop` function\r\n\t\tif (key === STATE_SYMBOL || key === LEGACY_PROPS) return false;\r\n\r\n\t\tfor (let p of target.props) {\r\n\t\t\tif (is_function(p)) p = p();\r\n\t\t\tif (p != null && key in p) return true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\townKeys(target) {\r\n\t\t/** @type {Array<string | symbol>} */\r\n\t\tconst keys = [];\r\n\r\n\t\tfor (let p of target.props) {\r\n\t\t\tif (is_function(p)) p = p();\r\n\t\t\tfor (const key in p) {\r\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn keys;\r\n\t}\r\n};\r\n\r\n/**\r\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\r\n * @returns {any}\r\n */\r\nexport function spread_props(...props) {\r\n\treturn new Proxy({ props }, spread_props_handler);\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {() => T} fn\r\n * @returns {T}\r\n */\r\nfunction with_parent_branch(fn) {\r\n\tvar effect = active_effect;\r\n\tvar previous_effect = active_effect;\r\n\r\n\twhile (effect !== null && (effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0) {\r\n\t\teffect = effect.parent;\r\n\t}\r\n\ttry {\r\n\t\tset_active_effect(effect);\r\n\t\treturn fn();\r\n\t} finally {\r\n\t\tset_active_effect(previous_effect);\r\n\t}\r\n}\r\n\r\n/**\r\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\r\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\r\n * @template V\r\n * @param {Record<string, unknown>} props\r\n * @param {string} key\r\n * @param {number} flags\r\n * @param {V | (() => V)} [fallback]\r\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\r\n */\r\nexport function prop(props, key, flags, fallback) {\r\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\r\n\tvar runes = !legacy_mode_flag || (flags & PROPS_IS_RUNES) !== 0;\r\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\r\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\r\n\tvar is_store_sub = false;\r\n\tvar prop_value;\r\n\r\n\tif (bindable) {\r\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\r\n\t} else {\r\n\t\tprop_value = /** @type {V} */ (props[key]);\r\n\t}\r\n\r\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\r\n\t// or `createClassComponent(Component, props)`\r\n\tvar is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\r\n\r\n\tvar setter =\r\n\t\tget_descriptor(props, key)?.set ??\r\n\t\t(is_entry_props && bindable && key in props ? (v) => (props[key] = v) : undefined);\r\n\r\n\tvar fallback_value = /** @type {V} */ (fallback);\r\n\tvar fallback_dirty = true;\r\n\tvar fallback_used = false;\r\n\r\n\tvar get_fallback = () => {\r\n\t\tfallback_used = true;\r\n\t\tif (fallback_dirty) {\r\n\t\t\tfallback_dirty = false;\r\n\t\t\tif (lazy) {\r\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\r\n\t\t\t} else {\r\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn fallback_value;\r\n\t};\r\n\r\n\tif (prop_value === undefined && fallback !== undefined) {\r\n\t\tif (setter && runes) {\r\n\t\t\te.props_invalid_value(key);\r\n\t\t}\r\n\r\n\t\tprop_value = get_fallback();\r\n\t\tif (setter) setter(prop_value);\r\n\t}\r\n\r\n\t/** @type {() => V} */\r\n\tvar getter;\r\n\tif (runes) {\r\n\t\tgetter = () => {\r\n\t\t\tvar value = /** @type {V} */ (props[key]);\r\n\t\t\tif (value === undefined) return get_fallback();\r\n\t\t\tfallback_dirty = true;\r\n\t\t\tfallback_used = false;\r\n\t\t\treturn value;\r\n\t\t};\r\n\t} else {\r\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\r\n\t\t// Replicate that behavior through using a derived\r\n\t\tvar derived_getter = with_parent_branch(() =>\r\n\t\t\t(immutable ? derived : derived_safe_equal)(() => /** @type {V} */ (props[key]))\r\n\t\t);\r\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\r\n\t\tgetter = () => {\r\n\t\t\tvar value = get(derived_getter);\r\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\r\n\t\t\treturn value === undefined ? fallback_value : value;\r\n\t\t};\r\n\t}\r\n\r\n\t// easy mode — prop is never written to\r\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\r\n\t\treturn getter;\r\n\t}\r\n\r\n\t// intermediate mode — prop is written to, but the parent component had\r\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\r\n\tif (setter) {\r\n\t\tvar legacy_parent = props.$$legacy;\r\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\r\n\t\t\tif (arguments.length > 0) {\r\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\r\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\r\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\r\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\r\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\r\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\r\n\t\t\t\t}\r\n\t\t\t\treturn value;\r\n\t\t\t} else {\r\n\t\t\t\treturn getter();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// hard mode. this is where it gets ugly — the value in the child should\r\n\t// synchronize with the parent, but it should also be possible to temporarily\r\n\t// set the value to something else locally.\r\n\tvar from_child = false;\r\n\tvar was_from_child = false;\r\n\r\n\t// The derived returns the current value. The underlying mutable\r\n\t// source is written to from various places to persist this value.\r\n\tvar inner_current_value = mutable_source(prop_value);\r\n\tvar current_value = with_parent_branch(() =>\r\n\t\tderived(() => {\r\n\t\t\tvar parent_value = getter();\r\n\t\t\tvar child_value = get(inner_current_value);\r\n\r\n\t\t\tif (from_child) {\r\n\t\t\t\tfrom_child = false;\r\n\t\t\t\twas_from_child = true;\r\n\t\t\t\treturn child_value;\r\n\t\t\t}\r\n\r\n\t\t\twas_from_child = false;\r\n\t\t\treturn (inner_current_value.v = parent_value);\r\n\t\t})\r\n\t);\r\n\r\n\tif (!immutable) current_value.equals = safe_equals;\r\n\r\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\r\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\r\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\r\n\t\tif (captured_signals !== null) {\r\n\t\t\t// set this so that we don't reset to the parent value if `d`\r\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\r\n\t\t\t// than because the parent or child value changed)\r\n\t\t\tfrom_child = was_from_child;\r\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\r\n\t\t\tgetter();\r\n\t\t\tget(inner_current_value);\r\n\t\t}\r\n\r\n\t\tif (arguments.length > 0) {\r\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\r\n\r\n\t\t\tif (!current_value.equals(new_value)) {\r\n\t\t\t\tfrom_child = true;\r\n\t\t\t\tset(inner_current_value, new_value);\r\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\r\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\r\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\r\n\t\t\t\t\tfallback_value = new_value;\r\n\t\t\t\t}\r\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\treturn get(current_value);\r\n\t};\r\n}\r\n", "/** @import { Effect, TemplateNode, } from '#client' */\r\n\r\nimport { BOUNDARY_EFFECT, EFFECT_TRANSPARENT } from '../../constants.js';\r\nimport { block, branch, destroy_effect, pause_effect } from '../../reactivity/effects.js';\r\nimport {\r\n\tactive_effect,\r\n\tactive_reaction,\r\n\tcomponent_context,\r\n\thandle_error,\r\n\tset_active_effect,\r\n\tset_active_reaction,\r\n\tset_component_context,\r\n\treset_is_throwing_error\r\n} from '../../runtime.js';\r\nimport {\r\n\thydrate_next,\r\n\thydrate_node,\r\n\thydrating,\r\n\tnext,\r\n\tremove_nodes,\r\n\tset_hydrate_node\r\n} from '../hydration.js';\r\nimport { queue_micro_task } from '../task.js';\r\n\r\n/**\r\n * @param {Effect} boundary\r\n * @param {() => void} fn\r\n */\r\nfunction with_boundary(boundary, fn) {\r\n\tvar previous_effect = active_effect;\r\n\tvar previous_reaction = active_reaction;\r\n\tvar previous_ctx = component_context;\r\n\r\n\tset_active_effect(boundary);\r\n\tset_active_reaction(boundary);\r\n\tset_component_context(boundary.ctx);\r\n\r\n\ttry {\r\n\t\tfn();\r\n\t} finally {\r\n\t\tset_active_effect(previous_effect);\r\n\t\tset_active_reaction(previous_reaction);\r\n\t\tset_component_context(previous_ctx);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {TemplateNode} node\r\n * @param {{\r\n * \t onerror?: (error: unknown, reset: () => void) => void,\r\n *   failed?: (anchor: Node, error: () => unknown, reset: () => () => void) => void\r\n * }} props\r\n * @param {((anchor: Node) => void)} boundary_fn\r\n * @returns {void}\r\n */\r\nexport function boundary(node, props, boundary_fn) {\r\n\tvar anchor = node;\r\n\r\n\t/** @type {Effect} */\r\n\tvar boundary_effect;\r\n\r\n\tblock(() => {\r\n\t\tvar boundary = /** @type {Effect} */ (active_effect);\r\n\t\tvar hydrate_open = hydrate_node;\r\n\t\tvar is_creating_fallback = false;\r\n\r\n\t\t// We re-use the effect's fn property to avoid allocation of an additional field\r\n\t\tboundary.fn = (/** @type {unknown}} */ error) => {\r\n\t\t\tvar onerror = props.onerror;\r\n\t\t\tlet failed = props.failed;\r\n\r\n\t\t\t// If we have nothing to capture the error, or if we hit an error while\r\n\t\t\t// rendering the fallback, re-throw for another boundary to handle\r\n\t\t\tif ((!onerror && !failed) || is_creating_fallback) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\r\n\t\t\tvar reset = () => {\r\n\t\t\t\tpause_effect(boundary_effect);\r\n\r\n\t\t\t\twith_boundary(boundary, () => {\r\n\t\t\t\t\tis_creating_fallback = false;\r\n\t\t\t\t\tboundary_effect = branch(() => boundary_fn(anchor));\r\n\t\t\t\t\treset_is_throwing_error();\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tonerror?.(error, reset);\r\n\r\n\t\t\tif (boundary_effect) {\r\n\t\t\t\tdestroy_effect(boundary_effect);\r\n\t\t\t} else if (hydrating) {\r\n\t\t\t\tset_hydrate_node(hydrate_open);\r\n\t\t\t\tnext();\r\n\t\t\t\tset_hydrate_node(remove_nodes());\r\n\t\t\t}\r\n\r\n\t\t\tif (failed) {\r\n\t\t\t\t// Render the `failed` snippet in a microtask\r\n\t\t\t\tqueue_micro_task(() => {\r\n\t\t\t\t\twith_boundary(boundary, () => {\r\n\t\t\t\t\t\tis_creating_fallback = true;\r\n\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tboundary_effect = branch(() => {\r\n\t\t\t\t\t\t\t\tfailed(\r\n\t\t\t\t\t\t\t\t\tanchor,\r\n\t\t\t\t\t\t\t\t\t() => error,\r\n\t\t\t\t\t\t\t\t\t() => reset\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\thandle_error(error, boundary, null, boundary.ctx);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treset_is_throwing_error();\r\n\t\t\t\t\t\tis_creating_fallback = false;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (hydrating) {\r\n\t\t\thydrate_next();\r\n\t\t}\r\n\r\n\t\tboundary_effect = branch(() => boundary_fn(anchor));\r\n\t\treset_is_throwing_error();\r\n\t}, EFFECT_TRANSPARENT | BOUNDARY_EFFECT);\r\n\r\n\tif (hydrating) {\r\n\t\tanchor = hydrate_node;\r\n\t}\r\n}\r\n", "import { dev_current_component_function } from './runtime.js';\r\nimport { get_descriptor, is_array } from '../shared/utils.js';\r\nimport * as e from './errors.js';\r\nimport { FILENAME } from '../../constants.js';\r\nimport { render_effect } from './reactivity/effects.js';\r\nimport * as w from './warnings.js';\r\nimport { capture_store_binding } from './reactivity/store.js';\r\n\r\n/**\r\n * @param {() => any} collection\r\n * @param {(item: any, index: number) => string} key_fn\r\n * @returns {void}\r\n */\r\nexport function validate_each_keys(collection, key_fn) {\r\n\trender_effect(() => {\r\n\t\tconst keys = new Map();\r\n\t\tconst maybe_array = collection();\r\n\t\tconst array = is_array(maybe_array)\r\n\t\t\t? maybe_array\r\n\t\t\t: maybe_array == null\r\n\t\t\t\t? []\r\n\t\t\t\t: Array.from(maybe_array);\r\n\t\tconst length = array.length;\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tconst key = key_fn(array[i], i);\r\n\t\t\tif (keys.has(key)) {\r\n\t\t\t\tconst a = String(keys.get(key));\r\n\t\t\t\tconst b = String(i);\r\n\r\n\t\t\t\t/** @type {string | null} */\r\n\t\t\t\tlet k = String(key);\r\n\t\t\t\tif (k.startsWith('[object ')) k = null;\r\n\r\n\t\t\t\te.each_key_duplicate(a, b, k);\r\n\t\t\t}\r\n\t\t\tkeys.set(key, i);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {Record<string, any>} $$props\r\n * @param {string[]} bindable\r\n * @param {string[]} exports\r\n * @param {Function & { [FILENAME]: string }} component\r\n */\r\nexport function validate_prop_bindings($$props, bindable, exports, component) {\r\n\tfor (const key in $$props) {\r\n\t\tvar setter = get_descriptor($$props, key)?.set;\r\n\t\tvar name = component.name;\r\n\r\n\t\tif (setter) {\r\n\t\t\tif (exports.includes(key)) {\r\n\t\t\t\te.bind_invalid_export(component[FILENAME], key, name);\r\n\t\t\t}\r\n\r\n\t\t\tif (!bindable.includes(key)) {\r\n\t\t\t\te.bind_not_bindable(key, component[FILENAME], name);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} binding\r\n * @param {() => Record<string, any>} get_object\r\n * @param {() => string} get_property\r\n * @param {number} line\r\n * @param {number} column\r\n */\r\nexport function validate_binding(binding, get_object, get_property, line, column) {\r\n\tvar warned = false;\r\n\r\n\tvar filename = dev_current_component_function?.[FILENAME];\r\n\r\n\trender_effect(() => {\r\n\t\tif (warned) return;\r\n\r\n\t\tvar [object, is_store_sub] = capture_store_binding(get_object);\r\n\r\n\t\tif (is_store_sub) return;\r\n\r\n\t\tvar property = get_property();\r\n\r\n\t\tvar ran = false;\r\n\r\n\t\t// by making the (possibly false, but it would be an extreme edge case) assumption\r\n\t\t// that a getter has a corresponding setter, we can determine if a property is\r\n\t\t// reactive by seeing if this effect has dependencies\r\n\t\tvar effect = render_effect(() => {\r\n\t\t\tif (ran) return;\r\n\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\r\n\t\t\tobject[property];\r\n\t\t});\r\n\r\n\t\tran = true;\r\n\r\n\t\tif (effect.deps === null) {\r\n\t\t\tvar location = `${filename}:${line}:${column}`;\r\n\t\t\tw.binding_property_non_reactive(binding, location);\r\n\r\n\t\t\twarned = true;\r\n\t\t}\r\n\t});\r\n}\r\n", "import { createClassComponent } from '../../../../legacy/legacy-client.js';\r\nimport { destroy_effect, effect_root, render_effect } from '../../reactivity/effects.js';\r\nimport { append } from '../template.js';\r\nimport { define_property, get_descriptor, object_keys } from '../../../shared/utils.js';\r\n\r\n/**\r\n * @typedef {Object} CustomElementPropDefinition\r\n * @property {string} [attribute]\r\n * @property {boolean} [reflect]\r\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\r\n */\r\n\r\n/** @type {any} */\r\nlet SvelteElement;\r\n\r\nif (typeof HTMLElement === 'function') {\r\n\tSvelteElement = class extends HTMLElement {\r\n\t\t/** The Svelte component constructor */\r\n\t\t$$ctor;\r\n\t\t/** Slots */\r\n\t\t$$s;\r\n\t\t/** @type {any} The Svelte component instance */\r\n\t\t$$c;\r\n\t\t/** Whether or not the custom element is connected */\r\n\t\t$$cn = false;\r\n\t\t/** @type {Record<string, any>} Component props data */\r\n\t\t$$d = {};\r\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\r\n\t\t$$r = false;\r\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\r\n\t\t$$p_d = {};\r\n\t\t/** @type {Record<string, EventListenerOrEventListenerObject[]>} Event listeners */\r\n\t\t$$l = {};\r\n\t\t/** @type {Map<EventListenerOrEventListenerObject, Function>} Event listener unsubscribe functions */\r\n\t\t$$l_u = new Map();\r\n\t\t/** @type {any} The managed render effect for reflecting attributes */\r\n\t\t$$me;\r\n\r\n\t\t/**\r\n\t\t * @param {*} $$componentCtor\r\n\t\t * @param {*} $$slots\r\n\t\t * @param {*} use_shadow_dom\r\n\t\t */\r\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\r\n\t\t\tsuper();\r\n\t\t\tthis.$$ctor = $$componentCtor;\r\n\t\t\tthis.$$s = $$slots;\r\n\t\t\tif (use_shadow_dom) {\r\n\t\t\t\tthis.attachShadow({ mode: 'open' });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {string} type\r\n\t\t * @param {EventListenerOrEventListenerObject} listener\r\n\t\t * @param {boolean | AddEventListenerOptions} [options]\r\n\t\t */\r\n\t\taddEventListener(type, listener, options) {\r\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\r\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\r\n\t\t\t// browser event, this fires twice - we can't avoid that.\r\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\r\n\t\t\tthis.$$l[type].push(listener);\r\n\t\t\tif (this.$$c) {\r\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\r\n\t\t\t\tthis.$$l_u.set(listener, unsub);\r\n\t\t\t}\r\n\t\t\tsuper.addEventListener(type, listener, options);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {string} type\r\n\t\t * @param {EventListenerOrEventListenerObject} listener\r\n\t\t * @param {boolean | AddEventListenerOptions} [options]\r\n\t\t */\r\n\t\tremoveEventListener(type, listener, options) {\r\n\t\t\tsuper.removeEventListener(type, listener, options);\r\n\t\t\tif (this.$$c) {\r\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\r\n\t\t\t\tif (unsub) {\r\n\t\t\t\t\tunsub();\r\n\t\t\t\t\tthis.$$l_u.delete(listener);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tasync connectedCallback() {\r\n\t\t\tthis.$$cn = true;\r\n\t\t\tif (!this.$$c) {\r\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\r\n\t\t\t\tawait Promise.resolve();\r\n\t\t\t\tif (!this.$$cn || this.$$c) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t/** @param {string} name */\r\n\t\t\t\tfunction create_slot(name) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * @param {Element} anchor\r\n\t\t\t\t\t */\r\n\t\t\t\t\treturn (anchor) => {\r\n\t\t\t\t\t\tconst slot = document.createElement('slot');\r\n\t\t\t\t\t\tif (name !== 'default') slot.name = name;\r\n\r\n\t\t\t\t\t\tappend(anchor, slot);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t/** @type {Record<string, any>} */\r\n\t\t\t\tconst $$slots = {};\r\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\r\n\t\t\t\tfor (const name of this.$$s) {\r\n\t\t\t\t\tif (name in existing_slots) {\r\n\t\t\t\t\t\tif (name === 'default' && !this.$$d.children) {\r\n\t\t\t\t\t\t\tthis.$$d.children = create_slot(name);\r\n\t\t\t\t\t\t\t$$slots.default = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$$slots[name] = create_slot(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const attribute of this.attributes) {\r\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\r\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\r\n\t\t\t\t\tif (!(name in this.$$d)) {\r\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\r\n\t\t\t\tfor (const key in this.$$p_d) {\r\n\t\t\t\t\t// @ts-expect-error\r\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\r\n\t\t\t\t\t\t// @ts-expect-error\r\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\r\n\t\t\t\t\t\t// @ts-expect-error\r\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.$$c = createClassComponent({\r\n\t\t\t\t\tcomponent: this.$$ctor,\r\n\t\t\t\t\ttarget: this.shadowRoot || this,\r\n\t\t\t\t\tprops: {\r\n\t\t\t\t\t\t...this.$$d,\r\n\t\t\t\t\t\t$$slots,\r\n\t\t\t\t\t\t$$host: this\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Reflect component props as attributes\r\n\t\t\t\tthis.$$me = effect_root(() => {\r\n\t\t\t\t\trender_effect(() => {\r\n\t\t\t\t\t\tthis.$$r = true;\r\n\t\t\t\t\t\tfor (const key of object_keys(this.$$c)) {\r\n\t\t\t\t\t\t\tif (!this.$$p_d[key]?.reflect) continue;\r\n\t\t\t\t\t\t\tthis.$$d[key] = this.$$c[key];\r\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\r\n\t\t\t\t\t\t\t\tkey,\r\n\t\t\t\t\t\t\t\tthis.$$d[key],\r\n\t\t\t\t\t\t\t\tthis.$$p_d,\r\n\t\t\t\t\t\t\t\t'toAttribute'\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (attribute_value == null) {\r\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.$$r = false;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tfor (const type in this.$$l) {\r\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\r\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\r\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.$$l = {};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\r\n\t\t// and setting attributes through setAttribute etc, this is helpful\r\n\r\n\t\t/**\r\n\t\t * @param {string} attr\r\n\t\t * @param {string} _oldValue\r\n\t\t * @param {string} newValue\r\n\t\t */\r\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\r\n\t\t\tif (this.$$r) return;\r\n\t\t\tattr = this.$$g_p(attr);\r\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\r\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\r\n\t\t}\r\n\r\n\t\tdisconnectedCallback() {\r\n\t\t\tthis.$$cn = false;\r\n\t\t\t// In a microtask, because this could be a move within the DOM\r\n\t\t\tPromise.resolve().then(() => {\r\n\t\t\t\tif (!this.$$cn && this.$$c) {\r\n\t\t\t\t\tthis.$$c.$destroy();\r\n\t\t\t\t\tthis.$$me();\r\n\t\t\t\t\tthis.$$c = undefined;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {string} attribute_name\r\n\t\t */\r\n\t\t$$g_p(attribute_name) {\r\n\t\t\treturn (\r\n\t\t\t\tobject_keys(this.$$p_d).find(\r\n\t\t\t\t\t(key) =>\r\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\r\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\r\n\t\t\t\t) || attribute_name\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {string} prop\r\n * @param {any} value\r\n * @param {Record<string, CustomElementPropDefinition>} props_definition\r\n * @param {'toAttribute' | 'toProp'} [transform]\r\n */\r\nfunction get_custom_element_value(prop, value, props_definition, transform) {\r\n\tconst type = props_definition[prop]?.type;\r\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\r\n\tif (!transform || !props_definition[prop]) {\r\n\t\treturn value;\r\n\t} else if (transform === 'toAttribute') {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'Object':\r\n\t\t\tcase 'Array':\r\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\r\n\t\t\tcase 'Boolean':\r\n\t\t\t\treturn value ? '' : null;\r\n\t\t\tcase 'Number':\r\n\t\t\t\treturn value == null ? null : value;\r\n\t\t\tdefault:\r\n\t\t\t\treturn value;\r\n\t\t}\r\n\t} else {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'Object':\r\n\t\t\tcase 'Array':\r\n\t\t\t\treturn value && JSON.parse(value);\r\n\t\t\tcase 'Boolean':\r\n\t\t\t\treturn value; // conversion already handled above\r\n\t\t\tcase 'Number':\r\n\t\t\t\treturn value != null ? +value : value;\r\n\t\t\tdefault:\r\n\t\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} element\r\n */\r\nfunction get_custom_elements_slots(element) {\r\n\t/** @type {Record<string, true>} */\r\n\tconst result = {};\r\n\telement.childNodes.forEach((node) => {\r\n\t\tresult[/** @type {Element} node */ (node).slot || 'default'] = true;\r\n\t});\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * @internal\r\n *\r\n * Turn a Svelte component into a custom element.\r\n * @param {any} Component  A Svelte component function\r\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\r\n * @param {string[]} slots  The slots to create\r\n * @param {string[]} exports  Explicitly exported values, other than props\r\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\r\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\r\n */\r\nexport function create_custom_element(\r\n\tComponent,\r\n\tprops_definition,\r\n\tslots,\r\n\texports,\r\n\tuse_shadow_dom,\r\n\textend\r\n) {\r\n\tlet Class = class extends SvelteElement {\r\n\t\tconstructor() {\r\n\t\t\tsuper(Component, slots, use_shadow_dom);\r\n\t\t\tthis.$$p_d = props_definition;\r\n\t\t}\r\n\t\tstatic get observedAttributes() {\r\n\t\t\treturn object_keys(props_definition).map((key) =>\r\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\tobject_keys(props_definition).forEach((prop) => {\r\n\t\tdefine_property(Class.prototype, prop, {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\r\n\t\t\t},\r\n\t\t\tset(value) {\r\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\r\n\t\t\t\tthis.$$d[prop] = value;\r\n\t\t\t\tvar component = this.$$c;\r\n\r\n\t\t\t\tif (component) {\r\n\t\t\t\t\t// // If the instance has an accessor, use that instead\r\n\t\t\t\t\tvar setter = get_descriptor(component, prop)?.get;\r\n\r\n\t\t\t\t\tif (setter) {\r\n\t\t\t\t\t\tcomponent[prop] = value;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomponent.$set({ [prop]: value });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\texports.forEach((property) => {\r\n\t\tdefine_property(Class.prototype, property, {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.$$c?.[property];\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\tif (extend) {\r\n\t\t// @ts-expect-error - assigning here is fine\r\n\t\tClass = extend(Class);\r\n\t}\r\n\tComponent.element = /** @type {any} */ Class;\r\n\treturn Class;\r\n}\r\n", "/** @import { TemplateNode } from '#client' */\r\n/** @import { Getters } from '#shared' */\r\nimport { is_void } from '../../utils.js';\r\nimport * as w from './warnings.js';\r\nimport * as e from './errors.js';\r\n\r\nexport { invalid_default_snippet } from './errors.js';\r\n\r\n/**\r\n * @param {() => string} tag_fn\r\n * @returns {void}\r\n */\r\nexport function validate_void_dynamic_element(tag_fn) {\r\n\tconst tag = tag_fn();\r\n\tif (tag && is_void(tag)) {\r\n\t\tw.dynamic_void_element_content(tag);\r\n\t}\r\n}\r\n\r\n/** @param {() => unknown} tag_fn */\r\nexport function validate_dynamic_element_tag(tag_fn) {\r\n\tconst tag = tag_fn();\r\n\tconst is_string = typeof tag === 'string';\r\n\tif (tag && !is_string) {\r\n\t\te.svelte_element_invalid_this_value();\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {any} store\r\n * @param {string} name\r\n */\r\nexport function validate_store(store, name) {\r\n\tif (store != null && typeof store.subscribe !== 'function') {\r\n\t\te.store_invalid_shape(name);\r\n\t}\r\n}\r\n", "import { STATE_SYMBOL } from '../constants.js';\r\nimport { snapshot } from '../../shared/clone.js';\r\nimport * as w from '../warnings.js';\r\nimport { untrack } from '../runtime.js';\r\n\r\n/**\r\n * @param {string} method\r\n * @param  {...any} objects\r\n */\r\nexport function log_if_contains_state(method, ...objects) {\r\n\tuntrack(() => {\r\n\t\ttry {\r\n\t\t\tlet has_state = false;\r\n\t\t\tconst transformed = [];\r\n\r\n\t\t\tfor (const obj of objects) {\r\n\t\t\t\tif (obj && typeof obj === 'object' && STATE_SYMBOL in obj) {\r\n\t\t\t\t\ttransformed.push(snapshot(obj, true));\r\n\t\t\t\t\thas_state = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttransformed.push(obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (has_state) {\r\n\t\t\t\tw.console_log_state(method);\r\n\r\n\t\t\t\t// eslint-disable-next-line no-console\r\n\t\t\t\tconsole.log('%c[snapshot]', 'color: grey', ...transformed);\r\n\t\t\t}\r\n\t\t} catch {}\r\n\t});\r\n\r\n\treturn objects;\r\n}\r\n", "/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\r\n/** @import { EventDispatcher } from './index.js' */\r\n/** @import { NotFunction } from './internal/types.js' */\r\nimport { component_context, flush_sync, untrack } from './internal/client/runtime.js';\r\nimport { is_array } from './internal/shared/utils.js';\r\nimport { user_effect } from './internal/client/index.js';\r\nimport * as e from './internal/client/errors.js';\r\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\r\nimport { legacy_mode_flag } from './internal/flags/index.js';\r\n\r\n/**\r\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\r\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\r\n * it can be called from an external module).\r\n *\r\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\r\n *\r\n * `onMount` does not run inside [server-side components](https://svelte.dev/docs/svelte/svelte-server#render).\r\n *\r\n * @template T\r\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\r\n * @returns {void}\r\n */\r\nexport function onMount(fn) {\r\n\tif (component_context === null) {\r\n\t\tlifecycle_outside_component('onMount');\r\n\t}\r\n\r\n\tif (legacy_mode_flag && component_context.l !== null) {\r\n\t\tinit_update_callbacks(component_context).m.push(fn);\r\n\t} else {\r\n\t\tuser_effect(() => {\r\n\t\t\tconst cleanup = untrack(fn);\r\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Schedules a callback to run immediately before the component is unmounted.\r\n *\r\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\r\n * only one that runs inside a server-side component.\r\n *\r\n * @param {() => any} fn\r\n * @returns {void}\r\n */\r\nexport function onDestroy(fn) {\r\n\tif (component_context === null) {\r\n\t\tlifecycle_outside_component('onDestroy');\r\n\t}\r\n\r\n\tonMount(() => () => untrack(fn));\r\n}\r\n\r\n/**\r\n * @template [T=any]\r\n * @param {string} type\r\n * @param {T} [detail]\r\n * @param {any}params_0\r\n * @returns {CustomEvent<T>}\r\n */\r\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\r\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\r\n}\r\n\r\n/**\r\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs/svelte/legacy-on#Component-events).\r\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\r\n *\r\n * Component events created with `createEventDispatcher` create a\r\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\r\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\r\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\r\n * property and can contain any type of data.\r\n *\r\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\r\n * ```ts\r\n * const dispatch = createEventDispatcher<{\r\n *  loaded: never; // does not take a detail argument\r\n *  change: string; // takes a detail argument of type string, which is required\r\n *  optional: number | null; // takes an optional detail argument of type number\r\n * }>();\r\n * ```\r\n *\r\n * @deprecated Use callback props and/or the `$host()` rune instead — see [migration guide](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes-Component-events)\r\n * @template {Record<string, any>} [EventMap = any]\r\n * @returns {EventDispatcher<EventMap>}\r\n */\r\nexport function createEventDispatcher() {\r\n\tconst active_component_context = component_context;\r\n\tif (active_component_context === null) {\r\n\t\tlifecycle_outside_component('createEventDispatcher');\r\n\t}\r\n\r\n\treturn (type, detail, options) => {\r\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\r\n\t\t\tactive_component_context.s.$$events\r\n\t\t)?.[/** @type {any} */ (type)];\r\n\r\n\t\tif (events) {\r\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\r\n\t\t\t// TODO are there situations where events could be dispatched\r\n\t\t\t// in a server (non-DOM) environment?\r\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\r\n\t\t\tfor (const fn of callbacks) {\r\n\t\t\t\tfn.call(active_component_context.x, event);\r\n\t\t\t}\r\n\t\t\treturn !event.defaultPrevented;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n}\r\n\r\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\r\n\r\n/**\r\n * Schedules a callback to run immediately before the component is updated after any state change.\r\n *\r\n * The first time the callback runs will be before the initial `onMount`.\r\n *\r\n * In runes mode use `$effect.pre` instead.\r\n *\r\n * @deprecated Use [`$effect.pre`](https://svelte.dev/docs/svelte/$effect#$effect.pre) instead\r\n * @param {() => void} fn\r\n * @returns {void}\r\n */\r\nexport function beforeUpdate(fn) {\r\n\tif (component_context === null) {\r\n\t\tlifecycle_outside_component('beforeUpdate');\r\n\t}\r\n\r\n\tif (component_context.l === null) {\r\n\t\te.lifecycle_legacy_only('beforeUpdate');\r\n\t}\r\n\r\n\tinit_update_callbacks(component_context).b.push(fn);\r\n}\r\n\r\n/**\r\n * Schedules a callback to run immediately after the component has been updated.\r\n *\r\n * The first time the callback runs will be after the initial `onMount`.\r\n *\r\n * In runes mode use `$effect` instead.\r\n *\r\n * @deprecated Use [`$effect`](https://svelte.dev/docs/svelte/$effect) instead\r\n * @param {() => void} fn\r\n * @returns {void}\r\n */\r\nexport function afterUpdate(fn) {\r\n\tif (component_context === null) {\r\n\t\tlifecycle_outside_component('afterUpdate');\r\n\t}\r\n\r\n\tif (component_context.l === null) {\r\n\t\te.lifecycle_legacy_only('afterUpdate');\r\n\t}\r\n\r\n\tinit_update_callbacks(component_context).a.push(fn);\r\n}\r\n\r\n/**\r\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\r\n * @param {ComponentContext} context\r\n */\r\nfunction init_update_callbacks(context) {\r\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\r\n\treturn (l.u ??= { a: [], b: [], m: [] });\r\n}\r\n\r\n/**\r\n * Synchronously flushes any pending state changes and those that result from it.\r\n * @param {() => void} [fn]\r\n * @returns {void}\r\n */\r\nexport function flushSync(fn) {\r\n\tflush_sync(fn);\r\n}\r\n\r\nexport { hydrate, mount, unmount } from './internal/client/render.js';\r\n\r\nexport {\r\n\tgetContext,\r\n\tgetAllContexts,\r\n\thasContext,\r\n\tsetContext,\r\n\ttick,\r\n\tuntrack\r\n} from './internal/client/runtime.js';\r\n\r\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\r\n"],
  "mappings": "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",
  "names": ["hash", "element", "comment", "effect", "source", "component", "component", "_a", "update", "state", "effect", "fn", "effect", "element", "state", "i", "fallback", "effect", "_a", "index", "next", "element", "effect", "hash", "next", "html", "node", "snippet", "component", "element", "html", "get_component", "component", "effect", "element", "effect", "action", "clsx", "element", "prop", "next", "clsx", "key", "prev", "hash", "now", "element", "animation", "to", "transition", "run", "block", "tick", "keyframes", "styles", "t", "update", "event", "get", "set", "hydration_mismatch", "index", "input", "get", "set", "update", "update", "prop", "get", "set", "element", "listeners", "set", "update", "element", "get", "set", "get", "set", "props", "event", "run", "effect", "fallback", "boundary", "reset", "error", "component", "effect", "slot", "attr", "prop", "element", "component", "event"]
}
