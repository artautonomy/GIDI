import {
  k,
  w
} from "./chunk-QK3ODEAF.js";
import {
  a11y_default
} from "./chunk-V2NGUDQX.js";
import {
  add_locations,
  append_styles,
  bind_checked,
  bind_this,
  bind_window_size,
  check_target,
  cleanup_styles,
  component,
  createEventDispatcher,
  each,
  hmr,
  html,
  if_block,
  index,
  init,
  legacy_api,
  prop,
  remove_input_defaults,
  set_attribute,
  set_class,
  set_style,
  set_value,
  slot,
  spread_props,
  toggle_class,
  wrap_snippet
} from "./chunk-XCV7H6EM.js";
import "./chunk-U7P2NEEE.js";
import {
  append,
  comment,
  preventDefault,
  self,
  set_text,
  template
} from "./chunk-W2XW46EO.js";
import {
  $window,
  FILENAME,
  HMR,
  add_owner_effect,
  apply,
  child,
  deep_read_state,
  derived,
  derived_safe_equal,
  event,
  first_child,
  get,
  legacy_pre_effect,
  legacy_pre_effect_reset,
  mark_module_end,
  mark_module_start,
  mutable_state,
  mutate,
  next,
  pop,
  push,
  reset,
  set,
  sibling,
  strict_equals,
  template_effect,
  tick
} from "./chunk-RG55GIER.js";
import "./chunk-DHV7HKJZ.js";
import "./chunk-ZKM5OPPU.js";
import "./chunk-3YOIARFD.js";
import "./chunk-B4Q33VKO.js";

// node_modules/svelte-awesome-slider/dist/Slider.svelte
mark_module_start();
Slider[FILENAME] = "node_modules/svelte-awesome-slider/dist/Slider.svelte";
var root_1 = add_locations(template(`<input type="hidden">`), Slider[FILENAME], [[147, 1]]);
var root = add_locations(template(`<div class="slider s-eZjeK1eZlF5I" role="slider" tabindex="0"><div class="track s-eZjeK1eZlF5I"></div> <div class="thumb s-eZjeK1eZlF5I"></div></div> <!>`, 1), Slider[FILENAME], [
  [121, 0, [[142, 1], [143, 1]]]
]);
var $$css = {
  hash: "s-eZjeK1eZlF5I",
  code: "\r\n	.slider.s-eZjeK1eZlF5I {\r\n		---track-width: var(--track-width, unset);\r\n		---track-height: var(--track-height, 6px);\r\n		---track-background: var(--track-background, #949494);\r\n		---track-border: var(--track-border, none);\r\n		---thumb-size: var(--thumb-size, 16px);\r\n		---thumb-background: var(--thumb-background, #2d2d2d);\r\n		---thumb-border: var(--thumb-border, none);\r\n		---position: var(--position, 0px);\r\n\r\n		---margin-inline-thumb-bigger: max(var(---thumb-size) - var(---track-height), 0px);\r\n		---margin-inline-thumb-smaller: max(var(---track-height) - var(---thumb-size), 0px);\r\n\r\n		position: relative;\r\n		margin: auto;\r\n		user-select: none;\r\n		-webkit-user-select: none;\r\n		background-color: transparent;\r\n	}\r\n\r\n	.slider.s-eZjeK1eZlF5I::before {\r\n		background-color: transparent;\r\n	}\r\n\r\n	[aria-orientation='horizontal'].s-eZjeK1eZlF5I {\r\n		width: var(---track-width);\r\n		max-width: calc(100% - 2 * var(---margin-inline-thumb-bigger));\r\n		height: calc(max(var(---track-height), var(---thumb-size)) + 4px);\r\n		height: max(var(---track-height), var(---thumb-size));\r\n		margin-inline: var(---margin-inline-thumb-bigger);\r\n		margin-block: var(--margin-block, 8px);\r\n	}\r\n\r\n	[aria-orientation='vertical'].s-eZjeK1eZlF5I {\r\n		width: calc(max(var(---track-height), var(---thumb-size)) + 4px);\r\n		width: max(var(---track-height), var(---thumb-size));\r\n		height: var(---track-width);\r\n		max-height: calc(100% - 2 * var(---margin-inline-thumb-bigger));\r\n		margin-block: var(---margin-inline-thumb-bigger);\r\n		margin-inline: var(--margin-block, 8px);\r\n	}\r\n\r\n	.track.s-eZjeK1eZlF5I {\r\n		position: absolute;\r\n		pointer-events: none;\r\n		background: var(---track-background);\r\n		border: var(---track-border);\r\n		border-radius: calc(var(---track-height) / 2);\r\n		box-sizing: border-box;\r\n	}\r\n\r\n	[aria-orientation='horizontal'].s-eZjeK1eZlF5I .track:where(.s-eZjeK1eZlF5I) {\r\n		height: var(---track-height);\r\n		top: 50%;\r\n		transform: translateY(-50%);\r\n		left: 0;\r\n		right: 0;\r\n	}\r\n\r\n	[aria-orientation='vertical'].s-eZjeK1eZlF5I .track:where(.s-eZjeK1eZlF5I) {\r\n		width: var(---track-height);\r\n		left: 50%;\r\n		transform: translateX(-50%);\r\n		top: 0;\r\n		bottom: 0;\r\n	}\r\n\r\n	.thumb.s-eZjeK1eZlF5I {\r\n		pointer-events: none;\r\n		position: absolute;\r\n		height: var(---thumb-size);\r\n		width: var(---thumb-size);\r\n		border-radius: calc(var(---thumb-size) / 2);\r\n		background: var(---thumb-background);\r\n		border: var(---thumb-border);\r\n		box-sizing: border-box;\r\n\r\n		transform: translate(-50%, -50%);\r\n		--margin-left: (\r\n				2 * var(---track-height) - var(---thumb-size) - var(---margin-inline-thumb-smaller)\r\n			) / 2;\r\n		--left: calc(var(---position) * (100% - 2 * var(--margin-left)) + var(--margin-left));\r\n	}\r\n\r\n	[aria-orientation='horizontal'].s-eZjeK1eZlF5I:not(.reverse) .thumb:where(.s-eZjeK1eZlF5I) {\r\n		top: 50%;\r\n		left: var(--left);\r\n	}\r\n\r\n	[aria-orientation='vertical'].s-eZjeK1eZlF5I:not(.reverse) .thumb:where(.s-eZjeK1eZlF5I) {\r\n		left: 50%;\r\n		bottom: calc(var(--left) - var(---thumb-size));\r\n	}\r\n\r\n	[aria-orientation='horizontal'].reverse.s-eZjeK1eZlF5I .thumb:where(.s-eZjeK1eZlF5I) {\r\n		top: 50%;\r\n		right: calc(var(--left) - var(---thumb-size));\r\n	}\r\n\r\n	[aria-orientation='vertical'].reverse.s-eZjeK1eZlF5I .thumb:where(.s-eZjeK1eZlF5I) {\r\n		left: 50%;\r\n		top: calc(var(--left));\r\n	}\r\n\r\n	.slider.s-eZjeK1eZlF5I:focus-visible {\r\n		outline: none;\r\n	}\r\n\r\n	.slider.s-eZjeK1eZlF5I:focus-visible .track:where(.s-eZjeK1eZlF5I) {\r\n		outline: 2px solid var(--focus-color, red);\r\n		outline-offset: 2px;\r\n	}\r\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xpZGVyLnN2ZWx0ZSIsIm1hcHBpbmdzIjoiQUF1S087QUFDUCxDQUFDLHNCQUFPLENBQUM7QUFDVCxFQUFFLHlDQUF5QztBQUMzQyxFQUFFLHlDQUF5QztBQUMzQyxFQUFFLHFEQUFxRDtBQUN2RCxFQUFFLDBDQUEwQztBQUM1QyxFQUFFLHNDQUFzQztBQUN4QyxFQUFFLHFEQUFxRDtBQUN2RCxFQUFFLDBDQUEwQztBQUM1QyxFQUFFLGlDQUFpQztBQUNuQztBQUNBLEVBQUUsa0ZBQWtGO0FBQ3BGLEVBQUUsbUZBQW1GO0FBQ3JGO0FBQ0EsRUFBRSxrQkFBa0I7QUFDcEIsRUFBRSxZQUFZO0FBQ2QsRUFBRSxpQkFBaUI7QUFDbkIsRUFBRSx5QkFBeUI7QUFDM0IsRUFBRSw2QkFBNkI7QUFDL0IsRUFBRTtBQUNGO0FBQ0EsQ0FBQyxzQkFBTyxRQUFRLENBQUM7QUFDakIsRUFBRSw2QkFBNkI7QUFDL0IsRUFBRTtBQUNGO0FBQ0EsQ0FBQyw4Q0FBK0IsQ0FBQztBQUNqQyxFQUFFLDBCQUEwQjtBQUM1QixFQUFFLDhEQUE4RDtBQUNoRSxFQUFFLGlFQUFpRTtBQUNuRSxFQUFFLHFEQUFxRDtBQUN2RCxFQUFFLGlEQUFpRDtBQUNuRCxFQUFFLHNDQUFzQztBQUN4QyxFQUFFO0FBQ0Y7QUFDQSxDQUFDLDRDQUE2QixDQUFDO0FBQy9CLEVBQUUsZ0VBQWdFO0FBQ2xFLEVBQUUsb0RBQW9EO0FBQ3RELEVBQUUsMkJBQTJCO0FBQzdCLEVBQUUsK0RBQStEO0FBQ2pFLEVBQUUsZ0RBQWdEO0FBQ2xELEVBQUUsdUNBQXVDO0FBQ3pDLEVBQUU7QUFDRjtBQUNBLENBQUMscUJBQU0sQ0FBQztBQUNSLEVBQUUsa0JBQWtCO0FBQ3BCLEVBQUUsb0JBQW9CO0FBQ3RCLEVBQUUsb0NBQW9DO0FBQ3RDLEVBQUUsNEJBQTRCO0FBQzlCLEVBQUUsNkNBQTZDO0FBQy9DLEVBQUUsc0JBQXNCO0FBQ3hCLEVBQUU7QUFDRjtBQUNBLENBQUMsOENBQStCLENBQUMsNkJBQU0sQ0FBQztBQUN4QyxFQUFFLDRCQUE0QjtBQUM5QixFQUFFLFFBQVE7QUFDVixFQUFFLDJCQUEyQjtBQUM3QixFQUFFLE9BQU87QUFDVCxFQUFFLFFBQVE7QUFDVixFQUFFO0FBQ0Y7QUFDQSxDQUFDLDRDQUE2QixDQUFDLDZCQUFNLENBQUM7QUFDdEMsRUFBRSwyQkFBMkI7QUFDN0IsRUFBRSxTQUFTO0FBQ1gsRUFBRSwyQkFBMkI7QUFDN0IsRUFBRSxNQUFNO0FBQ1IsRUFBRSxTQUFTO0FBQ1gsRUFBRTtBQUNGO0FBQ0EsQ0FBQyxxQkFBTSxDQUFDO0FBQ1IsRUFBRSxvQkFBb0I7QUFDdEIsRUFBRSxrQkFBa0I7QUFDcEIsRUFBRSwwQkFBMEI7QUFDNUIsRUFBRSx5QkFBeUI7QUFDM0IsRUFBRSwyQ0FBMkM7QUFDN0MsRUFBRSxvQ0FBb0M7QUFDdEMsRUFBRSw0QkFBNEI7QUFDOUIsRUFBRSxzQkFBc0I7QUFDeEI7QUFDQSxFQUFFLGdDQUFnQztBQUNsQyxFQUFFO0FBQ0Y7QUFDQSxRQUFRO0FBQ1IsRUFBRSxxRkFBcUY7QUFDdkYsRUFBRTtBQUNGO0FBQ0EsQ0FBQyw4Q0FBK0IsS0FBSyxRQUFRLENBQUMsQ0FBQyw2QkFBTSxDQUFDO0FBQ3RELEVBQUUsUUFBUTtBQUNWLEVBQUUsaUJBQWlCO0FBQ25CLEVBQUU7QUFDRjtBQUNBLENBQUMsNENBQTZCLEtBQUssUUFBUSxDQUFDLENBQUMsNkJBQU0sQ0FBQztBQUNwRCxFQUFFLFNBQVM7QUFDWCxFQUFFLDhDQUE4QztBQUNoRCxFQUFFO0FBQ0Y7QUFDQSxDQUFDLCtCQUErQix1QkFBUSxDQUFDLDZCQUFNLENBQUM7QUFDaEQsRUFBRSxRQUFRO0FBQ1YsRUFBRSw2Q0FBNkM7QUFDL0MsRUFBRTtBQUNGO0FBQ0EsQ0FBQyw2QkFBNkIsdUJBQVEsQ0FBQyw2QkFBTSxDQUFDO0FBQzlDLEVBQUUsU0FBUztBQUNYLEVBQUUsc0JBQXNCO0FBQ3hCLEVBQUU7QUFDRjtBQUNBLENBQUMsc0JBQU8sY0FBYyxDQUFDO0FBQ3ZCLEVBQUUsYUFBYTtBQUNmLEVBQUU7QUFDRjtBQUNBLENBQUMsc0JBQU8sY0FBYyxDQUFDLDZCQUFNLENBQUM7QUFDOUIsRUFBRSwwQ0FBMEM7QUFDNUMsRUFBRSxtQkFBbUI7QUFDckIsRUFBRSIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiU2xpZGVyLnN2ZWx0ZSJdfQ== */"
};
function Slider($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, Slider);
  append_styles($$anchor, $$css);
  const _min = mutable_state();
  const _max = mutable_state();
  const _step = mutable_state();
  const position = mutable_state();
  let min = prop($$props, "min", 8, 0);
  let max = prop($$props, "max", 8, 100);
  let step = prop($$props, "step", 8, 1);
  let value = prop($$props, "value", 12, 50);
  let ariaValueText = prop($$props, "ariaValueText", 8, (current) => current.toString());
  let name = prop($$props, "name", 8, void 0);
  let direction = prop($$props, "direction", 8, "horizontal");
  let reverse = prop($$props, "reverse", 8, false);
  let keyboardOnly = prop($$props, "keyboardOnly", 8, false);
  let slider = prop($$props, "slider", 12, void 0);
  let ariaLabel = prop($$props, "ariaLabel", 8, void 0);
  let ariaLabelledBy = prop($$props, "ariaLabelledBy", 8, void 0);
  let ariaControls = prop($$props, "ariaControls", 8, void 0);
  let isDragging = prop($$props, "isDragging", 12, false);
  const dispatch = createEventDispatcher();
  function bound(value2) {
    const ratio = 1 / get(_step);
    const rounded = Math.round(value2 * ratio) / ratio;
    return Math.max(get(_min), Math.min(get(_max), rounded));
  }
  function keyHandler(e) {
    const inc = e.shiftKey ? get(_step) * 10 : get(_step);
    if (strict_equals(e.key, "ArrowUp") || strict_equals(e.key, "ArrowRight")) {
      value(value() + inc);
      e.preventDefault();
    } else if (strict_equals(e.key, "ArrowDown") || strict_equals(e.key, "ArrowLeft")) {
      value(value() - inc);
      e.preventDefault();
    } else if (strict_equals(e.key, "Home")) {
      value(get(_min));
      e.preventDefault();
    } else if (strict_equals(e.key, "End")) {
      value(get(_max));
      e.preventDefault();
    } else if (strict_equals(e.key, "PageUp")) {
      value(value() + get(_step) * 10);
      e.preventDefault();
    } else if (strict_equals(e.key, "PageDown")) {
      value(value() - get(_step) * 10);
      e.preventDefault();
    }
    value(bound(value()));
    dispatch("input", value());
  }
  const config = {
    horizontal: {
      clientSize: "clientWidth",
      offset: "left",
      client: "clientX"
    },
    vertical: {
      clientSize: "clientHeight",
      offset: "top",
      client: "clientY"
    }
  };
  function updateValue(e) {
    var _a, _b;
    const clientWidth = ((_a = slider()) == null ? void 0 : _a[config[direction()].clientSize]) || 120;
    const sliderOffsetX = ((_b = slider()) == null ? void 0 : _b.getBoundingClientRect()[config[direction()].offset]) || 0;
    let offsetX = e[config[direction()].client] - sliderOffsetX;
    if (strict_equals(direction(), "vertical")) offsetX = -1 * offsetX + clientWidth;
    if (reverse()) {
      value(get(_max) - offsetX / clientWidth * (get(_max) - get(_min)));
    } else {
      value(offsetX / clientWidth * (get(_max) - get(_min)) + get(_min));
    }
    value(bound(value()));
    dispatch("input", value());
  }
  function jump(e) {
    updateValue(e);
    isDragging(true);
  }
  function drag(e) {
    if (isDragging()) updateValue(e);
  }
  function endDrag() {
    isDragging(false);
  }
  function touch(e) {
    updateValue({
      clientX: e.changedTouches[0].clientX,
      clientY: e.changedTouches[0].clientY
    });
  }
  legacy_pre_effect(() => deep_read_state(min()), () => {
    set(_min, strict_equals(typeof min(), "string") ? parseFloat(min()) : min());
  });
  legacy_pre_effect(() => deep_read_state(max()), () => {
    set(_max, strict_equals(typeof max(), "string") ? parseFloat(max()) : max());
  });
  legacy_pre_effect(() => deep_read_state(step()), () => {
    set(_step, strict_equals(typeof step(), "string") ? parseFloat(step()) : step());
  });
  legacy_pre_effect(
    () => (deep_read_state(value()), get(_min), get(_max)),
    () => {
      set(position, ((value() - get(_min)) / (get(_max) - get(_min)) * 1).toFixed(4));
    }
  );
  legacy_pre_effect_reset();
  init();
  var fragment = root();
  event("mousemove", $window, drag);
  event("mouseup", $window, endDrag);
  var div = first_child(fragment);
  template_effect(() => set_attribute(div, "aria-valuetext", ariaValueText()(value())));
  bind_this(div, ($$value) => slider($$value), () => slider());
  var node = sibling(div, 2);
  {
    var consequent = ($$anchor2) => {
      var input = root_1();
      remove_input_defaults(input);
      template_effect(() => {
        set_attribute(input, "name", name());
        set_value(input, value());
      });
      append($$anchor2, input);
    };
    if_block(node, ($$render) => {
      if (name()) $$render(consequent);
    });
  }
  template_effect(() => {
    set_attribute(div, "aria-orientation", direction());
    set_attribute(div, "aria-valuemax", get(_max));
    set_attribute(div, "aria-valuemin", get(_min));
    set_attribute(div, "aria-valuenow", value());
    set_attribute(div, "aria-label", ariaLabel());
    set_attribute(div, "aria-labelledby", ariaLabelledBy());
    set_attribute(div, "aria-controls", ariaControls());
    toggle_class(div, "reverse", reverse());
    set_style(div, "--position", get(position));
  });
  event("keydown", div, keyHandler);
  event("mousedown", div, self(function(...$$args) {
    apply(() => keyboardOnly() ? void 0 : jump, this, $$args, Slider, [137, 20]);
  }));
  event(
    "touchstart",
    div,
    preventDefault(function(...$$args) {
      apply(() => keyboardOnly() ? void 0 : touch, this, $$args, Slider, [138, 42]);
    }),
    void 0,
    false
  );
  event(
    "touchmove",
    div,
    preventDefault(function(...$$args) {
      apply(() => keyboardOnly() ? void 0 : touch, this, $$args, Slider, [139, 41]);
    }),
    void 0,
    false
  );
  event(
    "touchend",
    div,
    preventDefault(function(...$$args) {
      apply(() => keyboardOnly() ? void 0 : touch, this, $$args, Slider, [140, 40]);
    }),
    void 0,
    false
  );
  append($$anchor, fragment);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  Slider = hmr(Slider, () => Slider[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-eZjeK1eZlF5I");
    module.default[HMR].source = Slider[HMR].source;
    set(Slider[HMR].source, module.default[HMR].original);
  });
}
var Slider_default = Slider;
mark_module_end(Slider);

// node_modules/svelte-awesome-color-picker/dist/components/Picker.svelte
mark_module_start();
Picker[FILENAME] = "node_modules/svelte-awesome-color-picker/dist/components/Picker.svelte";
var root2 = add_locations(template(`<div class="picker s-I_jqm1SJDaan"><!> <div class="s s-I_jqm1SJDaan"><!></div> <div class="v s-I_jqm1SJDaan"><!></div></div>`), Picker[FILENAME], [
  [68, 0, [[78, 1], [81, 1]]]
]);
var $$css2 = {
  hash: "s-I_jqm1SJDaan",
  code: "\r\n	.picker.s-I_jqm1SJDaan {\r\n		position: relative;\r\n		display: inline-block;\r\n		width: var(--picker-width, 200px);\r\n		height: var(--picker-height, 200px);\r\n		background: linear-gradient(#ffffff00, #000000ff), linear-gradient(0.25turn, #ffffffff, #00000000),\r\n			var(--picker-color-bg);\r\n		border-radius: var(--picker-radius, 8px);\r\n		outline: none;\r\n		user-select: none;\r\n	}\r\n\r\n	.s.s-I_jqm1SJDaan,\r\n	.v.s-I_jqm1SJDaan {\r\n		position: absolute;\r\n		--track-background: none;\r\n		--track-border: none;\r\n		--thumb-background: none;\r\n		--thumb-border: none;\r\n		--thumb-size: 2px;\r\n		--margin-block: 0;\r\n		--track-height: var(--picker-indicator-size, 10px);\r\n		user-select: none;\r\n		-webkit-user-select: none;\r\n	}\r\n\r\n	.s.s-I_jqm1SJDaan {\r\n		top: calc(var(--pos-y) * (var(--picker-height, 200px) - var(--picker-indicator-size, 10px) - 4px) / 100 + 2px);\r\n		left: 2px;\r\n		--track-width: calc(var(--picker-width, 200px) - 4px);\r\n	}\r\n\r\n	.v.s-I_jqm1SJDaan {\r\n		top: 2px;\r\n		left: calc(var(--pos-x) * (var(--picker-width, 200px) - var(--picker-indicator-size, 10px) - 4px) / 100 + 2px);\r\n		--track-width: calc(var(--picker-height, 200px) - 4px);\r\n	}\r\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGlja2VyLnN2ZWx0ZSIsIm1hcHBpbmdzIjoiQUE0R087QUFDUCxDQUFDLHNCQUFPLENBQUM7QUFDVCxFQUFFLGtCQUFrQjtBQUNwQixFQUFFLHFCQUFxQjtBQUN2QixFQUFFLGlDQUFpQztBQUNuQyxFQUFFLG1DQUFtQztBQUNyQyxFQUFFO0FBQ0YseUJBQXlCO0FBQ3pCLEVBQUUsd0NBQXdDO0FBQzFDLEVBQUUsYUFBYTtBQUNmLEVBQUUsaUJBQWlCO0FBQ25CLEVBQUU7QUFDRjtBQUNBLENBQUMsaUJBQUU7QUFDSCxDQUFDLGlCQUFFLENBQUM7QUFDSixFQUFFLGtCQUFrQjtBQUNwQixFQUFFLHdCQUF3QjtBQUMxQixFQUFFLG9CQUFvQjtBQUN0QixFQUFFLHdCQUF3QjtBQUMxQixFQUFFLG9CQUFvQjtBQUN0QixFQUFFLGlCQUFpQjtBQUNuQixFQUFFLGlCQUFpQjtBQUNuQixFQUFFLGtEQUFrRDtBQUNwRCxFQUFFLGlCQUFpQjtBQUNuQixFQUFFLHlCQUF5QjtBQUMzQixFQUFFO0FBQ0Y7QUFDQSxDQUFDLGlCQUFFLENBQUM7QUFDSixFQUFFLDhHQUE4RztBQUNoSCxFQUFFLFNBQVM7QUFDWCxFQUFFLHFEQUFxRDtBQUN2RCxFQUFFO0FBQ0Y7QUFDQSxDQUFDLGlCQUFFLENBQUM7QUFDSixFQUFFLFFBQVE7QUFDVixFQUFFLDhHQUE4RztBQUNoSCxFQUFFLHNEQUFzRDtBQUN4RCxFQUFFIiwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJQaWNrZXIuc3ZlbHRlIl19 */"
};
function Picker($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, Picker);
  append_styles($$anchor, $$css2);
  const dispatch = createEventDispatcher();
  let components = prop($$props, "components", 8);
  let h = prop($$props, "h", 8);
  let s = prop($$props, "s", 12);
  let v = prop($$props, "v", 12);
  let isDark = prop($$props, "isDark", 8);
  let texts = prop($$props, "texts", 8);
  let picker = mutable_state();
  let isMouseDown = false;
  let focused = false;
  let pickerColorBg = mutable_state();
  let pos = mutable_state({ x: 100, y: 0 });
  function clamp(value, min, max) {
    return Math.min(Math.max(min, value), max);
  }
  function onClick(e) {
    const { width, left, height, top } = get(picker).getBoundingClientRect();
    const mouse = {
      x: clamp(e.clientX - left, 0, width),
      y: clamp(e.clientY - top, 0, height)
    };
    s(clamp(mouse.x / width, 0, 1) * 100);
    v(clamp((height - mouse.y) / height, 0, 1) * 100);
  }
  function pickerMousedown(e) {
    if (strict_equals(e.button, 0)) {
      isMouseDown = true;
      onClick(e);
    }
  }
  function mouseUp() {
    isMouseDown = false;
  }
  function mouseMove(e) {
    if (isMouseDown) onClick(e);
  }
  function mouseDown(e) {
    if (!e.target.isSameNode(get(picker))) focused = false;
  }
  function touch(e) {
    e.preventDefault();
    onClick(e.changedTouches[0]);
  }
  legacy_pre_effect(() => (deep_read_state(h()), w), () => {
    if (strict_equals(typeof h(), "number")) set(pickerColorBg, w({ h: h(), s: 100, v: 100, a: 1 }).toHex());
  });
  legacy_pre_effect(
    () => (deep_read_state(s()), deep_read_state(v()), get(picker)),
    () => {
      if (strict_equals(typeof s(), "number") && strict_equals(typeof v(), "number") && get(picker)) set(pos, { x: s(), y: 100 - v() });
    }
  );
  legacy_pre_effect(
    () => (deep_read_state(s()), deep_read_state(v())),
    () => {
      dispatch("input", { s: s(), v: v() });
    }
  );
  legacy_pre_effect_reset();
  init();
  var div = root2();
  event("mouseup", $window, mouseUp);
  event("mousedown", $window, mouseDown);
  event("mousemove", $window, mouseMove);
  var node = child(div);
  component(node, () => components().pickerIndicator, ($$anchor2, $$component) => {
    $$component($$anchor2, {
      get pos() {
        return get(pos);
      },
      get isDark() {
        return isDark();
      }
    });
  });
  var div_1 = sibling(node, 2);
  var node_1 = child(div_1);
  {
    add_owner_effect(s, Slider_default);
    Slider_default(node_1, {
      keyboardOnly: true,
      ariaValueText: (value) => `${value}%`,
      get ariaLabel() {
        return texts().label.s;
      },
      get value() {
        return s();
      },
      set value($$value) {
        s($$value);
      },
      $$legacy: true
    });
  }
  reset(div_1);
  var div_2 = sibling(div_1, 2);
  var node_2 = child(div_2);
  {
    add_owner_effect(v, Slider_default);
    Slider_default(node_2, {
      keyboardOnly: true,
      ariaValueText: (value) => `${value}%`,
      direction: "vertical",
      get ariaLabel() {
        return texts().label.v;
      },
      get value() {
        return v();
      },
      set value($$value) {
        v($$value);
      },
      $$legacy: true
    });
  }
  reset(div_2);
  reset(div);
  bind_this(div, ($$value) => set(picker, $$value), () => get(picker));
  template_effect(() => {
    set_style(div, "--picker-color-bg", get(pickerColorBg));
    set_style(div_1, "--pos-y", get(pos).y);
    set_style(div_2, "--pos-x", get(pos).x);
  });
  event("mousedown", div, preventDefault(pickerMousedown));
  event("touchstart", div, touch, void 0, false);
  event("touchmove", div, preventDefault(touch), void 0, false);
  event("touchend", div, touch, void 0, false);
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  Picker = hmr(Picker, () => Picker[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-I_jqm1SJDaan");
    module.default[HMR].source = Picker[HMR].source;
    set(Picker[HMR].source, module.default[HMR].original);
  });
}
var Picker_default = Picker;
mark_module_end(Picker);

// node_modules/svelte-awesome-color-picker/dist/components/variant/default/PickerIndicator.svelte
mark_module_start();
PickerIndicator[FILENAME] = "node_modules/svelte-awesome-color-picker/dist/components/variant/default/PickerIndicator.svelte";
var root3 = add_locations(template(`<div class="picker-indicator s-KLY8nRuAl09a"></div>`), PickerIndicator[FILENAME], [[7, 0]]);
var $$css3 = {
  hash: "s-KLY8nRuAl09a",
  code: "\r\n	div.s-KLY8nRuAl09a {\r\n		position: absolute;\r\n		left: calc(var(--pos-x) * (var(--picker-width, 200px) - var(--picker-indicator-size, 10px) - 4px) / 100 + 2px);\r\n		top: calc(var(--pos-y) * (var(--picker-height, 200px) - var(--picker-indicator-size, 10px) - 4px) / 100 + 2px);\r\n\r\n		width: var(--picker-indicator-size, 10px);\r\n		height: var(--picker-indicator-size, 10px);\r\n		background-color: white;\r\n		box-shadow: 0 0 4px black;\r\n		border-radius: 50%;\r\n\r\n		pointer-events: none;\r\n		z-index: 1;\r\n		transition: box-shadow 0.2s;\r\n	}\r\n	.is-dark.s-KLY8nRuAl09a {\r\n		box-shadow: 0 0 4px white;\r\n	}\r\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGlja2VySW5kaWNhdG9yLnN2ZWx0ZSIsIm1hcHBpbmdzIjoiQUFRTztBQUNQLENBQUMsa0JBQUcsQ0FBQztBQUNMLEVBQUUsa0JBQWtCO0FBQ3BCLEVBQUUsOEdBQThHO0FBQ2hILEVBQUUsOEdBQThHO0FBQ2hIO0FBQ0EsRUFBRSx5Q0FBeUM7QUFDM0MsRUFBRSwwQ0FBMEM7QUFDNUMsRUFBRSx1QkFBdUI7QUFDekIsRUFBRSx5QkFBeUI7QUFDM0IsRUFBRSxrQkFBa0I7QUFDcEI7QUFDQSxFQUFFLG9CQUFvQjtBQUN0QixFQUFFLFVBQVU7QUFDWixFQUFFLDJCQUEyQjtBQUM3QixFQUFFO0FBQ0YsQ0FBQyx1QkFBUSxDQUFDO0FBQ1YsRUFBRSx5QkFBeUI7QUFDM0IsRUFBRSIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiUGlja2VySW5kaWNhdG9yLnN2ZWx0ZSJdfQ== */"
};
function PickerIndicator($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, PickerIndicator);
  append_styles($$anchor, $$css3);
  let pos = prop($$props, "pos", 8);
  let isDark = prop($$props, "isDark", 8);
  init();
  var div = root3();
  template_effect(() => {
    toggle_class(div, "is-dark", isDark());
    set_style(div, "--pos-x", pos().x);
    set_style(div, "--pos-y", pos().y);
  });
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  PickerIndicator = hmr(PickerIndicator, () => PickerIndicator[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-KLY8nRuAl09a");
    module.default[HMR].source = PickerIndicator[HMR].source;
    set(PickerIndicator[HMR].source, module.default[HMR].original);
  });
}
var PickerIndicator_default = PickerIndicator;
mark_module_end(PickerIndicator);

// node_modules/svelte-awesome-color-picker/dist/components/variant/default/TextInput.svelte
mark_module_start();
TextInput[FILENAME] = "node_modules/svelte-awesome-color-picker/dist/components/variant/default/TextInput.svelte";
var root_12 = add_locations(template(`<input class="s-WGO6sKbvKxz_">`), TextInput[FILENAME], [[46, 3]]);
var root_3 = add_locations(template(`<input type="number" min="0" max="255" class="s-WGO6sKbvKxz_"> <input type="number" min="0" max="255" class="s-WGO6sKbvKxz_"> <input type="number" min="0" max="255" class="s-WGO6sKbvKxz_">`, 1), TextInput[FILENAME], [[48, 3], [49, 3], [50, 3]]);
var root_4 = add_locations(template(`<input type="number" min="0" max="360" class="s-WGO6sKbvKxz_"> <input type="number" min="0" max="100" class="s-WGO6sKbvKxz_"> <input type="number" min="0" max="100" class="s-WGO6sKbvKxz_">`, 1), TextInput[FILENAME], [[52, 3], [53, 3], [54, 3]]);
var root_5 = add_locations(template(`<input type="number" min="0" max="1" step="0.01" class="s-WGO6sKbvKxz_">`), TextInput[FILENAME], [[57, 3]]);
var root_6 = add_locations(template(`<button type="button" class="s-WGO6sKbvKxz_"><span class="disappear s-WGO6sKbvKxz_" aria-hidden="true"> </span> <span class="appear s-WGO6sKbvKxz_"> </span></button>`), TextInput[FILENAME], [
  [70, 2, [[71, 3], [72, 3]]]
]);
var root_7 = add_locations(template(`<div class="button-like s-WGO6sKbvKxz_"> </div>`), TextInput[FILENAME], [[75, 2]]);
var root4 = add_locations(template(`<div class="text-input s-WGO6sKbvKxz_"><div class="input-container s-WGO6sKbvKxz_"><!> <!></div> <!></div>`), TextInput[FILENAME], [[43, 0, [[44, 1]]]]);
var $$css4 = {
  hash: "s-WGO6sKbvKxz_",
  code: "\r\n	.text-input.s-WGO6sKbvKxz_ {\r\n		margin: var(--text-input-margin, 5px 0 0);\r\n	}\r\n	.input-container.s-WGO6sKbvKxz_ {\r\n		display: flex;\r\n		flex: 1;\r\n		gap: 10px;\r\n	}\r\n	input.s-WGO6sKbvKxz_,\r\n	button.s-WGO6sKbvKxz_,\r\n	.button-like.s-WGO6sKbvKxz_ {\r\n		flex: 1;\r\n		border: none;\r\n		background-color: var(--cp-input-color, #eee);\r\n		color: var(--cp-text-color, var(--cp-border-color));\r\n		padding: 0;\r\n		border-radius: 5px;\r\n		height: 30px;\r\n		line-height: 30px;\r\n		text-align: center;\r\n	}\r\n	input.s-WGO6sKbvKxz_ {\r\n		width: 5px;\r\n		font-family: inherit;\r\n	}\r\n\r\n	button.s-WGO6sKbvKxz_,\r\n	.button-like.s-WGO6sKbvKxz_ {\r\n		position: relative;\r\n		flex: 1;\r\n		margin: 8px 0 0;\r\n		height: 30px;\r\n		width: 100%;\r\n		transition: background-color 0.2s;\r\n		cursor: pointer;\r\n		font-family: inherit;\r\n	}\r\n\r\n	.button-like.s-WGO6sKbvKxz_ {\r\n		cursor: default;\r\n	}\r\n\r\n	.appear.s-WGO6sKbvKxz_,\r\n	.disappear.s-WGO6sKbvKxz_ {\r\n		position: absolute;\r\n		left: 50%;\r\n		top: 50%;\r\n		transform: translate(-50%, -50%);\r\n		width: 100%;\r\n		transition: all 0.5s;\r\n	}\r\n	button.s-WGO6sKbvKxz_:hover .disappear:where(.s-WGO6sKbvKxz_),\r\n	.appear.s-WGO6sKbvKxz_ {\r\n		opacity: 0;\r\n	}\r\n\r\n	.disappear.s-WGO6sKbvKxz_,\r\n	button.s-WGO6sKbvKxz_:hover .appear:where(.s-WGO6sKbvKxz_) {\r\n		opacity: 1;\r\n	}\r\n\r\n	button.s-WGO6sKbvKxz_:hover {\r\n		background-color: var(--cp-button-hover-color, #ccc);\r\n	}\r\n\r\n	input.s-WGO6sKbvKxz_:focus,\r\n	button.s-WGO6sKbvKxz_:focus {\r\n		outline: none;\r\n	}\r\n\r\n	input.s-WGO6sKbvKxz_:focus-visible,\r\n	button.s-WGO6sKbvKxz_:focus-visible {\r\n		outline: 2px solid var(--focus-color, red);\r\n		outline-offset: 2px;\r\n	}\r\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGV4dElucHV0LnN2ZWx0ZSIsIm1hcHBpbmdzIjoiQUFnR087QUFDUCxDQUFDLDBCQUFXLENBQUM7QUFDYixFQUFFLHlDQUF5QztBQUMzQyxFQUFFO0FBQ0YsQ0FBQywrQkFBZ0IsQ0FBQztBQUNsQixFQUFFLGFBQWE7QUFDZixFQUFFLE9BQU87QUFDVCxFQUFFLFNBQVM7QUFDWCxFQUFFO0FBQ0YsQ0FBQyxvQkFBSztBQUNOLENBQUMscUJBQU07QUFDUCxDQUFDLDJCQUFZLENBQUM7QUFDZCxFQUFFLE9BQU87QUFDVCxFQUFFLFlBQVk7QUFDZCxFQUFFLDZDQUE2QztBQUMvQyxFQUFFLG1EQUFtRDtBQUNyRCxFQUFFLFVBQVU7QUFDWixFQUFFLGtCQUFrQjtBQUNwQixFQUFFLFlBQVk7QUFDZCxFQUFFLGlCQUFpQjtBQUNuQixFQUFFLGtCQUFrQjtBQUNwQixFQUFFO0FBQ0YsQ0FBQyxvQkFBSyxDQUFDO0FBQ1AsRUFBRSxVQUFVO0FBQ1osRUFBRSxvQkFBb0I7QUFDdEIsRUFBRTtBQUNGO0FBQ0EsQ0FBQyxxQkFBTTtBQUNQLENBQUMsMkJBQVksQ0FBQztBQUNkLEVBQUUsa0JBQWtCO0FBQ3BCLEVBQUUsT0FBTztBQUNULEVBQUUsZUFBZTtBQUNqQixFQUFFLFlBQVk7QUFDZCxFQUFFLFdBQVc7QUFDYixFQUFFLGlDQUFpQztBQUNuQyxFQUFFLGVBQWU7QUFDakIsRUFBRSxvQkFBb0I7QUFDdEIsRUFBRTtBQUNGO0FBQ0EsQ0FBQywyQkFBWSxDQUFDO0FBQ2QsRUFBRSxlQUFlO0FBQ2pCLEVBQUU7QUFDRjtBQUNBLENBQUMsc0JBQU87QUFDUixDQUFDLHlCQUFVLENBQUM7QUFDWixFQUFFLGtCQUFrQjtBQUNwQixFQUFFLFNBQVM7QUFDWCxFQUFFLFFBQVE7QUFDVixFQUFFLGdDQUFnQztBQUNsQyxFQUFFLFdBQVc7QUFDYixFQUFFLG9CQUFvQjtBQUN0QixFQUFFO0FBQ0YsQ0FBQyxxQkFBTSxNQUFNLENBQUMsaUNBQVU7QUFDeEIsQ0FBQyxzQkFBTyxDQUFDO0FBQ1QsRUFBRSxVQUFVO0FBQ1osRUFBRTtBQUNGO0FBQ0EsQ0FBQyx5QkFBVTtBQUNYLENBQUMscUJBQU0sTUFBTSxDQUFDLDhCQUFPLENBQUM7QUFDdEIsRUFBRSxVQUFVO0FBQ1osRUFBRTtBQUNGO0FBQ0EsQ0FBQyxxQkFBTSxNQUFNLENBQUM7QUFDZCxFQUFFLG9EQUFvRDtBQUN0RCxFQUFFO0FBQ0Y7QUFDQSxDQUFDLG9CQUFLLE1BQU07QUFDWixDQUFDLHFCQUFNLE1BQU0sQ0FBQztBQUNkLEVBQUUsYUFBYTtBQUNmLEVBQUU7QUFDRjtBQUNBLENBQUMsb0JBQUssY0FBYztBQUNwQixDQUFDLHFCQUFNLGNBQWMsQ0FBQztBQUN0QixFQUFFLDBDQUEwQztBQUM1QyxFQUFFLG1CQUFtQjtBQUNyQixFQUFFIiwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJUZXh0SW5wdXQuc3ZlbHRlIl19 */"
};
function TextInput($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, TextInput);
  append_styles($$anchor, $$css4);
  const nextMode = mutable_state();
  const h = mutable_state();
  const s = mutable_state();
  const v = mutable_state();
  const a = mutable_state();
  const dispatch = createEventDispatcher();
  let isAlpha = prop($$props, "isAlpha", 8);
  let rgb = prop($$props, "rgb", 12);
  let hsv = prop($$props, "hsv", 12);
  let hex = prop($$props, "hex", 12);
  let textInputModes = prop($$props, "textInputModes", 8);
  let texts = prop($$props, "texts", 8);
  const HEX_COLOR_REGEX = /^#?([A-F0-9]{6}|[A-F0-9]{8})$/i;
  let mode = mutable_state(textInputModes()[0] || "hex");
  function updateHex(e) {
    const target = e.target;
    if (HEX_COLOR_REGEX.test(target.value)) {
      hex(target.value);
      dispatch("input", { hex: hex() });
    }
  }
  function updateRgb(property) {
    return function(e) {
      rgb({
        ...rgb(),
        [property]: parseFloat(e.target.value)
      });
      dispatch("input", { rgb: rgb() });
    };
  }
  function updateHsv(property) {
    return function(e) {
      hsv({
        ...hsv(),
        [property]: parseFloat(e.target.value)
      });
      dispatch("input", { hsv: hsv() });
    };
  }
  legacy_pre_effect(
    () => (deep_read_state(textInputModes()), get(mode)),
    () => {
      set(nextMode, textInputModes()[(textInputModes().indexOf(get(mode)) + 1) % textInputModes().length]);
    }
  );
  legacy_pre_effect(() => deep_read_state(hsv()), () => {
    set(h, Math.round(hsv().h));
  });
  legacy_pre_effect(() => deep_read_state(hsv()), () => {
    set(s, Math.round(hsv().s));
  });
  legacy_pre_effect(() => deep_read_state(hsv()), () => {
    set(v, Math.round(hsv().v));
  });
  legacy_pre_effect(() => deep_read_state(hsv()), () => {
    set(a, strict_equals(hsv().a, void 0) ? 1 : Math.round(hsv().a * 100) / 100);
  });
  legacy_pre_effect_reset();
  init();
  var div = root4();
  var div_1 = child(div);
  var node = child(div_1);
  {
    var consequent = ($$anchor2) => {
      var input = root_12();
      remove_input_defaults(input);
      template_effect(() => {
        set_attribute(input, "aria-label", texts().label.hex);
        set_value(input, hex());
        set_style(input, "flex", 3);
      });
      event("input", input, updateHex);
      append($$anchor2, input);
    };
    var alternate_1 = ($$anchor2) => {
      var fragment = comment();
      var node_1 = first_child(fragment);
      {
        var consequent_1 = ($$anchor3) => {
          var fragment_1 = root_3();
          var input_1 = first_child(fragment_1);
          var event_handler = derived(() => updateRgb("r"));
          remove_input_defaults(input_1);
          var input_2 = sibling(input_1, 2);
          var event_handler_1 = derived(() => updateRgb("g"));
          remove_input_defaults(input_2);
          var input_3 = sibling(input_2, 2);
          var event_handler_2 = derived(() => updateRgb("b"));
          remove_input_defaults(input_3);
          template_effect(() => {
            set_attribute(input_1, "aria-label", texts().label.r);
            set_value(input_1, rgb().r);
            set_attribute(input_2, "aria-label", texts().label.g);
            set_value(input_2, rgb().g);
            set_attribute(input_3, "aria-label", texts().label.b);
            set_value(input_3, rgb().b);
          });
          event("input", input_1, function(...$$args) {
            apply(() => get(event_handler), this, $$args, TextInput, [48, 93], true);
          });
          event("input", input_2, function(...$$args) {
            apply(() => get(event_handler_1), this, $$args, TextInput, [49, 93], true);
          });
          event("input", input_3, function(...$$args) {
            apply(() => get(event_handler_2), this, $$args, TextInput, [50, 93], true);
          });
          append($$anchor3, fragment_1);
        };
        var alternate = ($$anchor3) => {
          var fragment_2 = root_4();
          var input_4 = first_child(fragment_2);
          var event_handler_3 = derived(() => updateHsv("h"));
          remove_input_defaults(input_4);
          var input_5 = sibling(input_4, 2);
          var event_handler_4 = derived(() => updateHsv("s"));
          remove_input_defaults(input_5);
          var input_6 = sibling(input_5, 2);
          var event_handler_5 = derived(() => updateHsv("v"));
          remove_input_defaults(input_6);
          template_effect(() => {
            set_attribute(input_4, "aria-label", texts().label.h);
            set_value(input_4, get(h));
            set_attribute(input_5, "aria-label", texts().label.s);
            set_value(input_5, get(s));
            set_attribute(input_6, "aria-label", texts().label.v);
            set_value(input_6, get(v));
          });
          event("input", input_4, function(...$$args) {
            apply(() => get(event_handler_3), this, $$args, TextInput, [52, 89], true);
          });
          event("input", input_5, function(...$$args) {
            apply(() => get(event_handler_4), this, $$args, TextInput, [53, 89], true);
          });
          event("input", input_6, function(...$$args) {
            apply(() => get(event_handler_5), this, $$args, TextInput, [54, 89], true);
          });
          append($$anchor3, fragment_2);
        };
        if_block(
          node_1,
          ($$render) => {
            if (strict_equals(get(mode), "rgb")) $$render(consequent_1);
            else $$render(alternate, false);
          },
          true
        );
      }
      append($$anchor2, fragment);
    };
    if_block(node, ($$render) => {
      if (strict_equals(get(mode), "hex")) $$render(consequent);
      else $$render(alternate_1, false);
    });
  }
  var node_2 = sibling(node, 2);
  {
    var consequent_2 = ($$anchor2) => {
      var input_7 = root_5();
      var event_handler_6 = derived(() => strict_equals(get(mode), "hsv") ? updateHsv("a") : updateRgb("a"));
      remove_input_defaults(input_7);
      template_effect(() => {
        set_attribute(input_7, "aria-label", texts().label.a);
        set_value(input_7, get(a));
      });
      event("input", input_7, function(...$$args) {
        apply(() => get(event_handler_6), this, $$args, TextInput, [64, 14]);
      });
      append($$anchor2, input_7);
    };
    if_block(node_2, ($$render) => {
      if (isAlpha()) $$render(consequent_2);
    });
  }
  reset(div_1);
  var node_3 = sibling(div_1, 2);
  {
    var consequent_3 = ($$anchor2) => {
      var button = root_6();
      var span = child(button);
      var text = child(span, true);
      reset(span);
      var span_1 = sibling(span, 2);
      var text_1 = child(span_1);
      reset(span_1);
      reset(button);
      template_effect(() => {
        set_text(text, texts().color[get(mode)]);
        set_text(text_1, `${texts().changeTo ?? ""} ${get(nextMode) ?? ""}`);
      });
      event("click", button, () => set(mode, get(nextMode)));
      append($$anchor2, button);
    };
    var alternate_2 = ($$anchor2) => {
      var div_2 = root_7();
      var text_2 = child(div_2, true);
      reset(div_2);
      template_effect(() => set_text(text_2, texts().color[get(mode)]));
      append($$anchor2, div_2);
    };
    if_block(node_3, ($$render) => {
      if (textInputModes().length > 1) $$render(consequent_3);
      else $$render(alternate_2, false);
    });
  }
  reset(div);
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  TextInput = hmr(TextInput, () => TextInput[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-WGO6sKbvKxz_");
    module.default[HMR].source = TextInput[HMR].source;
    set(TextInput[HMR].source, module.default[HMR].original);
  });
}
var TextInput_default = TextInput;
mark_module_end(TextInput);

// node_modules/svelte-awesome-color-picker/dist/components/variant/default/Input.svelte
mark_module_start();
Input[FILENAME] = "node_modules/svelte-awesome-color-picker/dist/components/variant/default/Input.svelte";
var root5 = add_locations(template(`<label class="s-vS-df1Z_4QKT"><div class="container s-vS-df1Z_4QKT"><input type="color" aria-haspopup="dialog" class="s-vS-df1Z_4QKT"> <div class="alpha s-vS-df1Z_4QKT"></div> <div class="color s-vS-df1Z_4QKT"></div></div> </label>`), Input[FILENAME], [
  [
    17,
    0,
    [
      [
        18,
        1,
        [[19, 2], [27, 2], [28, 2]]
      ]
    ]
  ]
]);
var $$css5 = {
  hash: "s-vS-df1Z_4QKT",
  code: "\r\n	label.s-vS-df1Z_4QKT {\r\n		display: inline-flex;\r\n		align-items: center;\r\n		gap: 8px;\r\n		cursor: pointer;\r\n		border-radius: 3px;\r\n		margin: 4px;\r\n		height: var(--input-size, 25px);\r\n		user-select: none;\r\n	}\r\n\r\n	.container.s-vS-df1Z_4QKT {\r\n		position: relative;\r\n		display: block;\r\n		display: flex;\r\n		align-items: center;\r\n		justify-content: center;\r\n		width: var(--input-size, 25px);\r\n	}\r\n\r\n	input.s-vS-df1Z_4QKT {\r\n		margin: 0;\r\n		padding: 0;\r\n		border: none;\r\n		width: 1px;\r\n		height: 1px;\r\n		flex-shrink: 0;\r\n		opacity: 0;\r\n	}\r\n\r\n	.alpha.s-vS-df1Z_4QKT {\r\n		clip-path: circle(50%);\r\n		background: var(--alpha-grid-bg);\r\n	}\r\n\r\n	.alpha.s-vS-df1Z_4QKT,\r\n	.color.s-vS-df1Z_4QKT {\r\n		position: absolute;\r\n		width: var(--input-size, 25px);\r\n		height: var(--input-size, 25px);\r\n		border-radius: 50%;\r\n		user-select: none;\r\n	}\r\n\r\n	input.s-vS-df1Z_4QKT:focus-visible ~ .color:where(.s-vS-df1Z_4QKT) {\r\n		outline: 2px solid var(--focus-color, red);\r\n		outline-offset: 2px;\r\n	}\r\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5wdXQuc3ZlbHRlIiwibWFwcGluZ3MiOiJBQWtETztBQUNQLENBQUMsb0JBQUssQ0FBQztBQUNQLEVBQUUsb0JBQW9CO0FBQ3RCLEVBQUUsbUJBQW1CO0FBQ3JCLEVBQUUsUUFBUTtBQUNWLEVBQUUsZUFBZTtBQUNqQixFQUFFLGtCQUFrQjtBQUNwQixFQUFFLFdBQVc7QUFDYixFQUFFLCtCQUErQjtBQUNqQyxFQUFFLGlCQUFpQjtBQUNuQixFQUFFO0FBQ0Y7QUFDQSxDQUFDLHlCQUFVLENBQUM7QUFDWixFQUFFLGtCQUFrQjtBQUNwQixFQUFFLGNBQWM7QUFDaEIsRUFBRSxhQUFhO0FBQ2YsRUFBRSxtQkFBbUI7QUFDckIsRUFBRSx1QkFBdUI7QUFDekIsRUFBRSw4QkFBOEI7QUFDaEMsRUFBRTtBQUNGO0FBQ0EsQ0FBQyxvQkFBSyxDQUFDO0FBQ1AsRUFBRSxTQUFTO0FBQ1gsRUFBRSxVQUFVO0FBQ1osRUFBRSxZQUFZO0FBQ2QsRUFBRSxVQUFVO0FBQ1osRUFBRSxXQUFXO0FBQ2IsRUFBRSxjQUFjO0FBQ2hCLEVBQUUsVUFBVTtBQUNaLEVBQUU7QUFDRjtBQUNBLENBQUMscUJBQU0sQ0FBQztBQUNSLEVBQUUsc0JBQXNCO0FBQ3hCLEVBQUUsZ0NBQWdDO0FBQ2xDLEVBQUU7QUFDRjtBQUNBLENBQUMscUJBQU07QUFDUCxDQUFDLHFCQUFNLENBQUM7QUFDUixFQUFFLGtCQUFrQjtBQUNwQixFQUFFLDhCQUE4QjtBQUNoQyxFQUFFLCtCQUErQjtBQUNqQyxFQUFFLGtCQUFrQjtBQUNwQixFQUFFLGlCQUFpQjtBQUNuQixFQUFFO0FBQ0Y7QUFDQSxDQUFDLG9CQUFLLGNBQWMsQ0FBQyxDQUFDLENBQUMsNkJBQU0sQ0FBQztBQUM5QixFQUFFLDBDQUEwQztBQUM1QyxFQUFFLG1CQUFtQjtBQUNyQixFQUFFIiwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJJbnB1dC5zdmVsdGUiXX0= */"
};
function Input($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, Input);
  append_styles($$anchor, $$css5);
  let labelElement = prop($$props, "labelElement", 12);
  let hex = prop($$props, "hex", 8);
  let label = prop($$props, "label", 8);
  let name = prop($$props, "name", 8, void 0);
  let isOpen = prop($$props, "isOpen", 8);
  function noop() {
  }
  var label_1 = root5();
  var div = child(label_1);
  var input = child(div);
  remove_input_defaults(input);
  var div_1 = sibling(input, 4);
  reset(div);
  var text = sibling(div);
  reset(label_1);
  bind_this(label_1, ($$value) => labelElement($$value), () => labelElement());
  template_effect(() => {
    set_attribute(input, "name", name());
    set_value(input, hex());
    set_style(div_1, "background", hex());
    set_text(text, ` ${label() ?? ""}`);
  });
  event("click", input, preventDefault(noop));
  event("mousedown", input, preventDefault(noop));
  event("click", label_1, preventDefault(noop));
  event("mousedown", label_1, preventDefault(noop));
  append($$anchor, label_1);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  Input = hmr(Input, () => Input[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-vS-df1Z_4QKT");
    module.default[HMR].source = Input[HMR].source;
    set(Input[HMR].source, module.default[HMR].original);
  });
}
var Input_default = Input;
mark_module_end(Input);

// node_modules/svelte-awesome-color-picker/dist/components/variant/default/Wrapper.svelte
mark_module_start();
Wrapper[FILENAME] = "node_modules/svelte-awesome-color-picker/dist/components/variant/default/Wrapper.svelte";
var root6 = add_locations(template(`<div class="wrapper s-_kxRDwYWTbvm" aria-label="color picker"><!></div>`), Wrapper[FILENAME], [[9, 0]]);
var $$css6 = {
  hash: "s-_kxRDwYWTbvm",
  code: "\r\n	div.s-_kxRDwYWTbvm {\r\n		padding: 8px;\r\n		background-color: var(--cp-bg-color, white);\r\n		margin: 0 10px 10px;\r\n		border: 1px solid var(--cp-border-color, black);\r\n		border-radius: 12px;\r\n		display: none;\r\n		width: max-content;\r\n	}\r\n	.is-open.s-_kxRDwYWTbvm {\r\n		display: inline-block;\r\n	}\r\n	[role='dialog'].s-_kxRDwYWTbvm {\r\n		position: absolute;\r\n		top: calc(var(--input-size, 25px) + 12px);\r\n		left: 0;\r\n		z-index: var(--picker-z-index, 2);\r\n	}\r\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV3JhcHBlci5zdmVsdGUiLCJtYXBwaW5ncyI6IkFBZ0NPO0FBQ1AsQ0FBQyxrQkFBRyxDQUFDO0FBQ0wsRUFBRSxZQUFZO0FBQ2QsRUFBRSwyQ0FBMkM7QUFDN0MsRUFBRSxtQkFBbUI7QUFDckIsRUFBRSwrQ0FBK0M7QUFDakQsRUFBRSxtQkFBbUI7QUFDckIsRUFBRSxhQUFhO0FBQ2YsRUFBRSxrQkFBa0I7QUFDcEIsRUFBRTtBQUNGLENBQUMsdUJBQVEsQ0FBQztBQUNWLEVBQUUscUJBQXFCO0FBQ3ZCLEVBQUU7QUFDRixDQUFDLDhCQUFlLENBQUM7QUFDakIsRUFBRSxrQkFBa0I7QUFDcEIsRUFBRSx5Q0FBeUM7QUFDM0MsRUFBRSxPQUFPO0FBQ1QsRUFBRSxpQ0FBaUM7QUFDbkMsRUFBRSIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiV3JhcHBlci5zdmVsdGUiXX0= */"
};
function Wrapper($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, Wrapper);
  append_styles($$anchor, $$css6);
  let wrapper = prop($$props, "wrapper", 12);
  let isOpen = prop($$props, "isOpen", 8);
  let isDialog = prop($$props, "isDialog", 8);
  var div = root6();
  var node = child(div);
  slot(node, $$props, "default", {}, null);
  reset(div);
  bind_this(div, ($$value) => wrapper($$value), () => wrapper());
  template_effect(() => {
    set_attribute(div, "role", isDialog() ? "dialog" : void 0);
    toggle_class(div, "is-open", isOpen());
  });
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  Wrapper = hmr(Wrapper, () => Wrapper[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-_kxRDwYWTbvm");
    module.default[HMR].source = Wrapper[HMR].source;
    set(Wrapper[HMR].source, module.default[HMR].original);
  });
}
var Wrapper_default = Wrapper;
mark_module_end(Wrapper);

// node_modules/svelte-awesome-color-picker/dist/utils/texts.js
var defaultTexts = {
  label: {
    h: "hue channel",
    s: "saturation channel",
    v: "brightness channel",
    r: "red channel",
    g: "green channel",
    b: "blue channel",
    a: "alpha channel",
    hex: "hex color",
    withoutColor: "without color"
  },
  color: {
    rgb: "rgb",
    hsv: "hsv",
    hex: "hex"
  },
  changeTo: "change to "
};
var defaultA11yTexts = {
  contrast: "contrast :",
  nbGradeSummary: (count) => count ? `⚠️ ${count} contrast grade${count && "s"} fail` : "Contrast grade information",
  guidelines: `Learn more at <a href="https://webaim.org/articles/contrast/" target="_blank">WebAIM contrast guide</a>`
};

// node_modules/svelte-awesome-color-picker/dist/utils/trapFocus.js
var FOCUSABLE_ELEMENTS = "a[href], area[href], input:not([type='hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]";
function trapFocusListener(trapFocusElement) {
  return function(event2) {
    if (event2.target === window) {
      return;
    }
    const eventTarget = event2.target;
    if (!trapFocusElement.contains(eventTarget)) {
      return;
    }
    const focusable = trapFocusElement.querySelectorAll(FOCUSABLE_ELEMENTS);
    const first = focusable[0];
    const last = focusable[focusable.length - 1];
    function isNext(event3) {
      return event3.code === "Tab" && !event3.shiftKey;
    }
    function isPrevious(event3) {
      return event3.code === "Tab" && event3.shiftKey;
    }
    if (isNext(event2) && event2.target === last) {
      event2.preventDefault();
      first.focus();
    } else if (isPrevious(event2) && event2.target === first) {
      event2.preventDefault();
      last.focus();
    }
  };
}
var trapFocus = (node) => {
  const first = node.querySelector(FOCUSABLE_ELEMENTS);
  if (first)
    first.focus();
  const listener = trapFocusListener(node);
  document.addEventListener("keydown", listener);
  return {
    destroy() {
      document.removeEventListener("keydown", listener);
    }
  };
};

// node_modules/svelte-awesome-color-picker/dist/components/variant/default/NullabilityCheckbox.svelte
mark_module_start();
NullabilityCheckbox[FILENAME] = "node_modules/svelte-awesome-color-picker/dist/components/variant/default/NullabilityCheckbox.svelte";
var root7 = add_locations(template(`<label class="nullability-checkbox s-Iw38PR-yJcNh"><div class="s-Iw38PR-yJcNh"><input type="checkbox" class="s-Iw38PR-yJcNh"> <span class="s-Iw38PR-yJcNh"></span></div> </label>`), NullabilityCheckbox[FILENAME], [
  [
    7,
    0,
    [[8, 1, [[9, 2], [10, 2]]]]
  ]
]);
var $$css7 = {
  hash: "s-Iw38PR-yJcNh",
  code: "\r\n	label.s-Iw38PR-yJcNh {\r\n		display: flex;\r\n		justify-content: center;\r\n		margin-bottom: 4px;\r\n		grid-area: nullable;\r\n		user-select: none;\r\n	}\r\n	input.s-Iw38PR-yJcNh {\r\n		margin: 0;\r\n	}\r\n	input.s-Iw38PR-yJcNh:focus-visible {\r\n		outline: none;\r\n	}\r\n	input.s-Iw38PR-yJcNh:focus-visible + span:where(.s-Iw38PR-yJcNh) {\r\n		width: 14px;\r\n		height: 14px;\r\n		border-radius: 2px;\r\n		outline: 2px solid var(--focus-color, red);\r\n		outline-offset: 2px;\r\n	}\r\n\r\n	div.s-Iw38PR-yJcNh {\r\n		width: 32px;\r\n		aspect-ratio: 2;\r\n		position: relative;\r\n	}\r\n	div.s-Iw38PR-yJcNh :where(.s-Iw38PR-yJcNh) {\r\n		position: absolute;\r\n		top: 50%;\r\n		left: 50%;\r\n		transform: translate(-50%, -50%);\r\n	}\r\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTnVsbGFiaWxpdHlDaGVja2JveC5zdmVsdGUiLCJtYXBwaW5ncyI6IkFBY087QUFDUCxDQUFDLG9CQUFLLENBQUM7QUFDUCxFQUFFLGFBQWE7QUFDZixFQUFFLHVCQUF1QjtBQUN6QixFQUFFLGtCQUFrQjtBQUNwQixFQUFFLG1CQUFtQjtBQUNyQixFQUFFLGlCQUFpQjtBQUNuQixFQUFFO0FBQ0YsQ0FBQyxvQkFBSyxDQUFDO0FBQ1AsRUFBRSxTQUFTO0FBQ1gsRUFBRTtBQUNGLENBQUMsb0JBQUssY0FBYyxDQUFDO0FBQ3JCLEVBQUUsYUFBYTtBQUNmLEVBQUU7QUFDRixDQUFDLG9CQUFLLGNBQWMsQ0FBQyxDQUFDLENBQUMsMkJBQUksQ0FBQztBQUM1QixFQUFFLFdBQVc7QUFDYixFQUFFLFlBQVk7QUFDZCxFQUFFLGtCQUFrQjtBQUNwQixFQUFFLDBDQUEwQztBQUM1QyxFQUFFLG1CQUFtQjtBQUNyQixFQUFFO0FBQ0Y7QUFDQSxDQUFDLGtCQUFHLENBQUM7QUFDTCxFQUFFLFdBQVc7QUFDYixFQUFFLGVBQWU7QUFDakIsRUFBRSxrQkFBa0I7QUFDcEIsRUFBRTtBQUNGLENBQUMsa0JBQUcsQ0FBQyx1QkFBQyxDQUFDO0FBQ1AsRUFBRSxrQkFBa0I7QUFDcEIsRUFBRSxRQUFRO0FBQ1YsRUFBRSxTQUFTO0FBQ1gsRUFBRSxnQ0FBZ0M7QUFDbEMsRUFBRSIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiTnVsbGFiaWxpdHlDaGVja2JveC5zdmVsdGUiXX0= */"
};
function NullabilityCheckbox($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, NullabilityCheckbox);
  append_styles($$anchor, $$css7);
  let isUndefined = prop($$props, "isUndefined", 12);
  let texts = prop($$props, "texts", 8);
  init();
  var label = root7();
  var div = child(label);
  var input = child(div);
  remove_input_defaults(input);
  next(2);
  reset(div);
  var text = sibling(div);
  reset(label);
  template_effect(() => set_text(text, ` ${texts().label.withoutColor ?? ""}`));
  bind_checked(input, isUndefined);
  append($$anchor, label);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  NullabilityCheckbox = hmr(NullabilityCheckbox, () => NullabilityCheckbox[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-Iw38PR-yJcNh");
    module.default[HMR].source = NullabilityCheckbox[HMR].source;
    set(NullabilityCheckbox[HMR].source, module.default[HMR].original);
  });
}
var NullabilityCheckbox_default = NullabilityCheckbox;
mark_module_end(NullabilityCheckbox);

// node_modules/svelte-awesome-color-picker/dist/components/ColorPicker.svelte
mark_module_start();
ColorPicker[FILENAME] = "node_modules/svelte-awesome-color-picker/dist/components/ColorPicker.svelte";
var root_32 = add_locations(template(`<input type="hidden">`), ColorPicker[FILENAME], [[264, 2]]);
var root_62 = add_locations(template(`<div class="a s-4nPqRym9MN7J"><!></div>`), ColorPicker[FILENAME], [[292, 3]]);
var root_42 = add_locations(template(`<!> <!> <div class="h s-4nPqRym9MN7J"><!></div> <!> <!> <!>`, 1), ColorPicker[FILENAME], [[279, 2]]);
var root8 = add_locations(template(`<span><!> <!></span>`), ColorPicker[FILENAME], [[260, 0]]);
var $$css8 = {
  hash: "s-4nPqRym9MN7J",
  code: "\r\n	span.s-4nPqRym9MN7J {\r\n		position: relative;\r\n		color: var(--cp-text-color, var(--cp-border-color));\r\n\r\n		--alpha-grid-bg: linear-gradient(45deg, #eee 25%, #0000 25%, #0000 75%, #eee 75%) 0 0 / 10px 10px,\r\n			linear-gradient(45deg, #eee 25%, #0000 25%, #0000 75%, #eee 75%) 5px 5px / 10px 10px;\r\n	}\r\n\r\n	.h.s-4nPqRym9MN7J,\r\n	.a.s-4nPqRym9MN7J {\r\n		display: inline-flex;\r\n		justify-content: center;\r\n		--track-height: var(--slider-width, 10px);\r\n		--track-width: var(--picker-height, 200px);\r\n		--track-border: none;\r\n		--thumb-size: calc(var(--slider-width, 10px) - 3px);\r\n		--thumb-background: white;\r\n		--thumb-border: 1px solid black;\r\n		--margin-block: 0;\r\n\r\n		--gradient-direction: 0.5turn;\r\n	}\r\n	.horizontal.s-4nPqRym9MN7J .h:where(.s-4nPqRym9MN7J),\r\n	.horizontal.s-4nPqRym9MN7J .a:where(.s-4nPqRym9MN7J) {\r\n		--track-width: calc(var(--picker-width, 200px) - 12px);\r\n\r\n		--gradient-direction: 0.25turn;\r\n		margin: 4px 6px;\r\n	}\r\n	.horizontal.s-4nPqRym9MN7J .h:where(.s-4nPqRym9MN7J) {\r\n		margin-top: 8px;\r\n	}\r\n	.vertical.s-4nPqRym9MN7J .h:where(.s-4nPqRym9MN7J),\r\n	.vertical.s-4nPqRym9MN7J .a:where(.s-4nPqRym9MN7J) {\r\n		margin-left: 3px;\r\n	}\r\n\r\n	.h.s-4nPqRym9MN7J {\r\n		grid-area: hue;\r\n\r\n		--gradient-hue: #ff1500fb, #ffff00 17.2%, #ffff00 18.2%, #00ff00 33.3%, #00ffff 49.5%, #00ffff 51.5%, #0000ff 67.7%,\r\n			#ff00ff 83.3%, #ff0000;\r\n		--track-background: linear-gradient(var(--gradient-direction), var(--gradient-hue));\r\n	}\r\n\r\n	.a.s-4nPqRym9MN7J {\r\n		grid-area: alpha;\r\n		margin-top: 2px;\r\n\r\n		--track-background: linear-gradient(var(--gradient-direction), rgba(0, 0, 0, 0), var(--alphaless-color)),\r\n			var(--alpha-grid-bg);\r\n	}\r\n\r\n	span.s-4nPqRym9MN7J .sr-only {\r\n		position: absolute;\r\n		width: 1px;\r\n		height: 1px;\r\n		padding: 0;\r\n		margin: -1px;\r\n		overflow: hidden;\r\n		clip: rect(0, 0, 0, 0);\r\n		white-space: nowrap;\r\n		border-width: 0;\r\n	}\r\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29sb3JQaWNrZXIuc3ZlbHRlIiwibWFwcGluZ3MiOiJBQXFYTztBQUNQLENBQUMsbUJBQUksQ0FBQztBQUNOLEVBQUUsa0JBQWtCO0FBQ3BCLEVBQUUsbURBQW1EO0FBQ3JEO0FBQ0EsRUFBRTtBQUNGLHVGQUF1RjtBQUN2RixFQUFFO0FBQ0Y7QUFDQSxDQUFDLGlCQUFFO0FBQ0gsQ0FBQyxpQkFBRSxDQUFDO0FBQ0osRUFBRSxvQkFBb0I7QUFDdEIsRUFBRSx1QkFBdUI7QUFDekIsRUFBRSx5Q0FBeUM7QUFDM0MsRUFBRSwwQ0FBMEM7QUFDNUMsRUFBRSxvQkFBb0I7QUFDdEIsRUFBRSxtREFBbUQ7QUFDckQsRUFBRSx5QkFBeUI7QUFDM0IsRUFBRSwrQkFBK0I7QUFDakMsRUFBRSxpQkFBaUI7QUFDbkI7QUFDQSxFQUFFLDZCQUE2QjtBQUMvQixFQUFFO0FBQ0YsQ0FBQywwQkFBVyxDQUFDLHlCQUFFO0FBQ2YsQ0FBQywwQkFBVyxDQUFDLHlCQUFFLENBQUM7QUFDaEIsRUFBRSxzREFBc0Q7QUFDeEQ7QUFDQSxFQUFFLDhCQUE4QjtBQUNoQyxFQUFFLGVBQWU7QUFDakIsRUFBRTtBQUNGLENBQUMsMEJBQVcsQ0FBQyx5QkFBRSxDQUFDO0FBQ2hCLEVBQUUsZUFBZTtBQUNqQixFQUFFO0FBQ0YsQ0FBQyx3QkFBUyxDQUFDLHlCQUFFO0FBQ2IsQ0FBQyx3QkFBUyxDQUFDLHlCQUFFLENBQUM7QUFDZCxFQUFFLGdCQUFnQjtBQUNsQixFQUFFO0FBQ0Y7QUFDQSxDQUFDLGlCQUFFLENBQUM7QUFDSixFQUFFLGNBQWM7QUFDaEI7QUFDQSxFQUFFO0FBQ0YseUJBQXlCO0FBQ3pCLEVBQUUsbUZBQW1GO0FBQ3JGLEVBQUU7QUFDRjtBQUNBLENBQUMsaUJBQUUsQ0FBQztBQUNKLEVBQUUsZ0JBQWdCO0FBQ2xCLEVBQUUsZUFBZTtBQUNqQjtBQUNBLEVBQUU7QUFDRix1QkFBdUI7QUFDdkIsRUFBRTtBQUNGO0FBQ0EsQ0FBQyxtQkFBSSxDQUFTLFFBQVMsQ0FBQztBQUN4QixFQUFFLGtCQUFrQjtBQUNwQixFQUFFLFVBQVU7QUFDWixFQUFFLFdBQVc7QUFDYixFQUFFLFVBQVU7QUFDWixFQUFFLFlBQVk7QUFDZCxFQUFFLGdCQUFnQjtBQUNsQixFQUFFLHNCQUFzQjtBQUN4QixFQUFFLG1CQUFtQjtBQUNyQixFQUFFLGVBQWU7QUFDakIsRUFBRSIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiQ29sb3JQaWNrZXIuc3ZlbHRlIl19 */"
};
function ColorPicker($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, ColorPicker);
  append_styles($$anchor, $$css8);
  const dispatch = createEventDispatcher();
  let components = prop($$props, "components", 24, () => ({}));
  let label = prop($$props, "label", 8, "Choose a color");
  let name = prop($$props, "name", 8, void 0);
  let nullable = prop($$props, "nullable", 8, false);
  let rgb = prop($$props, "rgb", 28, () => nullable() ? void 0 : { r: 255, g: 0, b: 0, a: 1 });
  let hsv = prop($$props, "hsv", 28, () => nullable() ? void 0 : { h: 0, s: 100, v: 100, a: 1 });
  let hex = prop($$props, "hex", 28, () => nullable() ? void 0 : "#ff0000");
  let color = prop($$props, "color", 12, void 0);
  let isDark = prop($$props, "isDark", 12, false);
  let isAlpha = prop($$props, "isAlpha", 8, true);
  let isDialog = prop($$props, "isDialog", 8, true);
  let isOpen = prop($$props, "isOpen", 28, () => !isDialog());
  let position = prop($$props, "position", 8, "fixed");
  let isTextInput = prop($$props, "isTextInput", 8, true);
  let textInputModes = prop($$props, "textInputModes", 24, () => ["hex", "rgb", "hsv"]);
  let sliderDirection = prop($$props, "sliderDirection", 8, "vertical");
  let disableCloseClickOutside = prop($$props, "disableCloseClickOutside", 8, false);
  let a11yColors = prop($$props, "a11yColors", 24, () => [{ bgHex: "#ffffff" }]);
  let a11yLevel = prop($$props, "a11yLevel", 8, "AA");
  let texts = prop($$props, "texts", 8, void 0);
  let a11yTexts = prop($$props, "a11yTexts", 8, void 0);
  let _rgb = mutable_state({ r: 255, g: 0, b: 0, a: 1 });
  let _hsv = mutable_state({ h: 0, s: 100, v: 100, a: 1 });
  let _hex = mutable_state("#ff0000");
  let isUndefined = mutable_state(false);
  let _isUndefined = get(isUndefined);
  let spanElement = mutable_state();
  let labelElement = mutable_state();
  let wrapper = mutable_state();
  let trap = void 0;
  let innerWidth = mutable_state();
  let innerHeight = mutable_state();
  const wrapperPadding = 12;
  const default_components = {
    pickerIndicator: PickerIndicator_default,
    textInput: TextInput_default,
    input: Input_default,
    nullabilityCheckbox: NullabilityCheckbox_default,
    wrapper: Wrapper_default
  };
  function getComponents() {
    return { ...default_components, ...components() };
  }
  function getTexts() {
    var _a, _b, _c;
    return {
      label: { ...defaultTexts.label, ...(_a = texts()) == null ? void 0 : _a.label },
      color: { ...defaultTexts.color, ...(_b = texts()) == null ? void 0 : _b.color },
      changeTo: ((_c = texts()) == null ? void 0 : _c.changeTo) ?? defaultTexts.changeTo
    };
  }
  function mousedown({ target }) {
    if (isDialog()) {
      if (get(labelElement).contains(target) || get(labelElement).isSameNode(target)) {
        isOpen(!isOpen());
      } else if (isOpen() && !get(wrapper).contains(target) && !disableCloseClickOutside()) {
        isOpen(false);
      }
    }
  }
  function keyup({ key, target }) {
    var _a;
    if (!isDialog()) {
      return;
    } else if (strict_equals(key, "Enter") && get(labelElement).contains(target)) {
      isOpen(!isOpen());
      setTimeout(() => {
        trap = trapFocus(get(wrapper));
      });
    } else if (strict_equals(key, "Escape") && isOpen()) {
      isOpen(false);
      if (get(spanElement).contains(target)) {
        (_a = get(labelElement)) == null ? void 0 : _a.focus();
        trap == null ? void 0 : trap.destroy();
      }
    }
  }
  function updateColor() {
    var _a, _b;
    if (get(isUndefined) && !_isUndefined) {
      _isUndefined = true;
      hsv(rgb(hex(void 0)));
      dispatch("input", {
        color: color(),
        hsv: hsv(),
        rgb: rgb(),
        hex: hex()
      });
      return;
    } else if (_isUndefined && !get(isUndefined)) {
      _isUndefined = false;
      hsv(get(_hsv));
      rgb(get(_rgb));
      hex(get(_hex));
      dispatch("input", {
        color: color(),
        hsv: hsv(),
        rgb: rgb(),
        hex: hex()
      });
      return;
    }
    if (!hsv() && !rgb() && !hex()) {
      set(isUndefined, true);
      _isUndefined = true;
      dispatch("input", {
        color: void 0,
        hsv: hsv(),
        rgb: rgb(),
        hex: hex()
      });
      return;
    }
    if (hsv() && rgb() && strict_equals(hsv().h, get(_hsv).h) && strict_equals(hsv().s, get(_hsv).s) && strict_equals(hsv().v, get(_hsv).v) && strict_equals(hsv().a, get(_hsv).a) && strict_equals(rgb().r, get(_rgb).r) && strict_equals(rgb().g, get(_rgb).g) && strict_equals(rgb().b, get(_rgb).b) && strict_equals(rgb().a, get(_rgb).a) && strict_equals(hex(), get(_hex))) {
      return;
    }
    set(isUndefined, false);
    if (hsv() && strict_equals(hsv().a, void 0)) hsv(hsv().a = 1, true);
    if (strict_equals(get(_hsv).a, void 0)) mutate(_hsv, get(_hsv).a = 1);
    if (rgb() && strict_equals(rgb().a, void 0)) rgb(rgb().a = 1, true);
    if (strict_equals(get(_rgb).a, void 0)) mutate(_rgb, get(_rgb).a = 1);
    if (strict_equals((_a = hex()) == null ? void 0 : _a.substring(7), "ff")) hex(hex().substring(0, 7));
    if (strict_equals((_b = hex()) == null ? void 0 : _b.substring(7), "ff")) hex(hex().substring(0, 7));
    if (hsv() && (strict_equals(hsv().h, get(_hsv).h, false) || strict_equals(hsv().s, get(_hsv).s, false) || strict_equals(hsv().v, get(_hsv).v, false) || strict_equals(hsv().a, get(_hsv).a, false) || !rgb() && !hex())) {
      color(w(hsv()));
      rgb(color().toRgb());
      hex(color().toHex());
    } else if (rgb() && (strict_equals(rgb().r, get(_rgb).r, false) || strict_equals(rgb().g, get(_rgb).g, false) || strict_equals(rgb().b, get(_rgb).b, false) || strict_equals(rgb().a, get(_rgb).a, false) || !hsv() && !hex())) {
      color(w(rgb()));
      hex(color().toHex());
      hsv(color().toHsv());
    } else if (hex() && (strict_equals(hex(), get(_hex), false) || !hsv() && !rgb())) {
      color(w(hex()));
      rgb(color().toRgb());
      hsv(color().toHsv());
    }
    if (color()) {
      isDark(color().isDark());
    }
    if (!hex()) return;
    set(_hsv, Object.assign({}, hsv()));
    set(_rgb, Object.assign({}, rgb()));
    set(_hex, hex());
    _isUndefined = get(isUndefined);
    dispatch("input", {
      color: color(),
      hsv: hsv(),
      rgb: rgb(),
      hex: hex()
    });
  }
  function updateLetter(letter) {
    return (e) => {
      if (!hsv()) hsv({ ...get(_hsv) });
      hsv(hsv()[letter] = e.detail, true);
    };
  }
  function updateLetters(letters) {
    return (e) => {
      if (!hsv()) hsv({ ...get(_hsv) });
      letters.forEach((letter) => {
        if (hsv()) hsv(hsv()[letter] = e.detail[letter], true);
      });
    };
  }
  async function wrapperBoundaryCheck() {
    await tick();
    if (strict_equals(position(), "fixed", false) && isOpen() && isDialog() && get(labelElement) && get(wrapper)) {
      const rect = get(wrapper).getBoundingClientRect();
      const labelRect = get(labelElement).getBoundingClientRect();
      if (strict_equals(position(), "responsive") || strict_equals(position(), "responsive-y")) {
        if (labelRect.top + rect.height + wrapperPadding > get(innerHeight)) {
          mutate(wrapper, get(wrapper).style.top = `-${rect.height + wrapperPadding}px`);
        } else {
          mutate(wrapper, get(wrapper).style.top = `${labelRect.height + wrapperPadding}px`);
        }
      }
      if (strict_equals(position(), "responsive") || strict_equals(position(), "responsive-x")) {
        if (labelRect.left + rect.width + wrapperPadding > get(innerWidth)) {
          mutate(wrapper, get(wrapper).style.left = `-${rect.width - labelRect.width + wrapperPadding}px`);
        } else {
          mutate(wrapper, get(wrapper).style.left = `${wrapperPadding}px`);
        }
      }
    }
  }
  legacy_pre_effect(
    () => (deep_read_state(hsv()), deep_read_state(rgb()), deep_read_state(hex())),
    () => {
      if (hsv() || rgb() || hex()) {
        updateColor();
      }
    }
  );
  legacy_pre_effect(() => get(isUndefined), () => {
    get(isUndefined), updateColor();
  });
  legacy_pre_effect(
    () => (get(innerWidth), get(innerHeight), deep_read_state(isOpen())),
    () => {
      get(innerWidth), get(innerHeight), isOpen(), wrapperBoundaryCheck();
    }
  );
  legacy_pre_effect_reset();
  init();
  var span = root8();
  event("mousedown", $window, mousedown);
  event("keyup", $window, keyup);
  event("scroll", $window, wrapperBoundaryCheck);
  var node = child(span);
  {
    var consequent = ($$anchor2) => {
      var fragment = comment();
      var node_1 = first_child(fragment);
      component(node_1, () => getComponents().input, ($$anchor3, $$component) => {
        add_owner_effect(() => get(labelElement), $$component);
        $$component($$anchor3, {
          isOpen: true,
          get hex() {
            return hex();
          },
          get label() {
            return label();
          },
          get name() {
            return name();
          },
          get labelElement() {
            return get(labelElement);
          },
          set labelElement($$value) {
            set(labelElement, $$value);
          },
          $$legacy: true
        });
      });
      append($$anchor2, fragment);
    };
    var alternate = ($$anchor2) => {
      var fragment_1 = comment();
      var node_2 = first_child(fragment_1);
      {
        var consequent_1 = ($$anchor3) => {
          var input = root_32();
          remove_input_defaults(input);
          template_effect(() => {
            set_value(input, hex());
            set_attribute(input, "name", name());
          });
          append($$anchor3, input);
        };
        if_block(
          node_2,
          ($$render) => {
            if (name()) $$render(consequent_1);
          },
          true
        );
      }
      append($$anchor2, fragment_1);
    };
    if_block(node, ($$render) => {
      if (isDialog()) $$render(consequent);
      else $$render(alternate, false);
    });
  }
  var node_3 = sibling(node, 2);
  component(node_3, () => getComponents().wrapper, ($$anchor2, $$component) => {
    add_owner_effect(() => get(wrapper), $$component);
    $$component($$anchor2, {
      get isOpen() {
        return isOpen();
      },
      get isDialog() {
        return isDialog();
      },
      get wrapper() {
        return get(wrapper);
      },
      set wrapper($$value) {
        set(wrapper, $$value);
      },
      children: wrap_snippet(ColorPicker, ($$anchor3, $$slotProps) => {
        var fragment_2 = root_42();
        var node_4 = first_child(fragment_2);
        {
          var consequent_2 = ($$anchor4) => {
            var fragment_3 = comment();
            var node_5 = first_child(fragment_3);
            var texts_1 = derived_safe_equal(getTexts);
            component(node_5, () => getComponents().nullabilityCheckbox, ($$anchor5, $$component2) => {
              add_owner_effect(() => get(isUndefined), $$component2);
              $$component2($$anchor5, {
                get texts() {
                  return get(texts_1);
                },
                get isUndefined() {
                  return get(isUndefined);
                },
                set isUndefined($$value) {
                  set(isUndefined, $$value);
                },
                $$legacy: true
              });
            });
            append($$anchor4, fragment_3);
          };
          if_block(node_4, ($$render) => {
            if (nullable()) $$render(consequent_2);
          });
        }
        var node_6 = sibling(node_4, 2);
        var components_1 = derived_safe_equal(getComponents);
        var h = derived_safe_equal(() => {
          var _a;
          return ((_a = hsv()) == null ? void 0 : _a.h) ?? get(_hsv).h;
        });
        var s = derived_safe_equal(() => {
          var _a;
          return ((_a = hsv()) == null ? void 0 : _a.s) ?? get(_hsv).s;
        });
        var v = derived_safe_equal(() => {
          var _a;
          return ((_a = hsv()) == null ? void 0 : _a.v) ?? get(_hsv).v;
        });
        var event_handler = derived(() => updateLetters(["s", "v"]));
        var texts_2 = derived_safe_equal(getTexts);
        Picker_default(node_6, {
          get components() {
            return get(components_1);
          },
          get h() {
            return get(h);
          },
          get s() {
            return get(s);
          },
          get v() {
            return get(v);
          },
          get isDark() {
            return isDark();
          },
          get texts() {
            return get(texts_2);
          },
          $$events: {
            input(...$$args) {
              apply(() => get(event_handler), this, $$args, ColorPicker, [275, 13], true);
            }
          }
        });
        var div = sibling(node_6, 2);
        var node_7 = child(div);
        var value = derived_safe_equal(() => {
          var _a;
          return ((_a = hsv()) == null ? void 0 : _a.h) ?? get(_hsv).h;
        });
        var event_handler_1 = derived(() => updateLetter("h"));
        var reverse = derived_safe_equal(() => strict_equals(sliderDirection(), "vertical"));
        Slider_default(node_7, {
          min: 0,
          max: 360,
          step: 1,
          get value() {
            return get(value);
          },
          get direction() {
            return sliderDirection();
          },
          get reverse() {
            return get(reverse);
          },
          get ariaLabel() {
            return getTexts().label.h;
          },
          $$events: {
            input(...$$args) {
              apply(() => get(event_handler_1), this, $$args, ColorPicker, [285, 14], true);
            }
          }
        });
        reset(div);
        var node_8 = sibling(div, 2);
        {
          var consequent_3 = ($$anchor4) => {
            var div_1 = root_62();
            const style_directive = derived_safe_equal(() => (hex() ? hex() : get(_hex)).substring(0, 7));
            template_effect(() => set_style(div_1, "--alphaless-color", get(style_directive)));
            var node_9 = child(div_1);
            var value_1 = derived_safe_equal(() => {
              var _a;
              return ((_a = hsv()) == null ? void 0 : _a.a) ?? get(_hsv).a;
            });
            var event_handler_2 = derived(() => updateLetter("a"));
            var reverse_1 = derived_safe_equal(() => strict_equals(sliderDirection(), "vertical"));
            Slider_default(node_9, {
              min: 0,
              max: 1,
              step: 0.01,
              get value() {
                return get(value_1);
              },
              get direction() {
                return sliderDirection();
              },
              get reverse() {
                return get(reverse_1);
              },
              get ariaLabel() {
                return getTexts().label.a;
              },
              $$events: {
                input(...$$args) {
                  apply(() => get(event_handler_2), this, $$args, ColorPicker, [298, 15], true);
                }
              }
            });
            reset(div_1);
            append($$anchor4, div_1);
          };
          if_block(node_8, ($$render) => {
            if (isAlpha()) $$render(consequent_3);
          });
        }
        var node_10 = sibling(node_8, 2);
        {
          var consequent_4 = ($$anchor4) => {
            var fragment_4 = comment();
            var node_11 = first_child(fragment_4);
            var hex_1 = derived_safe_equal(() => hex() ?? get(_hex));
            var rgb_1 = derived_safe_equal(() => rgb() ?? get(_rgb));
            var hsv_1 = derived_safe_equal(() => hsv() ?? get(_hsv));
            var texts_3 = derived_safe_equal(getTexts);
            component(node_11, () => getComponents().textInput, ($$anchor5, $$component2) => {
              $$component2($$anchor5, {
                get hex() {
                  return get(hex_1);
                },
                get rgb() {
                  return get(rgb_1);
                },
                get hsv() {
                  return get(hsv_1);
                },
                get isAlpha() {
                  return isAlpha();
                },
                get textInputModes() {
                  return textInputModes();
                },
                get texts() {
                  return get(texts_3);
                },
                $$events: {
                  input: ({ detail }) => {
                    if (detail.hsv) {
                      hsv(detail.hsv);
                    } else if (detail.rgb) {
                      rgb(detail.rgb);
                    } else if (detail.hex) {
                      hex(detail.hex);
                    }
                  }
                }
              });
            });
            append($$anchor4, fragment_4);
          };
          if_block(node_10, ($$render) => {
            if (isTextInput()) $$render(consequent_4);
          });
        }
        var node_12 = sibling(node_10, 2);
        {
          var consequent_5 = ($$anchor4) => {
            var fragment_5 = comment();
            var node_13 = first_child(fragment_5);
            var components_2 = derived_safe_equal(getComponents);
            var hex_2 = derived_safe_equal(() => hex() || "#00000000");
            component(node_13, () => getComponents().a11yNotice, ($$anchor5, $$component2) => {
              $$component2($$anchor5, {
                get components() {
                  return get(components_2);
                },
                get a11yColors() {
                  return a11yColors();
                },
                get hex() {
                  return get(hex_2);
                },
                get a11yTexts() {
                  return a11yTexts();
                },
                get a11yLevel() {
                  return a11yLevel();
                }
              });
            });
            append($$anchor4, fragment_5);
          };
          if_block(node_12, ($$render) => {
            if (getComponents().a11yNotice) $$render(consequent_5);
          });
        }
        append($$anchor3, fragment_2);
      }),
      $$slots: { default: true },
      $$legacy: true
    });
  });
  reset(span);
  bind_this(span, ($$value) => set(spanElement, $$value), () => get(spanElement));
  template_effect(() => set_class(span, `color-picker ${sliderDirection() ?? ""} s-4nPqRym9MN7J`));
  bind_window_size("innerWidth", ($$value) => set(innerWidth, $$value));
  bind_window_size("innerHeight", ($$value) => set(innerHeight, $$value));
  append($$anchor, span);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  ColorPicker = hmr(ColorPicker, () => ColorPicker[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-4nPqRym9MN7J");
    module.default[HMR].source = ColorPicker[HMR].source;
    set(ColorPicker[HMR].source, module.default[HMR].original);
  });
}
var ColorPicker_default = ColorPicker;
mark_module_end(ColorPicker);

// node_modules/svelte-awesome-color-picker/dist/components/variant/chrome-picker/Wrapper.svelte
mark_module_start();
Wrapper2[FILENAME] = "node_modules/svelte-awesome-color-picker/dist/components/variant/chrome-picker/Wrapper.svelte";
var root9 = add_locations(template(`<div class="wrapper s-NqhoBHzeKwKz" aria-label="color picker"><!></div>`), Wrapper2[FILENAME], [[9, 0]]);
var $$css9 = {
  hash: "s-NqhoBHzeKwKz",
  code: "\r\n	div.s-NqhoBHzeKwKz {\r\n		background-color: var(--cp-bg-color, white);\r\n		margin: 0 10px 15px;\r\n		border: 1px solid var(--cp-border-color, black);\r\n		border-radius: 8px;\r\n		display: none;\r\n\r\n		--text-input-margin: 5px 5px 6px;\r\n		--picker-radius: 8px 8px 0 0;\r\n		--picker-width: 260px;\r\n	}\r\n	.is-open.s-NqhoBHzeKwKz {\r\n		display: flex;\r\n		flex-direction: column;\r\n	}\r\n	[role='dialog'].s-NqhoBHzeKwKz {\r\n		position: absolute;\r\n		top: calc(var(--input-size, 25px) + 12px);\r\n		left: 0;\r\n		z-index: var(--picker-z-index, 2);\r\n	}\r\n	div.s-NqhoBHzeKwKz:not([role='dialog']) {\r\n		display: inline-flex;\r\n		flex-direction: column;\r\n	}\r\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV3JhcHBlci5zdmVsdGUiLCJtYXBwaW5ncyI6IkFBb0NPO0FBQ1AsQ0FBQyxrQkFBRyxDQUFDO0FBQ0wsRUFBRSwyQ0FBMkM7QUFDN0MsRUFBRSxtQkFBbUI7QUFDckIsRUFBRSwrQ0FBK0M7QUFDakQsRUFBRSxrQkFBa0I7QUFDcEIsRUFBRSxhQUFhO0FBQ2Y7QUFDQSxFQUFFLGdDQUFnQztBQUNsQyxFQUFFLDRCQUE0QjtBQUM5QixFQUFFLHFCQUFxQjtBQUN2QixFQUFFO0FBQ0YsQ0FBQyx1QkFBUSxDQUFDO0FBQ1YsRUFBRSxhQUFhO0FBQ2YsRUFBRSxzQkFBc0I7QUFDeEIsRUFBRTtBQUNGLENBQUMsOEJBQWUsQ0FBQztBQUNqQixFQUFFLGtCQUFrQjtBQUNwQixFQUFFLHlDQUF5QztBQUMzQyxFQUFFLE9BQU87QUFDVCxFQUFFLGlDQUFpQztBQUNuQyxFQUFFO0FBQ0YsQ0FBQyxrQkFBRyxLQUFLLGVBQWUsQ0FBQyxDQUFDO0FBQzFCLEVBQUUsb0JBQW9CO0FBQ3RCLEVBQUUsc0JBQXNCO0FBQ3hCLEVBQUUiLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIldyYXBwZXIuc3ZlbHRlIl19 */"
};
function Wrapper2($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, Wrapper2);
  append_styles($$anchor, $$css9);
  let wrapper = prop($$props, "wrapper", 12);
  let isOpen = prop($$props, "isOpen", 8);
  let isDialog = prop($$props, "isDialog", 8);
  var div = root9();
  var node = child(div);
  slot(node, $$props, "default", {}, null);
  reset(div);
  bind_this(div, ($$value) => wrapper($$value), () => wrapper());
  template_effect(() => {
    set_attribute(div, "role", isDialog() ? "dialog" : void 0);
    toggle_class(div, "is-open", isOpen());
  });
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  Wrapper2 = hmr(Wrapper2, () => Wrapper2[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-NqhoBHzeKwKz");
    module.default[HMR].source = Wrapper2[HMR].source;
    set(Wrapper2[HMR].source, module.default[HMR].original);
  });
}
var Wrapper_default2 = Wrapper2;
mark_module_end(Wrapper2);

// node_modules/svelte-awesome-color-picker/dist/components/variant/accessibility/A11yHorizontalWrapper.svelte
mark_module_start();
A11yHorizontalWrapper[FILENAME] = "node_modules/svelte-awesome-color-picker/dist/components/variant/accessibility/A11yHorizontalWrapper.svelte";
var root10 = add_locations(template(`<div class="wrapper s-du5PXd-nPekQ" aria-label="color picker"><!></div>`), A11yHorizontalWrapper[FILENAME], [[9, 0]]);
var $$css10 = {
  hash: "s-du5PXd-nPekQ",
  code: "\r\n	div.s-du5PXd-nPekQ {\r\n		padding: 6px;\r\n		background-color: var(--cp-bg-color, white);\r\n		margin: 0 10px 10px;\r\n		border: 1px solid var(--cp-border-color, black);\r\n		border-radius: 12px;\r\n		display: none;\r\n		width: max-content;\r\n	}\r\n	.is-open.s-du5PXd-nPekQ {\r\n		display: block;\r\n	}\r\n	@media (min-width: 768px) {\r\n		.is-open.s-du5PXd-nPekQ {\r\n			display: grid;\r\n			gap: 5px;\r\n			grid-template:\r\n				'nullable . . .'\r\n				'picker hue alpha a11y'\r\n				'input input input a11y';\r\n			grid-template-rows: auto var(--picker-height, 200px) auto;\r\n		}\r\n	}\r\n\r\n	div.s-du5PXd-nPekQ .picker {\r\n		grid-area: picker;\r\n	}\r\n\r\n	div.s-du5PXd-nPekQ .text-input {\r\n		grid-area: input;\r\n	}\r\n\r\n	div.s-du5PXd-nPekQ .a11y-notice {\r\n		grid-area: a11y;\r\n		margin: 0 4px 0 6px;\r\n	}\r\n\r\n	[role='dialog'].s-du5PXd-nPekQ {\r\n		position: absolute;\r\n		top: calc(var(--input-size, 25px) + 12px);\r\n		left: 0;\r\n		z-index: var(--picker-z-index, 2);\r\n	}\r\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQTExeUhvcml6b250YWxXcmFwcGVyLnN2ZWx0ZSIsIm1hcHBpbmdzIjoiQUFvQ087QUFDUCxDQUFDLGtCQUFHLENBQUM7QUFDTCxFQUFFLFlBQVk7QUFDZCxFQUFFLDJDQUEyQztBQUM3QyxFQUFFLG1CQUFtQjtBQUNyQixFQUFFLCtDQUErQztBQUNqRCxFQUFFLG1CQUFtQjtBQUNyQixFQUFFLGFBQWE7QUFDZixFQUFFLGtCQUFrQjtBQUNwQixFQUFFO0FBQ0YsQ0FBQyx1QkFBUSxDQUFDO0FBQ1YsRUFBRSxjQUFjO0FBQ2hCLEVBQUU7QUFDRixDQUFDLDBCQUEwQjtBQUMzQixFQUFFLHVCQUFRLENBQUM7QUFDWCxHQUFHLGFBQWE7QUFDaEIsR0FBRyxRQUFRO0FBQ1gsR0FBRztBQUNIO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIsR0FBRyx5REFBeUQ7QUFDNUQsR0FBRztBQUNILEVBQUU7QUFDRjtBQUNBLENBQUMsa0JBQUcsQ0FBUyxPQUFRLENBQUM7QUFDdEIsRUFBRSxpQkFBaUI7QUFDbkIsRUFBRTtBQUNGO0FBQ0EsQ0FBQyxrQkFBRyxDQUFTLFdBQVksQ0FBQztBQUMxQixFQUFFLGdCQUFnQjtBQUNsQixFQUFFO0FBQ0Y7QUFDQSxDQUFDLGtCQUFHLENBQVMsWUFBYSxDQUFDO0FBQzNCLEVBQUUsZUFBZTtBQUNqQixFQUFFLG1CQUFtQjtBQUNyQixFQUFFO0FBQ0Y7QUFDQSxDQUFDLDhCQUFlLENBQUM7QUFDakIsRUFBRSxrQkFBa0I7QUFDcEIsRUFBRSx5Q0FBeUM7QUFDM0MsRUFBRSxPQUFPO0FBQ1QsRUFBRSxpQ0FBaUM7QUFDbkMsRUFBRSIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiQTExeUhvcml6b250YWxXcmFwcGVyLnN2ZWx0ZSJdfQ== */"
};
function A11yHorizontalWrapper($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, A11yHorizontalWrapper);
  append_styles($$anchor, $$css10);
  let wrapper = prop($$props, "wrapper", 12);
  let isOpen = prop($$props, "isOpen", 8);
  let isDialog = prop($$props, "isDialog", 8);
  var div = root10();
  var node = child(div);
  slot(node, $$props, "default", {}, null);
  reset(div);
  bind_this(div, ($$value) => wrapper($$value), () => wrapper());
  template_effect(() => {
    set_attribute(div, "role", isDialog() ? "dialog" : void 0);
    toggle_class(div, "is-open", isOpen());
  });
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  A11yHorizontalWrapper = hmr(A11yHorizontalWrapper, () => A11yHorizontalWrapper[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-du5PXd-nPekQ");
    module.default[HMR].source = A11yHorizontalWrapper[HMR].source;
    set(A11yHorizontalWrapper[HMR].source, module.default[HMR].original);
  });
}
var A11yHorizontalWrapper_default = A11yHorizontalWrapper;
mark_module_end(A11yHorizontalWrapper);

// node_modules/svelte-awesome-color-picker/dist/components/variant/accessibility/grades.js
var grades = {
  normal: {
    AA: 4.5,
    AAA: 7
  },
  large: {
    AA: 3,
    AAA: 4.5
  }
};
function isGradeAchieved(contrast, size = "normal", grade) {
  return contrast >= grades[size][grade];
}
function getNumberOfGradeFailed({ contrast, size }, a11yLevel) {
  if (!contrast) {
    return 1;
  }
  const isAA = isGradeAchieved(contrast, size, "AA");
  if (a11yLevel === "AA") {
    return isAA ? 0 : 1;
  } else if (!isAA) {
    return 2;
  }
  const isAAA = isGradeAchieved(contrast, size, "AAA");
  return isAAA ? 0 : 1;
}

// node_modules/svelte-awesome-color-picker/dist/utils/colors.js
function mix(hexA, hexB = "#FFFFFF") {
  const rgbA = w(hexA).toRgb();
  const rgbB = w(hexB).toRgb();
  const { r: rA, g: gA, b: bA, a: alpha = 255 } = rgbA;
  const { r: rB, g: gB, b: bB } = rgbB;
  const r = average(rA, rB, alpha);
  const g = average(gA, gB, alpha);
  const b = average(bA, bB, alpha);
  return "#" + r + g + b;
}
function average(a, b, alpha) {
  return Math.round(b + (a - b) * alpha).toString(16).padStart(2, "0");
}
function getContrast(a11yColor, hex) {
  if (!hex)
    return;
  if (a11yColor.reverse) {
    const bgOverWhiteBg = mix(a11yColor.bgHex ?? "#FFFFFF");
    const bg = mix(hex, bgOverWhiteBg);
    const ft = mix(a11yColor.textHex, bg);
    if (!ft)
      return;
    const cft = w(ft);
    return {
      ...a11yColor,
      trueColors: {
        textColor: a11yColor.textHex,
        bgColor: bg
      },
      contrast: cft.contrast(bg)
    };
  } else {
    if (!a11yColor.bgHex)
      return;
    const bg = mix(a11yColor.bgHex);
    const ft = mix(hex, bg);
    if (!ft)
      return;
    const cft = w(ft);
    return {
      ...a11yColor,
      trueColors: {
        textColor: hex,
        bgColor: a11yColor.bgHex
      },
      contrast: cft.contrast(bg)
    };
  }
}

// node_modules/svelte-awesome-color-picker/dist/components/variant/accessibility/A11yNotice.svelte
mark_module_start();
A11yNotice[FILENAME] = "node_modules/svelte-awesome-color-picker/dist/components/variant/accessibility/A11yNotice.svelte";
var root_2 = add_locations(template(`<span class="guidelines s-0DiTYjzbUWvM"><!></span>`), A11yNotice[FILENAME], [[46, 2]]);
var root11 = add_locations(template(`<div class="a11y-notice s-0DiTYjzbUWvM"><span class="title s-0DiTYjzbUWvM"> </span> <!> <!></div>`), A11yNotice[FILENAME], [[30, 0, [[31, 1]]]]);
var $$css11 = {
  hash: "s-0DiTYjzbUWvM",
  code: "\r\n	.a11y-notice.s-0DiTYjzbUWvM {\r\n		display: grid;\r\n		grid-template-columns: auto 1fr;\r\n		grid-template-rows: auto repeat(var(--item-count), 1fr) auto;\r\n		justify-items: stretch;\r\n		align-items: center;\r\n		gap: 0 12px;\r\n		width: max-content;\r\n	}\r\n	.title.s-0DiTYjzbUWvM {\r\n		margin: 12px 0 0;\r\n		grid-column: 1 / 3;\r\n		background: none;\r\n		border: none;\r\n		padding: 0 8px;\r\n		line-height: 24px;\r\n	}\r\n\r\n	@media (min-width: 768px) {\r\n		.title.s-0DiTYjzbUWvM {\r\n			margin: 0;\r\n		}\r\n	}\r\n\r\n	.guidelines.s-0DiTYjzbUWvM {\r\n		grid-column: 1 / 3;\r\n		margin-top: 10px;\r\n		font-size: 12px;\r\n	}\r\n\r\n	.s-0DiTYjzbUWvM:focus-visible,\r\n	.guidelines.s-0DiTYjzbUWvM :focus-visible {\r\n		border-radius: 2px;\r\n		outline: 2px solid var(--focus-color, red);\r\n		outline-offset: 2px;\r\n	}\r\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQTExeU5vdGljZS5zdmVsdGUiLCJtYXBwaW5ncyI6IkFBdUVPO0FBQ1AsQ0FBQywyQkFBWSxDQUFDO0FBQ2QsRUFBRSxhQUFhO0FBQ2YsRUFBRSwrQkFBK0I7QUFDakMsRUFBRSw0REFBNEQ7QUFDOUQsRUFBRSxzQkFBc0I7QUFDeEIsRUFBRSxtQkFBbUI7QUFDckIsRUFBRSxXQUFXO0FBQ2IsRUFBRSxrQkFBa0I7QUFDcEIsRUFBRTtBQUNGLENBQUMscUJBQU0sQ0FBQztBQUNSLEVBQUUsZ0JBQWdCO0FBQ2xCLEVBQUUsa0JBQWtCO0FBQ3BCLEVBQUUsZ0JBQWdCO0FBQ2xCLEVBQUUsWUFBWTtBQUNkLEVBQUUsY0FBYztBQUNoQixFQUFFLGlCQUFpQjtBQUNuQixFQUFFO0FBQ0Y7QUFDQSxDQUFDLDBCQUEwQjtBQUMzQixFQUFFLHFCQUFNLENBQUM7QUFDVCxHQUFHLFNBQVM7QUFDWixHQUFHO0FBQ0gsRUFBRTtBQUNGO0FBQ0EsQ0FBQywwQkFBVyxDQUFDO0FBQ2IsRUFBRSxrQkFBa0I7QUFDcEIsRUFBRSxnQkFBZ0I7QUFDbEIsRUFBRSxlQUFlO0FBQ2pCLEVBQUU7QUFDRjtBQUNBLGdCQUFDLGNBQWM7QUFDZixDQUFDLDBCQUFXLENBQVMsY0FBZSxDQUFDO0FBQ3JDLEVBQUUsa0JBQWtCO0FBQ3BCLEVBQUUsMENBQTBDO0FBQzVDLEVBQUUsbUJBQW1CO0FBQ3JCLEVBQUUiLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIkExMXlOb3RpY2Uuc3ZlbHRlIl19 */"
};
function A11yNotice($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, A11yNotice);
  append_styles($$anchor, $$css11);
  const _a11yColors = mutable_state();
  const count = mutable_state();
  let components = prop($$props, "components", 8);
  let hex = prop($$props, "hex", 8);
  let a11yColors = prop($$props, "a11yColors", 8);
  let a11yLevel = prop($$props, "a11yLevel", 8);
  let a11yTexts = prop($$props, "a11yTexts", 8, void 0);
  k([a11y_default]);
  function getTexts() {
    return { ...defaultA11yTexts, ...a11yTexts() };
  }
  legacy_pre_effect(
    () => (deep_read_state(a11yColors()), getContrast, deep_read_state(hex())),
    () => {
      set(_a11yColors, a11yColors().map((a11yColor) => getContrast(a11yColor, hex())).filter(Boolean).map((x) => x));
    }
  );
  legacy_pre_effect(
    () => (get(_a11yColors), getNumberOfGradeFailed, deep_read_state(a11yLevel())),
    () => {
      set(count, get(_a11yColors).map((color) => getNumberOfGradeFailed(color, a11yLevel())).reduce((acc, c) => acc + c));
    }
  );
  legacy_pre_effect_reset();
  init();
  var div = root11();
  var span = child(div);
  var text = child(span, true);
  template_effect(() => set_text(text, getTexts().nbGradeSummary(get(count))));
  reset(span);
  var node = sibling(span, 2);
  each(node, 1, () => get(_a11yColors), index, ($$anchor2, $$item) => {
    let trueColors = () => get($$item).trueColors;
    trueColors();
    let contrast = () => get($$item).contrast;
    contrast();
    let placeholder = () => get($$item).placeholder;
    placeholder();
    let size = () => get($$item).size;
    size();
    var fragment = comment();
    var node_1 = first_child(fragment);
    component(node_1, () => components().a11ySingleNotice, ($$anchor3, $$component) => {
      $$component($$anchor3, spread_props(trueColors, {
        get contrast() {
          return contrast();
        },
        get placeholder() {
          return placeholder();
        },
        get size() {
          return size();
        },
        get a11yLevel() {
          return a11yLevel();
        },
        get contrastText() {
          return getTexts().contrast;
        }
      }));
    });
    append($$anchor2, fragment);
  });
  var node_2 = sibling(node, 2);
  {
    var consequent = ($$anchor2) => {
      var span_1 = root_2();
      var node_3 = child(span_1);
      html(node_3, () => getTexts().guidelines, false, false);
      reset(span_1);
      append($$anchor2, span_1);
    };
    if_block(node_2, ($$render) => {
      if (getTexts().guidelines) $$render(consequent);
    });
  }
  reset(div);
  template_effect(() => set_style(div, "--item-count", get(_a11yColors).length));
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  A11yNotice = hmr(A11yNotice, () => A11yNotice[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-0DiTYjzbUWvM");
    module.default[HMR].source = A11yNotice[HMR].source;
    set(A11yNotice[HMR].source, module.default[HMR].original);
  });
}
var A11yNotice_default = A11yNotice;
mark_module_end(A11yNotice);

// node_modules/svelte-awesome-color-picker/dist/components/variant/accessibility/A11ySingleNotice.svelte
mark_module_start();
A11ySingleNotice[FILENAME] = "node_modules/svelte-awesome-color-picker/dist/components/variant/accessibility/A11ySingleNotice.svelte";
var root_13 = add_locations(template(`<span class="grade s-bszYKanyAhfX">AAA</span>`), A11ySingleNotice[FILENAME], [[25, 2]]);
var root12 = add_locations(template(`<p class="lorem s-bszYKanyAhfX"> </p> <div><p class="s-bszYKanyAhfX"> </p> <span class="grade s-bszYKanyAhfX">AA</span> <!></div>`, 1), A11ySingleNotice[FILENAME], [
  [18, 0],
  [21, 0, [[22, 1], [23, 1]]]
]);
var $$css12 = {
  hash: "s-bszYKanyAhfX",
  code: "\r\n	.lorem.s-bszYKanyAhfX {\r\n		flex: 1;\r\n		text-align: center;\r\n		padding: 4px 8px;\r\n		margin-top: 10px;\r\n		border-radius: 4px;\r\n		border: 1px solid black;\r\n		white-space: nowrap;\r\n		text-overflow: ellipsis;\r\n		overflow: hidden;\r\n	}\r\n\r\n	.large.s-bszYKanyAhfX {\r\n		font-size: 22px;\r\n		padding: 2px 8px;\r\n	}\r\n\r\n	.grade.s-bszYKanyAhfX {\r\n		border-radius: 50px;\r\n		padding: 0 8px 2px;\r\n		background-color: #ff6100;\r\n		font-weight: bold;\r\n	}\r\n\r\n	.grade-ok.s-bszYKanyAhfX {\r\n		background-color: green;\r\n		color: white;\r\n	}\r\n\r\n	p.s-bszYKanyAhfX {\r\n		margin: 0;\r\n	}\r\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQTExeVNpbmdsZU5vdGljZS5zdmVsdGUiLCJtYXBwaW5ncyI6IkFBa0RPO0FBQ1AsQ0FBQyxxQkFBTSxDQUFDO0FBQ1IsRUFBRSxPQUFPO0FBQ1QsRUFBRSxrQkFBa0I7QUFDcEIsRUFBRSxnQkFBZ0I7QUFDbEIsRUFBRSxnQkFBZ0I7QUFDbEIsRUFBRSxrQkFBa0I7QUFDcEIsRUFBRSx1QkFBdUI7QUFDekIsRUFBRSxtQkFBbUI7QUFDckIsRUFBRSx1QkFBdUI7QUFDekIsRUFBRSxnQkFBZ0I7QUFDbEIsRUFBRTtBQUNGO0FBQ0EsQ0FBQyxxQkFBTSxDQUFDO0FBQ1IsRUFBRSxlQUFlO0FBQ2pCLEVBQUUsZ0JBQWdCO0FBQ2xCLEVBQUU7QUFDRjtBQUNBLENBQUMscUJBQU0sQ0FBQztBQUNSLEVBQUUsbUJBQW1CO0FBQ3JCLEVBQUUsa0JBQWtCO0FBQ3BCLEVBQUUseUJBQXlCO0FBQzNCLEVBQUUsaUJBQWlCO0FBQ25CLEVBQUU7QUFDRjtBQUNBLENBQUMsd0JBQVMsQ0FBQztBQUNYLEVBQUUsdUJBQXVCO0FBQ3pCLEVBQUUsWUFBWTtBQUNkLEVBQUU7QUFDRjtBQUNBLENBQUMsZ0JBQUMsQ0FBQztBQUNILEVBQUUsU0FBUztBQUNYLEVBQUUiLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIkExMXlTaW5nbGVOb3RpY2Uuc3ZlbHRlIl19 */"
};
function A11ySingleNotice($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, A11ySingleNotice);
  append_styles($$anchor, $$css12);
  let placeholder = prop($$props, "placeholder", 8, void 0);
  let size = prop($$props, "size", 8, void 0);
  let a11yLevel = prop($$props, "a11yLevel", 8);
  let textColor = prop($$props, "textColor", 8);
  let bgColor = prop($$props, "bgColor", 8);
  let contrast = prop($$props, "contrast", 8, 1);
  let contrastText = prop($$props, "contrastText", 8);
  init();
  var fragment = root12();
  var p = first_child(fragment);
  var text = child(p, true);
  reset(p);
  var div = sibling(p, 2);
  var p_1 = child(div);
  var text_1 = child(p_1);
  template_effect(() => set_text(text_1, `${contrastText() ?? ""} ${(contrast() >= 10 ? contrast().toFixed(1) : contrast()) ?? ""}`));
  reset(p_1);
  var span = sibling(p_1, 2);
  const class_directive = derived_safe_equal(() => isGradeAchieved(contrast(), size(), "AA"));
  template_effect(() => toggle_class(span, "grade-ok", get(class_directive)));
  var node = sibling(span, 2);
  {
    var consequent = ($$anchor2) => {
      var span_1 = root_13();
      const class_directive_1 = derived_safe_equal(() => isGradeAchieved(contrast(), size(), "AAA"));
      template_effect(() => toggle_class(span_1, "grade-ok", get(class_directive_1)));
      append($$anchor2, span_1);
    };
    if_block(node, ($$render) => {
      if (strict_equals(a11yLevel(), "AAA")) $$render(consequent);
    });
  }
  reset(div);
  template_effect(() => {
    toggle_class(p, "large", strict_equals(size(), "large"));
    set_style(p, "color", textColor());
    set_style(p, "background-color", bgColor());
    set_text(text, placeholder() || "Lorem Ipsum");
  });
  append($$anchor, fragment);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  A11ySingleNotice = hmr(A11ySingleNotice, () => A11ySingleNotice[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-bszYKanyAhfX");
    module.default[HMR].source = A11ySingleNotice[HMR].source;
    set(A11ySingleNotice[HMR].source, module.default[HMR].original);
  });
}
var A11ySingleNotice_default = A11ySingleNotice;
mark_module_end(A11ySingleNotice);

// node_modules/svelte-awesome-color-picker/dist/index.js
var dist_default = ColorPicker_default;
var ChromeVariant = {
  wrapper: Wrapper_default2
};
var A11yVariant = {
  wrapper: A11yHorizontalWrapper_default,
  a11yNotice: A11yNotice_default,
  a11ySingleNotice: A11ySingleNotice_default
};
export {
  A11yVariant,
  ChromeVariant,
  dist_default as default,
  mix
};
//# sourceMappingURL=svelte-awesome-color-picker.js.map
