{
  "version": 3,
  "sources": ["../../@threlte/extras/dist/hooks/useCursor.js", "../../@threlte/extras/dist/lib/buildSceneGraph.js", "../../@threlte/extras/dist/hooks/useGltf.js", "../../@threlte/extras/dist/hooks/useDraco.js", "../../@threlte/extras/dist/hooks/useMeshopt.js", "../../@threlte/extras/dist/hooks/useKtx2.js", "../../@threlte/extras/dist/hooks/useGltfAnimations.js", "../../@threlte/extras/dist/lib/storeUtils.js", "../../@threlte/extras/dist/hooks/useProgress.js", "../../@threlte/extras/dist/hooks/useTexture.js", "../../@threlte/extras/dist/hooks/useFBO.js", "../../@threlte/extras/dist/hooks/useGamepad.js", "../../@threlte/extras/dist/hooks/useMask.js", "../../@threlte/extras/dist/hooks/useViewport.js", "../../@threlte/extras/dist/utilities/meshBounds.js", "../../@threlte/extras/dist/suspense/context.js", "../../@threlte/extras/dist/suspense/useSuspense.js", "../../@threlte/extras/dist/components/AnimatedSpriteMaterial/AnimatedSpriteMaterial.svelte", "../../@threlte/extras/dist/components/Edges/Edges.svelte", "../../@threlte/extras/dist/components/HTML/utils.js", "../../@threlte/extras/dist/components/HTML/shaders.js", "../../@threlte/extras/dist/components/HTML/HTML.svelte", "../../@threlte/extras/dist/components/HUD/HUD.svelte", "../../@threlte/extras/dist/components/Float/Float.svelte", "../../@threlte/extras/dist/components/GLTF/GLTF.svelte", "../../@threlte/extras/dist/components/Gizmo/Gizmo.svelte", "../../@threlte/extras/dist/components/ContactShadows/ContactShadows.svelte", "../../@threlte/extras/dist/lib/revision.js", "../../@threlte/extras/dist/components/Environment/GroundProjectedSkybox.svelte", "../../@threlte/extras/dist/components/Environment/Environment.svelte", "../../@threlte/extras/dist/components/ImageMaterial/shaders.js", "../../@threlte/extras/dist/components/ImageMaterial/ImageMaterial.svelte", "../../@threlte/extras/dist/components/Grid/gridShaders.js", "../../@threlte/extras/dist/components/Grid/Grid.svelte", "../../@threlte/extras/dist/components/RoundedBoxGeometry/RoundedBoxGeometry.svelte", "../../@threlte/extras/dist/components/controls/useControlsContext.js", "../../@threlte/extras/dist/components/controls/TransformControls/TransformControls.svelte", "../../@threlte/extras/dist/components/controls/OrbitControls/OrbitControls.svelte", "../../@threlte/extras/dist/components/controls/TrackballControls/TrackballControls.svelte", "../../@threlte/extras/dist/components/Instancing/api.js", "../../@threlte/extras/dist/components/Instancing/Api.svelte", "../../@threlte/extras/dist/components/Instancing/InstancedMesh.svelte", "../../@threlte/extras/dist/components/Instancing/PositionMesh.js", "../../@threlte/extras/dist/components/Instancing/useInstanceId.js", "../../@threlte/extras/dist/components/Instancing/Instance.svelte", "../../@threlte/extras/dist/components/Instancing/InstancedMeshes/InnerInstancedMeshes.svelte", "../../@threlte/extras/dist/components/Instancing/InstancedMeshes/InstancedMeshes.svelte", "../../@threlte/extras/dist/components/SoftShadows/SoftShadows.svelte", "../../@threlte/extras/dist/components/MeshLine/MeshLineGeometry.svelte", "../../@threlte/extras/dist/components/MeshLine/fragment.js", "../../@threlte/extras/dist/components/MeshLine/vertex.js", "../../@threlte/extras/dist/components/MeshLine/MeshLineMaterial.svelte", "../../@threlte/extras/dist/components/Sky/Sky.svelte", "../../@threlte/extras/dist/components/InjectPlugin/InjectPlugin.svelte", "../../@threlte/extras/dist/components/Align/Align.svelte", "../../@threlte/extras/dist/components/CSM/useMaterials.js", "../../@threlte/extras/dist/components/CSM/CSM.svelte", "../../@threlte/extras/dist/components/Billboard/Billboard.svelte", "../../@threlte/extras/dist/components/FakeGlowMaterial/fragment.js", "../../@threlte/extras/dist/components/FakeGlowMaterial/vertex.js", "../../@threlte/extras/dist/components/FakeGlowMaterial/FakeGlowMaterial.svelte", "../../@threlte/extras/dist/components/Stars/fragment.js", "../../@threlte/extras/dist/components/Stars/vertex.js", "../../@threlte/extras/dist/components/Stars/Stars.svelte", "../../@threlte/extras/dist/components/MeshRefractionMaterial/fragment.js", "../../@threlte/extras/dist/components/MeshRefractionMaterial/vertex.js", "../../@threlte/extras/dist/components/MeshRefractionMaterial/MeshRefractionMaterial.svelte", "../../@threlte/extras/dist/components/Text3DGeometry/Text3DGeometry.svelte", "../../@threlte/extras/dist/components/PerfMonitor/PerfMonitor.svelte", "../../@threlte/extras/dist/components/Outlines/shaders.js", "../../@threlte/extras/dist/components/Outlines/Outlines.svelte", "../../@threlte/extras/dist/components/Mask/Mask.svelte", "../../@threlte/extras/dist/components/BakeShadows/BakeShadows.svelte", "../../@threlte/extras/dist/components/Detailed/Detailed.svelte", "../../@threlte/extras/dist/components/MeshDiscardMaterial/fragment.js", "../../@threlte/extras/dist/components/MeshDiscardMaterial/vertex.js", "../../@threlte/extras/dist/components/MeshDiscardMaterial/MeshDiscardMaterial.svelte", "../../@threlte/extras/dist/components/Resize/Resize.svelte", "../../@threlte/extras/dist/components/CubeCamera/CubeCamera.svelte", "../../@threlte/extras/dist/components/GradientTexture/common.js", "../../@threlte/extras/dist/components/GradientTexture/linear/LinearGradientTexture.svelte", "../../@threlte/extras/dist/components/GradientTexture/radial/RadialGradientTexture.svelte", "../../@threlte/extras/dist/suspense/Suspense.svelte", "../../@threlte/extras/dist/suspense/onReveal.js", "../../@threlte/extras/dist/suspense/onSuspend.js", "../../@threlte/extras/dist/components/portals/usePortalContext.js", "../../@threlte/extras/dist/components/portals/Portal/Portal.svelte", "../../@threlte/extras/dist/components/portals/PortalTarget/PortalTarget.svelte", "../../@threlte/extras/dist/components/Text/Text.svelte", "../../@threlte/extras/dist/audio/useThrelteAudio.js", "../../@threlte/extras/dist/audio/AudioListener/AudioListener.svelte", "../../@threlte/extras/dist/audio/utils/useAudio.js", "../../@threlte/extras/dist/audio/Audio/Audio.svelte", "../../@threlte/extras/dist/audio/PositionalAudio/PositionalAudio.svelte", "../../@threlte/extras/dist/audio/useAudioListener.js", "../../@threlte/extras/dist/interactivity/defaults.js", "../../@threlte/extras/dist/interactivity/context.js", "../../@threlte/extras/dist/interactivity/plugin.svelte.js", "../../@threlte/extras/dist/interactivity/setupInteractivity.js", "../../@threlte/extras/dist/interactivity/index.js", "../../@threlte/extras/dist/layers/plugin.svelte.js", "../../@threlte/extras/dist/layers/index.js", "../../@threlte/extras/dist/components/InstancedSprite/SpriteInstance.svelte", "../../@threlte/extras/dist/components/InstancedSprite/InstancedSprite.svelte", "../../@threlte/extras/dist/components/InstancedSprite/instancedSpriteUtils.js"],
  "sourcesContent": ["import { watch } from '@threlte/core';\nimport { onDestroy } from 'svelte';\nimport { get, writable } from 'svelte/store';\nexport const useCursor = (onPointerOver = 'pointer', onPointerOut = 'auto', target = undefined) => {\n    let hovering = false;\n    const hoveringStore = writable(false);\n    const onPointerEnter = () => {\n        hoveringStore.set(true);\n    };\n    const onPointerLeave = () => {\n        hoveringStore.set(false);\n    };\n    // Account for SSR use\n    if (typeof window === 'undefined') {\n        return {\n            hovering: hoveringStore,\n            onPointerEnter,\n            onPointerLeave\n        };\n    }\n    const el = target ?? document.body;\n    let onPointerOverValue = typeof onPointerOver === 'string' ? onPointerOver : get(onPointerOver);\n    if (typeof onPointerOver !== 'string') {\n        watch(onPointerOver, (cursorStyle) => {\n            onPointerOverValue = cursorStyle;\n            if (hovering) {\n                el.style.cursor = cursorStyle;\n            }\n        });\n    }\n    let onPointerOutValue = typeof onPointerOut === 'string' ? onPointerOut : get(onPointerOut);\n    if (typeof onPointerOut !== 'string') {\n        watch(onPointerOut, (cursorStyle) => {\n            onPointerOutValue = cursorStyle;\n            if (!hovering) {\n                el.style.cursor = cursorStyle;\n            }\n        });\n    }\n    watch(hoveringStore, (isHovering) => {\n        hovering = isHovering;\n        if (hovering) {\n            el.style.cursor = onPointerOverValue;\n        }\n        else {\n            el.style.cursor = onPointerOutValue;\n        }\n    });\n    // onDestroy: Reset the cursor style\n    onDestroy(() => {\n        el.style.cursor = onPointerOutValue;\n    });\n    return {\n        hovering: hoveringStore,\n        onPointerEnter,\n        onPointerLeave\n    };\n};\n", "export const buildSceneGraph = (object) => {\n    const data = { nodes: {}, materials: {} };\n    if (object) {\n        object.traverse((obj) => {\n            if (obj.name)\n                data.nodes[obj.name] = obj;\n            if (obj.material && !data.materials[obj.material.name])\n                data.materials[obj.material.name] = obj.material;\n        });\n    }\n    return data;\n};\n", "import { useLoader } from '@threlte/core';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { buildSceneGraph } from '../lib/buildSceneGraph';\nexport function useGltf(urlOrOptions, options) {\n    const opts = typeof urlOrOptions === 'string' ? options : urlOrOptions;\n    const loader = useLoader(GLTFLoader, {\n        extend(loader) {\n            if (opts?.dracoLoader) {\n                loader.setDRACOLoader(opts.dracoLoader);\n            }\n            if (opts?.meshoptDecoder) {\n                loader.setMeshoptDecoder(opts.meshoptDecoder);\n            }\n            if (opts?.ktx2Loader) {\n                loader.setKTX2Loader(opts.ktx2Loader);\n            }\n        }\n    });\n    const load = (url) => {\n        return loader.load(url, {\n            transform(result) {\n                return {\n                    ...result,\n                    ...buildSceneGraph(result.scene)\n                };\n            }\n        });\n    };\n    const url = typeof urlOrOptions === 'string' ? urlOrOptions : undefined;\n    if (url) {\n        return load(url);\n    }\n    else {\n        return {\n            load\n        };\n    }\n}\n", "import { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\nconst defaultPath = 'https://www.gstatic.com/draco/versioned/decoders/1.4.3/';\nconst dracoLoaderInstances = {};\nexport const useDraco = (decoderPath = defaultPath) => {\n    const cachedLoader = dracoLoaderInstances[decoderPath];\n    if (cachedLoader) {\n        return cachedLoader;\n    }\n    const loader = new DRACOLoader().setDecoderPath(decoderPath);\n    dracoLoaderInstances[decoderPath] = loader;\n    return loader;\n};\n", "import { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nexport const useMeshopt = () => {\n    return MeshoptDecoder;\n};\n", "import { useThrelte } from '@threlte/core';\nimport { KTX2Loader } from 'three/examples/jsm/loaders/KTX2Loader.js';\nconst ktxLoaderInstances = {};\nexport const useKtx2 = (transcoderPath) => {\n    const cachedLoader = ktxLoaderInstances[transcoderPath];\n    if (cachedLoader) {\n        return cachedLoader;\n    }\n    const { renderer } = useThrelte();\n    const ktx2Loader = new KTX2Loader();\n    ktx2Loader.setTranscoderPath(transcoderPath);\n    ktx2Loader.detectSupport(renderer);\n    ktxLoaderInstances[transcoderPath] = ktx2Loader;\n    return ktx2Loader;\n};\n", "import { currentWritable, useTask, watch } from '@threlte/core';\nimport { tick } from 'svelte';\nimport { derived, writable } from 'svelte/store';\nimport { AnimationMixer } from 'three';\nconst isRoot = (value) => !!value?.isObject3D;\nconst isGltfStore = (value) => !!value?.subscribe && typeof value.subscribe === 'function';\nexport function useGltfAnimations(rootOrGltf, maybeRoot) {\n    const gltf = isGltfStore(rootOrGltf) ? rootOrGltf : writable(undefined);\n    const root = currentWritable(isRoot(rootOrGltf) ? rootOrGltf : isRoot(maybeRoot) ? maybeRoot : undefined);\n    const actualRoot = derived([root, gltf], ([root, gltf]) => {\n        return root ?? gltf?.scene;\n    });\n    const actions = currentWritable({});\n    const mixer = new AnimationMixer(undefined);\n    watch([gltf, actualRoot], async ([gltf, actualRoot]) => {\n        if (!gltf || !gltf.animations.length || !actualRoot)\n            return;\n        // we need to wait for the tick in order for the ref and\n        // its children to be mounted properly\n        await tick();\n        // if there's a mixer, we stop all running actions\n        const newActions = gltf.animations.reduce((acc, clip) => {\n            const action = mixer.clipAction(clip, actualRoot);\n            return {\n                ...acc,\n                [clip.name]: action\n            };\n        }, {});\n        actions.set(newActions);\n        return () => {\n            Object.values(newActions).forEach((a) => {\n                const action = a;\n                action.stop();\n                mixer.uncacheClip(action.getClip());\n            });\n        };\n    });\n    const { start, stop } = useTask((delta) => {\n        mixer.update(delta);\n    }, { autoStart: false });\n    watch(actions, (actions) => {\n        if (Object.keys(actions).length)\n            start();\n        else\n            stop();\n    });\n    return {\n        gltf,\n        root,\n        mixer,\n        actions\n    };\n}\n", "export const toCurrentReadable = (store) => {\n    return {\n        subscribe: store.subscribe,\n        get current() {\n            return store.current;\n        }\n    };\n};\n", "import { currentWritable } from '@threlte/core';\nimport { DefaultLoadingManager } from 'three';\nimport { toCurrentReadable } from '../lib/storeUtils';\nlet previousTotalLoaded = 0;\nconst finishedOnce = currentWritable(false);\nconst activeStore = currentWritable(false);\nconst itemStore = currentWritable(undefined);\nconst loadedStore = currentWritable(0);\nconst totalStore = currentWritable(0);\nconst errorsStore = currentWritable([]);\nconst progressStore = currentWritable(0);\nconst { onStart, onLoad, onError } = DefaultLoadingManager;\nDefaultLoadingManager.onStart = (url, loaded, total) => {\n    onStart?.(url, loaded, total);\n    activeStore.set(true);\n    itemStore.set(url);\n    loadedStore.set(loaded);\n    totalStore.set(total);\n    const progress = (loaded - previousTotalLoaded) / (total - previousTotalLoaded);\n    progressStore.set(progress);\n    if (progress === 1)\n        finishedOnce.set(true);\n};\nDefaultLoadingManager.onLoad = () => {\n    onLoad?.();\n    activeStore.set(false);\n};\nDefaultLoadingManager.onError = (url) => {\n    onError?.(url);\n    errorsStore.update((errors) => {\n        return [...errors, url];\n    });\n};\nDefaultLoadingManager.onProgress = (url, loaded, total) => {\n    if (loaded === total) {\n        previousTotalLoaded = total;\n    }\n    activeStore.set(true);\n    itemStore.set(url);\n    loadedStore.set(loaded);\n    totalStore.set(total);\n    const progress = (loaded - previousTotalLoaded) / (total - previousTotalLoaded) || 1;\n    progressStore.set(progress);\n    if (progress === 1)\n        finishedOnce.set(true);\n};\nconst stores = {\n    active: toCurrentReadable(activeStore),\n    item: toCurrentReadable(itemStore),\n    loaded: toCurrentReadable(loadedStore),\n    total: toCurrentReadable(totalStore),\n    errors: toCurrentReadable(errorsStore),\n    progress: toCurrentReadable(progressStore),\n    finishedOnce: toCurrentReadable(finishedOnce)\n};\nexport const useProgress = () => {\n    return stores;\n};\n", "import { useLoader, useThrelte } from '@threlte/core';\nimport { TextureLoader } from 'three';\nexport const useTexture = (input, options) => {\n    const loader = useLoader(TextureLoader, options);\n    const { renderer } = useThrelte();\n    return loader.load(input, {\n        ...options,\n        transform: (res) => {\n            res.colorSpace = renderer.outputColorSpace;\n            res.needsUpdate = true;\n            return options?.transform?.(res) ?? res;\n        }\n    });\n};\n", "/* Based on https://github.com/pmndrs/drei/blob/master/src/core/useFBO.tsx under the MIT License */\nimport { useThrelte } from '@threlte/core';\nimport { onDestroy, onMount } from 'svelte';\nimport { WebGLRenderTarget, LinearFilter, HalfFloatType, DepthTexture, FloatType } from 'three';\n// 👇 uncomment when TS version supports function overloads\n// export function useFBO(options?: UseFBOOptions)\nexport const useFBO = (\n/** Width in pixels, or options (will render fullscreen by default) */\nwidth, \n/** Height in pixels */\nheight, \n/** Options */\noptions) => {\n    const { dpr, size } = useThrelte();\n    const _width = typeof width === 'number' ? width : 1 * (dpr.current ?? 1);\n    const _height = typeof height === 'number' ? height : 1 * (dpr.current ?? 1);\n    const _options = (typeof width === 'number' ? options : width) || {};\n    const { samples = 0, depth, ...targetOptions } = _options;\n    const target = new WebGLRenderTarget(_width, _height, {\n        minFilter: LinearFilter,\n        magFilter: LinearFilter,\n        type: HalfFloatType,\n        ...targetOptions\n    });\n    if (depth) {\n        target.depthTexture = new DepthTexture(_width, _height, FloatType);\n    }\n    target.samples = samples;\n    onMount(() => {\n        if (samples)\n            target.samples = samples;\n        return () => target.dispose();\n    });\n    const unsubscribeSize = size.subscribe((val) => {\n        // Update the width and height on size change\n        const _width = typeof width === 'number' ? width : val.width * dpr.current;\n        const _height = typeof height === 'number' ? height : val.height * dpr.current;\n        if (target.width !== _width && target.height !== _height) {\n            target.setSize(_width, _height);\n        }\n    });\n    onDestroy(unsubscribeSize);\n    return target;\n};\n", "import { onDestroy } from 'svelte';\nimport { currentWritable, useTask, useThrelte } from '@threlte/core';\nconst standardButtons = [\n    'clusterBottom',\n    'clusterRight',\n    'clusterLeft',\n    'clusterTop',\n    'leftBumper',\n    'rightBumper',\n    'leftTrigger',\n    'rightTrigger',\n    'select',\n    'start',\n    'leftStickButton',\n    'rightStickButton',\n    'directionalTop',\n    'directionalBottom',\n    'directionalLeft',\n    'directionalRight',\n    'center'\n];\nconst xrButtons = [\n    'trigger',\n    'squeeze',\n    'touchpadButton',\n    'thumbstickButton',\n    'clusterBottom',\n    'clusterTop'\n];\nconst standardAxes = ['leftStick', 'rightStick'];\nconst xrAxes = ['touchpad', 'thumbstick'];\nconst gamepadEvents = ['change', 'press', 'down', 'up', 'touch', 'touchstart', 'touchend'];\nconst createButton = (events, index) => {\n    const off = (name, fn) => {\n        if (!(index in events) || !(name in events[index]))\n            return;\n        const arrayIndex = events[index][name].indexOf(fn);\n        if (arrayIndex > -1)\n            events[index][name].splice(arrayIndex, 1);\n    };\n    const on = (name, fn) => {\n        events[index][name] ??= [];\n        events[index][name].push(fn);\n        return () => off(name, fn);\n    };\n    return {\n        pressed: false,\n        touched: false,\n        value: 0,\n        on,\n        off\n    };\n};\nconst createAxis = (events, index) => {\n    const off = (name, fn) => {\n        if (!(index in events) || !(name in events[index]))\n            return;\n        const arrayIndex = events[index][name].indexOf(fn);\n        if (arrayIndex > -1)\n            events[index][name].splice(arrayIndex, 1);\n    };\n    const on = (name, fn) => {\n        events[index][name] ??= [];\n        events[index][name].push(fn);\n        return () => off(name, fn);\n    };\n    return {\n        x: 0,\n        y: 0,\n        on,\n        off\n    };\n};\nconst createXrStandard = (allEvents, events) => {\n    const off = (name, fn) => {\n        if (!allEvents[name])\n            return;\n        const index = allEvents[name].indexOf(fn);\n        if (index > -1)\n            allEvents[name].splice(index, 1);\n    };\n    const on = (name, fn) => {\n        allEvents[name] ??= [];\n        allEvents[name].push(fn);\n        return () => off(name, fn);\n    };\n    return {\n        on,\n        off,\n        /** The Gamepad connection status */\n        connected: currentWritable(false),\n        /** The raw Gamepad object */\n        raw: null,\n        /** buttons[0] - Primary trigger */\n        trigger: createButton(events, 0),\n        /** buttons[1] - Primary squeeze button */\n        squeeze: createButton(events, 1),\n        /** buttons[2] - Primary touchpad */\n        touchpadButton: createButton(events, 2),\n        /** buttons[3] - Primary thumbstick */\n        thumbstickButton: createButton(events, 3),\n        /** buttons[4] - Bottom cluster button */\n        clusterBottom: createButton(events, 4),\n        /** buttons[5] - Top cluster button */\n        clusterTop: createButton(events, 5),\n        /** axes[0], axes[1] - Horizontal / vertical axis for the primary touchpad */\n        touchpad: createAxis(events, 6),\n        /** axes[2], axes[3] - Horizontal / vertical axis for the primary thumbstick */\n        thumbstick: createAxis(events, 7)\n    };\n};\nconst createStandard = (allEvents, events) => {\n    const off = (name, fn) => {\n        if (!allEvents[name])\n            return;\n        const index = allEvents[name].indexOf(fn);\n        if (index > -1)\n            allEvents[name].splice(index, 1);\n    };\n    const on = (name, fn) => {\n        allEvents[name] ??= [];\n        allEvents[name].push(fn);\n        return () => off(name, fn);\n    };\n    return {\n        on,\n        off,\n        /** The Gamepad connection status */\n        connected: currentWritable(false),\n        /** The raw Gamepad object */\n        raw: null,\n        /** buttons[0] - Botton button in right cluster */\n        clusterBottom: createButton(events, 0),\n        /** buttons[1] - Right button in right cluster */\n        clusterRight: createButton(events, 1),\n        /** buttons[2] - Left button in right cluster */\n        clusterLeft: createButton(events, 2),\n        /** buttons[3] - Top button in right cluster */\n        clusterTop: createButton(events, 3),\n        /** buttons[4] - Top left front button */\n        leftBumper: createButton(events, 4),\n        /** buttons[5] - Top right front button */\n        rightBumper: createButton(events, 5),\n        /** buttons[6] - Bottom left front button */\n        leftTrigger: createButton(events, 6),\n        /** buttons[7] - Bottom right front button */\n        rightTrigger: createButton(events, 7),\n        /** buttons[8] - Left button in center cluster */\n        select: createButton(events, 8),\n        /** buttons[9] - Right button in center cluster */\n        start: createButton(events, 9),\n        /** buttons[10] - Left stick pressed button */\n        leftStickButton: createButton(events, 10),\n        /** buttons[11] -\tRight stick pressed button */\n        rightStickButton: createButton(events, 11),\n        /** buttons[12] -\tTop button in left cluster */\n        directionalTop: createButton(events, 12),\n        /** buttons[13] -\tBottom button in left cluster */\n        directionalBottom: createButton(events, 13),\n        /** buttons[14] -\tLeft button in left cluster */\n        directionalLeft: createButton(events, 14),\n        /** buttons[15] -\tRight button in left cluster */\n        directionalRight: createButton(events, 15),\n        /** buttons[16] -\tCenter button in center cluster */\n        center: createButton(events, 16),\n        /** axes[0], axes[1] - Horizontal / vertical axis for left stick (negative left/positive right) */\n        leftStick: createAxis(events, 17),\n        /** axes[2], axes[3] - Horizontal / vertical axis for right stick (negative left/positive right) */\n        rightStick: createAxis(events, 18)\n    };\n};\nconst processButton = (target, mappedButton, allEvents, buttonEvents, source) => {\n    const lastTouched = mappedButton.touched;\n    const lastPressed = mappedButton.pressed;\n    const lastValue = mappedButton.value;\n    mappedButton.touched = source?.touched ?? false;\n    mappedButton.pressed = source?.pressed ?? false;\n    const value = (mappedButton.value = source?.value ?? 0);\n    if (!lastTouched && mappedButton.touched) {\n        allEvents.touchstart?.forEach((fn) => fn({ type: 'touchstart', target, value }));\n        buttonEvents.touchstart?.forEach((fn) => fn({ type: 'touchstart', target, value }));\n    }\n    else if (lastTouched && !mappedButton.touched) {\n        allEvents.touch?.forEach((fn) => fn({ type: 'touch', target, value }));\n        buttonEvents.touch?.forEach((fn) => fn({ type: 'touch', target, value }));\n        allEvents.touchend?.forEach((fn) => fn({ type: 'touchend', target, value }));\n        buttonEvents.touchend?.forEach((fn) => fn({ type: 'touchend', target, value }));\n    }\n    if (!lastPressed && mappedButton.pressed) {\n        allEvents.down?.forEach((fn) => fn({ type: 'down', target, value }));\n        buttonEvents.down?.forEach((fn) => fn({ type: 'down', target, value }));\n    }\n    else if (lastPressed && !mappedButton.pressed) {\n        allEvents.press?.forEach((fn) => fn({ type: 'press', target, value }));\n        buttonEvents.press?.forEach((fn) => fn({ type: 'press', target, value }));\n        allEvents.up?.forEach((fn) => fn({ type: 'up', target, value }));\n        buttonEvents.up?.forEach((fn) => fn({ type: 'up', target, value }));\n    }\n    if (lastValue !== mappedButton.value) {\n        allEvents.change?.forEach((fn) => fn({ type: 'change', target, value }));\n        buttonEvents.change?.forEach((fn) => fn({ type: 'change', target, value }));\n    }\n};\nconst processAxis = (target, mappedStick, allEvents, axisEvents, axisDeadzone, rawX = 0, rawY = 0) => {\n    const lastValueX = mappedStick.x;\n    const lastValueY = mappedStick.y;\n    const x = Math.abs(rawX) < axisDeadzone ? 0 : rawX;\n    const y = Math.abs(rawY) < axisDeadzone ? 0 : rawY;\n    mappedStick.x = x;\n    mappedStick.y = y;\n    if (lastValueX !== x || lastValueY !== y) {\n        allEvents.change?.forEach((fn) => fn({ type: 'change', target, value: { x, y } }));\n        axisEvents.change?.forEach((fn) => fn({ type: 'change', target, value: { x, y } }));\n    }\n};\nexport function useGamepad(options = {}) {\n    const { axisDeadzone = 0.05 } = options;\n    const allEvents = {};\n    const events = [];\n    if ('xr' in options) {\n        for (let i = 0; i < xrButtons.length + xrAxes.length; i += 1) {\n            events.push({});\n        }\n        const gamepad = createXrStandard(allEvents, events);\n        const { xr } = useThrelte().renderer;\n        const processSnapshot = () => {\n            xr.getSession()?.inputSources.forEach((source) => {\n                if (source.handedness !== options.hand) {\n                    return;\n                }\n                gamepad.raw = source.gamepad ?? null;\n                const { buttons = [], axes = [] } = gamepad.raw ?? {};\n                xrButtons.forEach((name, index) => processButton(name, gamepad[name], allEvents, events[index], buttons[index]));\n                processAxis('touchpad', gamepad.touchpad, allEvents, events[6], axisDeadzone, axes[0], axes[1]);\n                processAxis('thumbstick', gamepad.thumbstick, allEvents, events[7], axisDeadzone, axes[2], axes[3]);\n            });\n        };\n        // useTask automatically stops whenever the host component unmounts, so we\n        // don't need to clean up here.\n        const { start, stop } = useTask(processSnapshot, { autoStart: false, autoInvalidate: false });\n        const handleConnected = (event) => {\n            if (event.data.handedness !== options.hand)\n                return;\n            const pad = event.data.gamepad;\n            if (pad) {\n                gamepad.raw = pad;\n                gamepad.connected.set(true);\n                start();\n            }\n        };\n        const handleDisconnected = (event) => {\n            if (event.data.handedness !== options.hand)\n                return;\n            gamepad.raw = null;\n            gamepad.connected.set(false);\n            stop();\n        };\n        // Check if gamepads are already connected. Since XR controllers do not show\n        // up in the regular navigator.getGamepads() array, we have to check the\n        // XRSession's inputSources array.\n        const session = xr.getSession();\n        if (session) {\n            session.inputSources.forEach((source) => {\n                if (source.handedness !== options.hand) {\n                    return;\n                }\n                const pad = source.gamepad;\n                // we could be dealing with hands here, so we need to check if the gamepad is null\n                if (pad) {\n                    gamepad.raw = pad;\n                    gamepad.connected.set(true);\n                    start();\n                }\n            });\n        }\n        for (const index of [0, 1]) {\n            const controller = xr.getController(index);\n            controller.addEventListener('connected', handleConnected);\n            controller.addEventListener('disconnected', handleDisconnected);\n        }\n        onDestroy(() => {\n            for (const index of [0, 1]) {\n                const controller = xr.getController(index);\n                controller.removeEventListener('connected', handleConnected);\n                controller.removeEventListener('disconnected', handleDisconnected);\n            }\n        });\n        return gamepad;\n    }\n    else {\n        for (let i = 0; i < standardButtons.length + standardAxes.length; i += 1) {\n            events.push({});\n        }\n        const { index: gamepadIndex = 0 } = options;\n        const gamepad = createStandard(allEvents, events);\n        const processSnapshot = () => {\n            /**\n             * getGamepads() will return a snapshot of a gamepad that will never change,\n             * so it must be polled continuously to recieve new values.\n             */\n            const pad = navigator.getGamepads()[gamepadIndex];\n            gamepad.raw = pad;\n            const { buttons = [], axes = [] } = pad ?? {};\n            standardButtons.forEach((name, index) => processButton(name, gamepad[name], allEvents, events[index], buttons[index]));\n            processAxis('leftStick', gamepad.leftStick, allEvents, events[17], axisDeadzone, axes[0], axes[1]);\n            processAxis('rightStick', gamepad.rightStick, allEvents, events[18], axisDeadzone, axes[2], axes[3]);\n        };\n        // useTask automatically stops whenever the host component unmounts, so we\n        // don't need to clean up here.\n        const { start, stop } = useTask(processSnapshot, { autoStart: false, autoInvalidate: false });\n        const handleGamepadDisconnected = (event) => {\n            const { id } = event.gamepad;\n            if (id === gamepad.raw?.id) {\n                gamepad.raw = null;\n                gamepad.connected.set(false);\n                stop();\n            }\n        };\n        const handleGamepadConnected = () => {\n            const pad = navigator.getGamepads()[gamepadIndex];\n            if (pad) {\n                gamepad.raw = pad;\n                gamepad.connected.set(true);\n                start();\n            }\n        };\n        // Check if gamepads are already connected.\n        handleGamepadConnected();\n        window.addEventListener('gamepadconnected', handleGamepadConnected);\n        window.addEventListener('gamepaddisconnected', handleGamepadDisconnected);\n        onDestroy(() => {\n            window.removeEventListener('gamepadconnected', handleGamepadConnected);\n            window.removeEventListener('gamepaddisconnected', handleGamepadDisconnected);\n        });\n        return gamepad;\n    }\n}\n", "import { NotEqualStencilFunc, EqualStencilFunc, KeepStencilOp } from 'three';\n/**\n * Use in combination with the Mask component.\n *\n * @param {number} id number to link useMask objects with <Mask>\n * @param {boolean} inverse inverse the mask\n */\nexport const useMask = (id = 1, inverse = false) => {\n    return {\n        stencilRef: id,\n        stencilWrite: true,\n        stencilFunc: inverse ? NotEqualStencilFunc : EqualStencilFunc,\n        stencilFail: KeepStencilOp,\n        stencilZFail: KeepStencilOp,\n        stencilZPass: KeepStencilOp\n    };\n};\n", "import { Vector3 } from 'three';\nimport { currentWritable, useTask, useThrelte, watch } from '@threlte/core';\nconst origin = new Vector3();\nconst position = new Vector3();\nconst lastPosition = new Vector3();\nexport const useViewport = (target) => {\n    const viewport = currentWritable({\n        width: 0,\n        height: 0,\n        factor: 0,\n        distance: 0\n    });\n    const { camera, size, renderStage, scheduler } = useThrelte();\n    const updateViewport = ($size, $camera, distance) => {\n        viewport.update(($viewport) => {\n            const { width, height } = $size;\n            if (Array.isArray(target)) {\n                origin.fromArray(target);\n            }\n            else if (target !== undefined) {\n                origin.copy(target);\n            }\n            $viewport.distance = distance;\n            if ('isOrthographicCamera' in $camera) {\n                $viewport.width = width / $camera.zoom;\n                $viewport.height = height / $camera.zoom;\n                $viewport.factor = 1;\n            }\n            else if ('isPerspectiveCamera' in $camera) {\n                const fov = ($camera.fov * Math.PI) / 180; // convert vertical fov to radians\n                const h = 2 * Math.tan(fov / 2) * distance; // visible height\n                const w = h * (width / height);\n                $viewport.width = w;\n                $viewport.height = h;\n                $viewport.factor = width / w;\n            }\n            return $viewport;\n        });\n    };\n    useTask(() => {\n        camera.current.getWorldPosition(position);\n        if (!position.equals(lastPosition)) {\n            const distance = position.distanceTo(origin);\n            updateViewport(size.current, camera.current, distance);\n            lastPosition.copy(position);\n        }\n    }, {\n        autoInvalidate: false,\n        stage: scheduler.createStage(Symbol('viewport-stage'), { before: renderStage })\n    });\n    watch([camera, size], ([$camera, $size]) => {\n        const distance = $camera.getWorldPosition(position).distanceTo(origin);\n        updateViewport($size, $camera, distance);\n    });\n    return viewport;\n};\n", "import { Matrix4, Ray, Sphere, Vector3 } from 'three';\nconst sphere = new Sphere();\nconst inverseMatrix = new Matrix4();\nconst ray = new Ray();\nconst v = new Vector3();\nexport const meshBounds = function (raycaster, intersects) {\n    if (this.geometry.boundingSphere === null) {\n        this.geometry.computeBoundingSphere();\n    }\n    sphere.copy(this.geometry.boundingSphere ?? sphere);\n    sphere.applyMatrix4(this.matrixWorld);\n    if (!raycaster.ray.intersectsSphere(sphere)) {\n        return;\n    }\n    inverseMatrix.copy(this.matrixWorld).invert();\n    ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n    if (this.geometry.boundingBox !== null &&\n        ray.intersectBox(this.geometry.boundingBox, v) === null) {\n        return;\n    }\n    const distance = v.distanceTo(raycaster.ray.origin);\n    const point = v.clone();\n    intersects.push({\n        distance,\n        point,\n        object: this\n    });\n};\n", "import { currentWritable } from '@threlte/core';\nimport { setContext } from 'svelte';\nimport { derived, writable } from 'svelte/store';\nexport const suspenseContextIdentifier = Symbol('THRELTE_SUSPENSE_CONTEXT_IDENTIFIER');\nexport const createSuspenseContext = (options) => {\n    /**\n     * This set contains all the promises that are currently being suspended.\n     */\n    const promises = currentWritable(new Set());\n    /**\n     * This map contains all the errors that were thrown during the suspension.\n     */\n    const errors = currentWritable(new Map());\n    const finalized = writable(false);\n    const checkFinalized = () => {\n        if (promises.current.size === 0 && errors.current.size === 0)\n            finalized.set(true);\n    };\n    const finalStore = writable(options?.final ?? false);\n    const addPromise = (promise) => {\n        promises.update((set) => {\n            set.add(promise);\n            return set;\n        });\n    };\n    const removePromise = (promise) => {\n        promises.update((set) => {\n            set.delete(promise);\n            return set;\n        });\n    };\n    const addError = (promise, error) => {\n        errors.update((map) => {\n            map.set(promise, error);\n            return map;\n        });\n    };\n    const removeError = (promise) => {\n        errors.update((map) => {\n            map.delete(promise);\n            return map;\n        });\n    };\n    /**\n     * A Suspense component is suspending its children if it has any pending\n     * promises or errors.\n     * \"suspended\" means that the default slot is not rendered.\n     * If the final prop is set to true, the Suspense component will not\n     * suspend its children once all promises are resolved and all errors are\n     * handled.\n     */\n    const suspended = derived([promises, errors, finalStore, finalized], ([promises, errors, final, finalized]) => {\n        if (final && finalized) {\n            // if the suspense settled *once*, it will never suspend again.\n            return false;\n        }\n        else if (errors.size > 0) {\n            // suspense if there are errors\n            return true;\n        }\n        else {\n            // suspense if there are pending promises\n            return promises.size > 0;\n        }\n    });\n    const context = {\n        suspend(promise) {\n            addPromise(promise);\n            promise\n                .catch((error) => {\n                addError(promise, error);\n            })\n                .finally(() => {\n                removePromise(promise);\n                checkFinalized();\n            });\n        },\n        onComponentDestroy(promise) {\n            removePromise(promise);\n            removeError(promise);\n            checkFinalized();\n        },\n        suspended\n    };\n    const errorsArray = derived(errors, (errors) => Array.from(errors.values()));\n    setContext(suspenseContextIdentifier, context);\n    return {\n        promises,\n        suspended,\n        errors: errorsArray,\n        setFinal: (final) => finalStore.set(final ?? false)\n    };\n};\n", "import { getContext, onDestroy } from 'svelte';\nimport { derived, readable } from 'svelte/store';\nimport { suspenseContextIdentifier } from './context';\n/**\n * This hook is used to suspend the component until the promise is resolved.\n * It also works outside the boundaries of the <Suspense> component.\n */\nexport const useSuspense = () => {\n    const ctx = getContext(suspenseContextIdentifier);\n    const promises = new Set();\n    const suspend = (promise) => {\n        if (ctx) {\n            ctx.suspend(promise);\n            promises.add(promise);\n        }\n        return promise;\n    };\n    const state = {\n        suspended: derived(ctx?.suspended ?? readable(false), (suspended) => suspended)\n    };\n    onDestroy(() => {\n        if (!ctx)\n            return;\n        for (const promise of promises) {\n            ctx.onComponentDestroy(promise);\n        }\n        promises.clear();\n    });\n    return Object.assign(suspend, state);\n};\n", null, null, "import { isInstanceOf } from '@threlte/core';\nimport { Vector2, Vector3 } from 'three';\nconst v1 = new Vector3();\nconst v2 = new Vector3();\nconst v3 = new Vector3();\nconst vec2 = new Vector2();\nexport const defaultCalculatePosition = (obj, camera, size) => {\n    const objectPos = v1.setFromMatrixPosition(obj.matrixWorld);\n    objectPos.project(camera);\n    const widthHalf = size.width / 2;\n    const heightHalf = size.height / 2;\n    return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n};\nexport const isObjectBehindCamera = (el, camera) => {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const deltaCamObj = objectPos.sub(cameraPos);\n    const camDir = camera.getWorldDirection(v3);\n    return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n};\nexport const isObjectVisible = (el, camera, raycaster, occlude) => {\n    const elPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const screenPos = v2.copy(v1);\n    screenPos.project(camera);\n    raycaster.setFromCamera(vec2.set(screenPos.x, screenPos.y), camera);\n    const intersects = raycaster.intersectObjects(occlude, true);\n    if (intersects.length) {\n        const intersectionDistance = intersects[0].distance;\n        const pointDistance = elPos.distanceTo(raycaster.ray.origin);\n        return pointDistance < intersectionDistance;\n    }\n    return true;\n};\nexport const objectScale = (el, camera) => {\n    if (isInstanceOf(camera, 'OrthographicCamera')) {\n        return camera.zoom;\n    }\n    else if (isInstanceOf(camera, 'PerspectiveCamera')) {\n        const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n        const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n        const vFOV = (camera.fov * Math.PI) / 180;\n        const dist = objectPos.distanceTo(cameraPos);\n        const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\n        return 1 / scaleFOV;\n    }\n    else {\n        return 1;\n    }\n};\nexport const objectZIndex = (el, camera, zIndexRange) => {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const dist = objectPos.distanceTo(cameraPos);\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n    const B = zIndexRange[1] - A * camera.far;\n    return Math.round(A * dist + B);\n};\nexport const epsilon = (value) => (Math.abs(value) < 1e-10 ? 0 : value);\nexport const getCSSMatrix = (mat4, m, prepend = '') => {\n    const { elements: e } = mat4;\n    return `${prepend}matrix3d(\n    ${epsilon(m[0] * e[0])},${epsilon(m[1] * e[1])},${epsilon(m[2] * e[2])},${epsilon(m[3] * e[3])},\n    ${epsilon(m[4] * e[4])},${epsilon(m[5] * e[5])},${epsilon(m[6] * e[6])},${epsilon(m[7] * e[7])},\n    ${epsilon(m[8] * e[8])},${epsilon(m[9] * e[9])},${epsilon(m[10] * e[10])},${epsilon(m[11] * e[11])},\n    ${epsilon(m[12] * e[12])},${epsilon(m[13] * e[13])},${epsilon(m[14] * e[14])},${epsilon(m[15] * e[15])}\n  )`;\n};\nexport const getCameraCSSMatrix = ((multipliers) => {\n    return (matrix) => getCSSMatrix(matrix, multipliers);\n})([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\nexport const getObjectCSSMatrix = ((scaleMultipliers) => {\n    return (matrix, factor) => getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)');\n})((f) => [\n    1 / f,\n    1 / f,\n    1 / f,\n    1,\n    -1 / f,\n    -1 / f,\n    -1 / f,\n    -1,\n    1 / f,\n    1 / f,\n    1 / f,\n    1,\n    1,\n    1,\n    1,\n    1\n]);\nexport const getViewportFactor = (camera, target, size) => {\n    if (isInstanceOf(camera, 'OrthographicCamera')) {\n        return 1;\n    }\n    if (isInstanceOf(camera, 'PerspectiveCamera')) {\n        const { width, height } = size;\n        const distance = camera.getWorldPosition(v1).distanceTo(target);\n        // convert vertical fov to radians\n        const fov = (camera.fov * Math.PI) / 180;\n        // visible height\n        const h = 2 * Math.tan(fov / 2) * distance;\n        const w = h * (width / height);\n        return width / w;\n    }\n    throw new Error('getViewportFactor needs a Perspective or Orthographic Camera');\n};\n", "/**\n * These shaders add support for the logarithmicDepthBuffer.\n */\nexport const logVertex = `\n#include <common>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    #include <logdepthbuf_vertex>\n}`;\nexport const logFragment = `\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4(0.0,0.0,0.0,0.0);\n}`;\n/*\n  This shader is from the THREE's SpriteMaterial.\n  We need to turn the backing plane into a Sprite\n  (make it always face the camera) if \"transfrom\"\n  is false.\n*/\nexport const spriteVertex = `\n#include <common>\n#include <logdepthbuf_pars_vertex>\n\nvoid main() {\n  vec2 center = vec2(0., 1.);\n  float rotation = 0.0;\n  \n  // This is somewhat arbitrary, but it seems to work well\n  // Need to figure out how to derive this dynamically if it even matters\n  float size = 0.03;\n\n  vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n  vec2 scale = vec2(\n    length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) ),\n    length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) )\n  );\n\n  bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n  if ( isPerspective ) scale *= - mvPosition.z;\n\n  vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;\n  vec2 rotatedPosition;\n  rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n  rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n  mvPosition.xy += rotatedPosition;\n\n  gl_Position = projectionMatrix * mvPosition;\n  #include <logdepthbuf_vertex>\n}`;\n", null, null, null, null, null, null, "import { REVISION } from 'three';\n// REVISION can be '{number}' or '{number}dev'\nexport const revision = Number.parseInt(REVISION.replace('dev', ''));\n", null, null, "import { revision } from '../../lib/revision';\nexport const vertexShader = /* glsl */ `\nvarying vec2 vUv;\nvarying vec2 vPos;\nvoid main () {\n  gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);\n  vUv = uv;\n  vPos = position.xy;\n}\n`;\nexport const fragmentShader = /* glsl */ `\n// Majority from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\nvarying vec2 vUv;\nvarying vec2 vPos;\nuniform vec2 scale;\nuniform vec2 imageBounds;\nuniform float resolution;\nuniform vec3 color;\nuniform sampler2D map;\nuniform sampler2D colorProccessingTexture;\nuniform float radius;\nuniform float zoom;\nuniform float alphaThreshold;\nuniform float alphaSmoothing;\nuniform float brightness;\nuniform float contrast;\nuniform float monochromeStrength;\nuniform vec3 monochromeColor;\nuniform float negative;\nuniform vec3 hsl;\nuniform float grayscale;\nuniform float opacity;\nuniform int colorProcessingEnabled;\nuniform int colorProcessingTextureOverride;\n\n#define PI 3.14159265;\n\nvec2 aspect(vec2 size) {\n  return size / min(size.x, size.y);\n}\n\n// from https://iquilezles.org/articles/distfunctions\nfloat udRoundBox(vec2 p, vec2 b, float r) {\n  return length(max(abs(p) - b + r, 0.0)) - r;\n}\n\nfloat hueToRgb(float p, float q, float t) {\n  if (t < 0.0f)\n    t += 1.0f;\n  if (t > 1.0f)\n    t -= 1.0f;\n  if (t < 1.0f / 6.0f)\n    return p + (q - p) * 6.0f * t;\n  if (t < 1.0f / 2.0f)\n    return q;\n  if (t < 2.0f / 3.0f)\n    return p + (q - p) * (2.0f / 3.0f - t) * 6.0f;\n  return p;\n}\n\nvec3 rgbToHsl(vec3 color) {\n  float max = max(max(color.r, color.g), color.b);\n  float min = min(min(color.r, color.g), color.b);\n  float h, s, l = (max + min) / 2.0f;\n\n  if (max == min) {\n    h = s = 0.0f;\n  } else {\n    float d = max - min;\n    s = l > 0.5f ? d / (2.0f - max - min) : d / (max + min);\n    if (max == color.r) {\n      h = (color.g - color.b) / d + (color.g < color.b ? 6.0f : 0.0f);\n    } else if (max == color.g) {\n      h = (color.b - color.r) / d + 2.0f;\n    } else if (max == color.b) {\n      h = (color.r - color.g) / d + 4.0f;\n    }\n    h /= 6.0f;\n  }\n\n  return vec3(h, s, l);\n}\n\nvec3 hslToRgb(vec3 hsl) {\n  float h = hsl.x;\n  float s = hsl.y;\n  float l = hsl.z;\n\n  float r, g, b;\n\n  if (s == 0.0f) {\n    r = g = b = l;\n  } else {\n    float q = l < 0.5f ? l * (1.0f + s) : l + s - l * s;\n    float p = 2.0f * l - q;\n    r = hueToRgb(p, q, h + 1.0f / 3.0f);\n    g = hueToRgb(p, q, h);\n    b = hueToRgb(p, q, h - 1.0f / 3.0f);\n  }\n\n  return vec3(r, g, b);\n}\n\nvec3 monochrome(float x, vec3 col) {\n  return col * exp(4.0 * x - 1.0);\n}\n\nvoid processColors (inout vec4 colors) {\n\tvec4 strength = vec4(1.0);\n\n\tif (colorProcessingTextureOverride == 1) {\n\t\tstrength = texture2D(colorProccessingTexture, vUv);\n\n\t\tfloat smoothedAlpha = smoothstep(1.0 - alphaThreshold - alphaSmoothing, 1.0 - alphaThreshold, strength.a + 0.0001);\n\t\tcolors.a *= smoothedAlpha;\n\n\t\tif (gl_FragColor.a == 0.0) {\n\t\t\tdiscard;\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// BRIGHTNESS\n\tcolors.rgb = max(colors.rgb + brightness, 0.0);\n\n\t// CONTRAST\n  colors.rgb = max(((colors.rgb - 0.5) * max(contrast + 1.0, 0.0)) + 0.5, 0.0);\n\n\t// HSL\n\tvec3 hslColor = rgbToHsl(colors.rgb);\n\thslColor.x = mod(hslColor.x + hsl.x * strength.r ,1.0);\n\thslColor.y *= (1.0 + hsl.y * strength.g);\n\thslColor.z += hsl.z * strength.b;\n\tcolors.rgb = max(hslToRgb(hslColor), vec3(0.0));\n\n\t// MONOCHROME\n\tcolors.rgb = mix(colors.rgb, monochrome(hslColor.z, monochromeColor), monochromeStrength);\n}\n\nvoid main() {\n  vec2 s = aspect(scale);\n  vec2 i = aspect(imageBounds);\n  float rs = s.x / s.y;\n  float ri = i.x / i.y;\n  vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n  vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n  vec2 uv = vUv * s / new + offset;\n  vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\n\n  vec2 res = vec2(scale * resolution);\n  vec2 halfRes = 0.5 * res;\n  float b = udRoundBox(vUv.xy * res - halfRes, halfRes, resolution * radius);\n  vec3 a = mix(vec3(1.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), smoothstep(0.0, 1.0, b));\n\n\tgl_FragColor = texture2D(map, zUv) * vec4(color, opacity * a);\n\n\tif (colorProcessingEnabled == 1) {\n\t  processColors(gl_FragColor);\n\t}\n\n\tif (gl_FragColor.a == 0.0) {\n\t  discard;\n\t}\n\n  #include <tonemapping_fragment>\n  #include <${revision >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n\tgl_FragColor.rgb = mix(gl_FragColor.rgb, vec3(1.0) - gl_FragColor.rgb, negative);\n}\n`;\n", null, "// Credits to Evan Wallace https://madebyevan.com/shaders/grid/\nimport { revision } from '../../lib/revision';\nexport const vertexShader = /*glsl*/ `\n  varying vec3 localPosition;\n  varying vec4 worldPosition;\n\n  uniform vec3 worldCamProjPosition;\n\tuniform vec3 worldPlanePosition;\n\tuniform float fadeDistance;\n\tuniform bool infiniteGrid;\n\tuniform bool followCamera;\n\n\tuniform int coord0;\n\tuniform int coord1;\n\tuniform int coord2;\n\n\tvoid main() {\n\t\tlocalPosition = vec3(\n\t\t  position[coord0],\n\t\t\tposition[coord1],\n\t\t\tposition[coord2]\n\t\t);\n\n\t\tif (infiniteGrid) {\n\t\t  localPosition *= 1.0 + fadeDistance;\n\t\t}\n\n\t\tworldPosition = modelMatrix * vec4(localPosition, 1.0);\n\t\tif (followCamera) {\n\t\t  worldPosition.xyz += (worldCamProjPosition - worldPlanePosition);\n      localPosition = (inverse(modelMatrix) * worldPosition).xyz;\n\t\t}\n\n\t\tgl_Position = projectionMatrix * viewMatrix * worldPosition;\n\t}\n`;\nexport const fragmentShader = /*glsl*/ `\n  #define PI 3.141592653589793\n\n\tvarying vec3 localPosition;\n\tvarying vec4 worldPosition;\n\n\tuniform vec3 worldCamProjPosition;\n\tuniform float cellSize;\n\tuniform float sectionSize;\n\tuniform vec3 cellColor;\n\tuniform vec3 sectionColor;\n\tuniform float fadeDistance;\n\tuniform float fadeStrength;\n\tuniform float cellThickness;\n\tuniform float sectionThickness;\n\tuniform vec3 backgroundColor;\n\tuniform float backgroundOpacity;\n\n\tuniform bool infiniteGrid;\n\n\tuniform int coord0;\n\tuniform int coord1;\n\tuniform int coord2;\n\n\t// 0 - default; 1 - lines; 2 - circles; 3 - polar\n\tuniform int gridType;\n\n  // lineGrid coord for lines\n\tuniform int lineGridCoord;\n\n\t// circlegrid max radius\n\tuniform float circleGridMaxRadius;\n\n\t// polar grid dividers\n\tuniform float polarCellDividers;\n\tuniform float polarSectionDividers;\n\n\tfloat getSquareGrid(float size, float thickness, vec3 localPos) {\n\t\tvec2 coord = localPos.xy / size;\n\n\t\tvec2 grid = abs(fract(coord - 0.5) - 0.5) / fwidth(coord);\n\t\tfloat line = min(grid.x, grid.y) + 1.0 - thickness;\n\n\t\treturn 1.0 - min(line, 1.0);\n\t}\n\n\tfloat getLinesGrid(float size, float thickness, vec3 localPos) {\n\t\tfloat coord = localPos[lineGridCoord] / size;\n\t\tfloat line = abs(fract(coord - 0.5) - 0.5) / fwidth(coord) - thickness * 0.2;\n\n\t\treturn 1.0 - min(line, 1.0);\n\t}\n\n\tfloat getCirclesGrid(float size, float thickness, vec3 localPos) {\n\t\tfloat coord = length(localPos.xy) / size;\n\t\tfloat line = abs(fract(coord - 0.5) - 0.5) / fwidth(coord) - thickness * 0.2;\n\n\t\tif (!infiniteGrid && circleGridMaxRadius > 0. && coord > circleGridMaxRadius + thickness * 0.05) {\n\t\t  discard;\n\t\t}\n\n\t\treturn 1.0 - min(line, 1.0);\n\t}\n\n\tfloat getPolarGrid(float size, float thickness, float polarDividers, vec3 localPos) {\n\t\tfloat rad = length(localPos.xy) / size;\n\t\tvec2 coord = vec2(rad, atan(localPos.x, localPos.y) * polarDividers / PI) ;\n\n\t\tvec2 wrapped = vec2(coord.x, fract(coord.y / (2.0 * polarDividers)) * (2.0 * polarDividers));\n\t\tvec2 coordWidth = fwidth(coord);\n\t\tvec2 wrappedWidth = fwidth(wrapped);\n\t\tvec2 width = (coord.y < -polarDividers * 0.5 || coord.y > polarDividers * 0.5 ? wrappedWidth : coordWidth) * (1.+thickness*0.25);\n\n\t\t// Compute anti-aliased world-space grid lines\n\t\tvec2 grid = abs(fract(coord - 0.5) - 0.5) / width;\n\t\tfloat line = min(grid.x, grid.y);\n\nif (!infiniteGrid && circleGridMaxRadius > 0.0 && rad > circleGridMaxRadius + thickness * 0.05) {\n\t\t  discard;\n\t\t}\n\n\t\treturn 1.0 - min(line, 1.0);\n\t}\n\n\tvoid main() {\n\t\tfloat g1 = 0.0;\n\t\tfloat g2 = 0.0;\n\n\t\tvec3 localPos = vec3(localPosition[coord0], localPosition[coord1], localPosition[coord2]);\n\n\t\tif (gridType == 0) {\n\t\t\tg1 = getSquareGrid(cellSize, cellThickness, localPos);\n\t\t\tg2 = getSquareGrid(sectionSize, sectionThickness, localPos);\n\n\t\t} else if (gridType == 1) {\n\t\t\tg1 = getLinesGrid(cellSize, cellThickness, localPos);\n\t\t\tg2 = getLinesGrid(sectionSize, sectionThickness, localPos);\n\n\t\t} else if (gridType == 2) {\n\t\t\tg1 = getCirclesGrid(cellSize, cellThickness, localPos);\n\t\t\tg2 = getCirclesGrid(sectionSize, sectionThickness, localPos);\n\n\t\t} else if (gridType == 3) {\n\t\t\tg1 = getPolarGrid(cellSize, cellThickness, polarCellDividers, localPos);\n\t\t\tg2 = getPolarGrid(sectionSize, sectionThickness, polarSectionDividers, localPos);\n\t\t}\n\n\t\tfloat dist = distance(worldCamProjPosition, worldPosition.xyz);\n\t\tfloat d = 1.0 - min(dist / fadeDistance, 1.0);\n\t\tfloat fadeFactor = pow(d, fadeStrength) * 0.95;\n\n\t\tvec3 color = mix(cellColor, sectionColor, min(1.0, sectionThickness * g2));\n\n\t\tif (backgroundOpacity > 0.0) {\n\t\t\tfloat linesAlpha = clamp((g1 + g2) * fadeFactor, 0.0,1.0);\n\t\t\tvec3 finalColor = mix(backgroundColor, color, linesAlpha);\n\t\t\tfloat blendedAlpha = max(linesAlpha, backgroundOpacity * fadeFactor);\n\t\t\tgl_FragColor = vec4(finalColor, blendedAlpha);\n\n\t\t} else {\n\t\t\tgl_FragColor = vec4(color, (g1 + g2) * pow(d, fadeStrength));\n\t\t\tgl_FragColor.a = mix(0.75 * gl_FragColor.a, gl_FragColor.a, g2);\n\t\t}\n\n\t\tif (gl_FragColor.a <= 0.0) {\n\t\t  discard;\n\t\t}\n\n\t\t#include <tonemapping_fragment>\n\t\t#include <${revision < 154 ? 'encodings_fragment' : 'colorspace_fragment'}>\n\t}\n`;\n", null, null, "import { useThrelteUserContext } from '@threlte/core';\nimport { writable } from 'svelte/store';\n/**\n * ### `useControlsContext`\n *\n * This hook is used to register the `OrbitControls` or `TrackballControls instance\n * with the `ControlsContext`. We're using this context to enable and disable the\n * controls when the user is interacting with the TransformControls.\n */\nexport const useControlsContext = () => {\n    return useThrelteUserContext('threlte-controls', {\n        orbitControls: writable(undefined),\n        trackballControls: writable(undefined)\n    });\n};\n", null, null, null, "import { getContext, setContext } from 'svelte';\nimport { currentWritable } from '@threlte/core';\nconst getContextId = (instancedMeshId) => `threlte-instanced-mesh-${instancedMeshId}`;\nexport const createApi = (instancedMesh, instancedMeshId) => {\n    const api = {\n        instancedMesh: currentWritable(instancedMesh),\n        addInstance(instance) {\n            api.instances.update((arr) => {\n                arr.push(instance);\n                return arr;\n            });\n        },\n        removeInstance(instance) {\n            api.instances.update((arr) => {\n                const index = arr.indexOf(instance);\n                if (index > -1)\n                    arr.splice(index, 1);\n                return arr;\n            });\n        },\n        instances: currentWritable([])\n    };\n    setContext(getContextId(instancedMeshId), api);\n    return api;\n};\nexport const useApi = (instancedMeshId) => {\n    const context = getContext(getContextId(instancedMeshId));\n    if (!context)\n        throw new Error(`No <InstancedMesh> component found for id ${instancedMeshId}`);\n    return context;\n};\n", null, null, "import { isInstanceOf } from '@threlte/core';\nimport { Color, FrontSide, Group, Matrix4, Mesh } from 'three';\nconst _instanceLocalMatrix = new Matrix4();\nconst _instanceWorldMatrix = new Matrix4();\nconst _instanceIntersects = [];\nconst _mesh = new Mesh();\nexport class PositionMesh extends Group {\n    color;\n    instancedMesh;\n    instances;\n    constructor(instancedMesh, instances) {\n        super();\n        this.color = new Color('white');\n        this.instancedMesh = instancedMesh;\n        this.instances = instances;\n    }\n    // This will allow the virtual instance have bounds\n    get geometry() {\n        return this.instancedMesh.current?.geometry;\n    }\n    // And this will allow the virtual instance to receive events\n    raycast(raycaster, intersects) {\n        const parent = this.instancedMesh.current;\n        if (parent === undefined)\n            return;\n        if (parent.geometry === undefined || parent.material === undefined)\n            return;\n        _mesh.geometry = parent.geometry;\n        const matrixWorld = parent.matrixWorld;\n        const instanceId = this.instances.current.indexOf(this);\n        // If the instance wasn't found or exceeds the parents draw range, bail out\n        if (instanceId === -1 || instanceId > parent.count)\n            return;\n        // calculate the world matrix for each instance\n        parent.getMatrixAt(instanceId, _instanceLocalMatrix);\n        _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix);\n        // the mesh represents this single instance\n        _mesh.matrixWorld = _instanceWorldMatrix;\n        // raycast side according to instance material\n        if (isInstanceOf(parent.material, 'Material')) {\n            _mesh.material.side = parent.material.side;\n        }\n        else {\n            _mesh.material.side = parent.material[0]?.side ?? FrontSide;\n        }\n        _mesh.raycast(raycaster, _instanceIntersects);\n        // process the result of raycast\n        for (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n            const intersect = _instanceIntersects[i];\n            intersect.instanceId = instanceId;\n            intersect.object = this;\n            intersects.push(intersect);\n        }\n        _instanceIntersects.length = 0;\n    }\n}\n", "import { getContext, setContext } from 'svelte';\nconst key = Symbol('threlte-instance-id');\nexport const createInstanceIdContext = (uuid) => {\n    setContext(key, uuid);\n};\nexport const useInstanceId = () => {\n    return getContext(key) ?? 'default';\n};\n", null, null, null, null, null, "import { revision } from '../../lib/revision';\nexport const fragmentShader = `\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n\nuniform float useDash;\nuniform float dashArray;\nuniform float dashOffset;\nuniform float dashRatio;\nuniform sampler2D alphaMap;\nuniform float useAlphaMap;\n\nvarying vec2 vUV;\nvarying vec4 vColor;\nvarying float vCounters;\n\nvec4 CustomLinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\n\nvoid main()\t{\n\t#include <logdepthbuf_fragment>\n\t#include <${revision < 154 ? 'encodings_fragment' : 'colorspace_fragment'}>\n\n\tvec4 c = vColor;\n\n\tif( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV ).r;\n\n\tif( useDash == 1. ){\n\t\t\tc.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));\n\t}\n\n\tgl_FragColor = CustomLinearTosRGB(c);\n}\n`;\n", "import { ShaderChunk } from 'three';\nexport const vertexShader = `\n    #include <common>\n    ${ShaderChunk.logdepthbuf_pars_vertex}\n    ${ShaderChunk.fog_pars_vertex}\n\n    attribute vec3 previous;\n    attribute vec3 next;\n    attribute float side;\n    attribute float width;\n    attribute float counters;\n\n    uniform vec2 resolution;\n    uniform float lineWidth;\n    uniform vec3 color;\n    uniform float opacity;\n    uniform float sizeAttenuation;\n    uniform float scaleDown;\n\n    varying vec2 vUV;\n    varying vec4 vColor;\n    varying float vCounters;\n\n    vec2 intoScreen(vec4 i) {\n        return resolution * (0.5 * i.xy / i.w + 0.5);\n    }\n\n    void main() {\n        float aspect = resolution.y / resolution.x;\n\n        mat4 m = projectionMatrix * modelViewMatrix;\n\n        vec4 currentClip = m * vec4( position, 1.0 );\n        vec4 prevClip = m * vec4( previous, 1.0 );\n        vec4 nextClip = m * vec4( next, 1.0 );\n\n        vec4 currentNormed = currentClip / currentClip.w;\n        vec4 prevNormed = prevClip / prevClip.w;\n        vec4 nextNormed = nextClip / nextClip.w;\n\n        vec2 currentScreen = intoScreen(currentNormed);\n        vec2 prevScreen = intoScreen(prevNormed);\n        vec2 nextScreen = intoScreen(nextNormed);\n\n        float actualWidth = lineWidth * width;\n\n        vec2 dir;\n        if(nextScreen == currentScreen) {\n            dir = normalize( currentScreen - prevScreen );\n        } else if(prevScreen == currentScreen) {\n            dir = normalize( nextScreen - currentScreen );\n        } else {\n            vec2 inDir = currentScreen - prevScreen;\n            vec2 outDir = nextScreen - currentScreen;\n            vec2 fullDir = nextScreen - prevScreen;\n\n            if(length(fullDir) > 0.0) {\n                dir = normalize(fullDir);\n            } else if(length(inDir) > 0.0){\n                dir = normalize(inDir);\n            } else {\n                dir = normalize(outDir);\n            }\n        }\n\n        vec2 normal = vec2(-dir.y, dir.x);\n\n        if(sizeAttenuation != 0.0) {\n            normal /= currentClip.w;\n            normal *= min(resolution.x, resolution.y);\n        }\n\n        if (scaleDown > 0.0) {\n            float dist = length(nextNormed - prevNormed);\n            normal *= smoothstep(0.0, scaleDown, dist);\n        }\n\n        vec2 offsetInScreen = actualWidth * normal * side * 0.5;\n\n        vec2 withOffsetScreen = currentScreen + offsetInScreen;\n        vec3 withOffsetNormed = vec3((2.0 * withOffsetScreen/resolution - 1.0), currentNormed.z);\n\n        vCounters = counters;\n        vColor = vec4( color, opacity );\n        vUV = uv;\n\n        gl_Position = currentClip.w * vec4(withOffsetNormed, 1.0);\n\n        ${ShaderChunk.logdepthbuf_vertex}\n        ${ShaderChunk.fog_vertex}\n    }\n`;\n", null, null, null, null, "import { injectPlugin, isInstanceOf } from '@threlte/core';\nimport { onDestroy, onMount } from 'svelte';\nexport const useMaterials = () => {\n    let setupCallback = undefined;\n    const allMaterials = new Set();\n    const isSupportedMaterial = (material) => {\n        return (isInstanceOf(material, 'MeshStandardMaterial') || isInstanceOf(material, 'MeshPhongMaterial'));\n    };\n    const addMaterial = (material) => {\n        if (allMaterials.has(material))\n            return;\n        allMaterials.add(material);\n        setupCallback?.(material);\n    };\n    const extractMaterials = (ref) => {\n        // first check if it's a material\n        if (isSupportedMaterial(ref)) {\n            addMaterial(ref);\n        }\n        // then check if it's a mesh\n        else if (isInstanceOf(ref, 'Mesh')) {\n            if (Array.isArray(ref.material)) {\n                ref.material.forEach((material) => {\n                    if (isSupportedMaterial(material)) {\n                        addMaterial(material);\n                    }\n                });\n            }\n            else {\n                if (isSupportedMaterial(ref.material)) {\n                    addMaterial(ref.material);\n                }\n            }\n        }\n    };\n    /**\n     * Callback to set up a material for CSM\n     */\n    const onNewMaterial = (callback) => {\n        setupCallback = callback;\n    };\n    /**\n     * Material Management Plugin\n     *\n     * This plugin extracts materials from meshes and adds them to the materials\n     * queue. It will not listen to prop or ref changes.\n     */\n    injectPlugin('csm', (args) => {\n        // we need to wait for mounting since otherwise the meshes probably have\n        // default materials applied\n        onMount(() => {\n            extractMaterials(args.ref);\n        });\n    });\n    onDestroy(() => (setupCallback = undefined));\n    return { onNewMaterial, allMaterials };\n};\n", null, null, "import { ShaderChunk } from 'three';\nexport const fragmentShader = `\nuniform vec3 glowColor;\nuniform float falloffAmount;\nuniform float glowSharpness;\nuniform float glowInternalRadius;\n\nvarying vec3 vPosition;\nvarying vec3 vNormal;\n\nvoid main()\n{\n\t// Normal\n\tvec3 normal = normalize(vNormal);\n\tif(!gl_FrontFacing)\n\t\t\tnormal *= - 1.0;\n\tvec3 viewDirection = normalize(cameraPosition - vPosition);\n\tfloat fresnel = dot(viewDirection, normal);\n\tfresnel = pow(fresnel, glowInternalRadius + 0.1);\n\tfloat falloff = smoothstep(0., falloffAmount, fresnel);\n\tfloat fakeGlow = fresnel;\n\tfakeGlow += fresnel * glowSharpness;\n\tfakeGlow *= falloff;\n\tgl_FragColor = vec4(clamp(glowColor * fresnel, 0., 1.0), clamp(fakeGlow, 0., 1.0));\n\n\t${ShaderChunk.tonemapping_fragment}\n\t${ShaderChunk.colorspace_fragment}\n}`;\n", "export const vertexShader = `varying vec3 vPosition;\nvarying vec3 vNormal;\n\nvoid main() {\n\tvec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\tgl_Position = projectionMatrix * viewMatrix * modelPosition;\n\tvec4 modelNormal = modelMatrix * vec4(normal, 0.0);\n\tvPosition = modelPosition.xyz;\n\tvNormal = modelNormal.xyz;\n}`;\n", null, "import { ShaderChunk } from 'three';\nexport const fragmentShader = `\nuniform sampler2D pointTexture;\nuniform float fade;\nuniform float opacity;\n\nvarying vec3 vColor;\nvoid main() {\n\tfloat pointOpacity = 1.0;\n\tif (fade == 1.0) {\n\t\tfloat d = distance(gl_PointCoord, vec2(0.5, 0.5));\n\t\tpointOpacity = 1.0 / (1.0 + exp(16.0 * (d - 0.25)));\n\t}\n\tgl_FragColor = vec4(vColor, pointOpacity * opacity);\n\n\t${ShaderChunk.tonemapping_fragment}\n\t${ShaderChunk.colorspace_fragment}\n}`;\n", "export const vertexShader = `uniform float time;\nattribute float size;\nvarying vec3 vColor;\nvoid main() {\n\tvColor = color;\n\tvec4 mvPosition = modelViewMatrix * vec4(position, 0.5);\n\tgl_PointSize = size * (30.0 / -mvPosition.z) * (3.0 + sin(time + 100.0));\n\tgl_Position = projectionMatrix * mvPosition;\n}`;\n", null, "import { ShaderChunk } from 'three';\nimport { shaderStructs, shaderIntersectFunction } from 'three-mesh-bvh';\nexport const fragmentShader = `#define ENVMAP_TYPE_CUBE_UV\nprecision highp isampler2D;\nprecision highp usampler2D;\nvarying vec3 vWorldPosition;\nvarying vec3 vNormal;\nvarying mat4 vModelMatrixInverse;\n\n#ifdef USE_INSTANCING_COLOR\n\tvarying vec3 vInstanceColor;\n#endif\n\n#ifdef ENVMAP_TYPE_CUBEM\n\tuniform samplerCube envMap;\n#else\n\tuniform sampler2D envMap;\n#endif\n\nuniform float bounces;\n${shaderStructs}\n${shaderIntersectFunction}\nuniform BVH bvh;\nuniform float ior;\nuniform bool correctMips;\nuniform vec2 resolution;\nuniform float fresnel;\nuniform mat4 modelMatrix;\nuniform mat4 projectionMatrixInverse;\nuniform mat4 viewMatrixInverse;\nuniform float aberrationStrength;\nuniform vec3 color;\n\nfloat fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\n\treturn pow( 1.0 + dot( viewDirection, worldNormal), 10.0 );\n}\n\nvec3 totalInternalReflection(vec3 ro, vec3 rd, vec3 normal, float ior, mat4 modelMatrixInverse) {\n\tvec3 rayOrigin = ro;\n\tvec3 rayDirection = rd;\n\trayDirection = refract(rayDirection, normal, 1.0 / ior);\n\trayOrigin = vWorldPosition + rayDirection * 0.001;\n\trayOrigin = (modelMatrixInverse * vec4(rayOrigin, 1.0)).xyz;\n\trayDirection = normalize((modelMatrixInverse * vec4(rayDirection, 0.0)).xyz);\n\tfor(float i = 0.0; i < bounces; i++) {\n\t\tuvec4 faceIndices = uvec4( 0u );\n\t\tvec3 faceNormal = vec3( 0.0, 0.0, 1.0 );\n\t\tvec3 barycoord = vec3( 0.0 );\n\t\tfloat side = 1.0;\n\t\tfloat dist = 0.0;\n\t\tbvhIntersectFirstHit( bvh, rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist );\n\t\tvec3 hitPos = rayOrigin + rayDirection * max(dist - 0.001, 0.0);\n\t\tvec3 tempDir = refract(rayDirection, faceNormal, ior);\n\t\tif (length(tempDir) != 0.0) {\n\t\t\trayDirection = tempDir;\n\t\t\tbreak;\n\t\t}\n\t\trayDirection = reflect(rayDirection, faceNormal);\n\t\trayOrigin = hitPos + rayDirection * 0.01;\n\t}\n\trayDirection = normalize((modelMatrix * vec4(rayDirection, 0.0)).xyz);\n\treturn rayDirection;\n}\n\n#include <common>\n#include <cube_uv_reflection_fragment>\n\n#ifdef ENVMAP_TYPE_CUBEM\n\tvec4 textureGradient(samplerCube envMap, vec3 rayDirection, vec3 directionCamPerfect) {\n\t\treturn textureGrad(envMap, rayDirection, dFdx(correctMips ? directionCamPerfect: rayDirection), dFdy(correctMips ? directionCamPerfect: rayDirection));\n\t}\n#else\n\tvec4 textureGradient(sampler2D envMap, vec3 rayDirection, vec3 directionCamPerfect) {\n\t\tvec2 uvv = equirectUv( rayDirection );\n\t\tvec2 smoothUv = equirectUv( directionCamPerfect );\n\t\treturn textureGrad(envMap, uvv, dFdx(correctMips ? smoothUv : uvv), dFdy(correctMips ? smoothUv : uvv));\n\t}\n#endif\n\nvoid main() {\n\tvec2 uv = gl_FragCoord.xy / resolution;\n\tvec3 directionCamPerfect = (projectionMatrixInverse * vec4(uv * 2.0 - 1.0, 0.0, 1.0)).xyz;\n\tdirectionCamPerfect = (viewMatrixInverse * vec4(directionCamPerfect, 0.0)).xyz;\n\tdirectionCamPerfect = normalize(directionCamPerfect);\n\tvec3 normal = vNormal;\n\tvec3 rayOrigin = cameraPosition;\n\tvec3 rayDirection = normalize(vWorldPosition - cameraPosition);\n\tvec3 finalColor;\n\t#ifdef CHROMATIC_ABERRATIONS\n\t\tvec3 rayDirectionG = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), vModelMatrixInverse);\n\t\t#ifdef FAST_CHROMA\n\t\t\tvec3 rayDirectionR = normalize(rayDirectionG + 1.0 * vec3(aberrationStrength / 2.0));\n\t\t\tvec3 rayDirectionB = normalize(rayDirectionG - 1.0 * vec3(aberrationStrength / 2.0));\n\t\t#else\n\t\t\tvec3 rayDirectionR = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 - aberrationStrength), 1.0), vModelMatrixInverse);\n\t\t\tvec3 rayDirectionB = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 + aberrationStrength), 1.0), vModelMatrixInverse);\n\t\t#endif\n\t\tfloat finalColorR = textureGradient(envMap, rayDirectionR, directionCamPerfect).r;\n\t\tfloat finalColorG = textureGradient(envMap, rayDirectionG, directionCamPerfect).g;\n\t\tfloat finalColorB = textureGradient(envMap, rayDirectionB, directionCamPerfect).b;\n\t\tfinalColor = vec3(finalColorR, finalColorG, finalColorB);\n\t#else\n\t\trayDirection = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), vModelMatrixInverse);\n\t\tfinalColor = textureGradient(envMap, rayDirection, directionCamPerfect).rgb;\n\t#endif\n\n\tfinalColor *= color;\n\t#ifdef USE_INSTANCING_COLOR\n\t\tfinalColor *= vInstanceColor;\n\t#endif\n\n\tvec3 viewDirection = normalize(vWorldPosition - cameraPosition);\n\tfloat nFresnel = fresnelFunc(viewDirection, normal) * fresnel;\n\tgl_FragColor = vec4(mix(finalColor, vec3(1.0), nFresnel), 1.0);\n\t${ShaderChunk.tonemapping_fragment}\n\t${ShaderChunk.colorspace_fragment}\n}`;\n", "export const vertexShader = `uniform mat4 viewMatrixInverse;\n\nvarying vec3 vWorldPosition;\nvarying vec3 vNormal;\nvarying mat4 vModelMatrixInverse;\n\n#ifdef USE_INSTANCING_COLOR\n\tvarying vec3 vInstanceColor;\n#endif\n\nvoid main() {\n\tvec4 transformedNormal = vec4(normal, 0.0);\n\tvec4 transformedPosition = vec4(position, 1.0);\n\t#ifdef USE_INSTANCING\n\t\ttransformedNormal = instanceMatrix * transformedNormal;\n\t\ttransformedPosition = instanceMatrix * transformedPosition;\n\t#endif\n\n\t#ifdef USE_INSTANCING\n\t\tvModelMatrixInverse = inverse(modelMatrix * instanceMatrix);\n\t#else\n\t\tvModelMatrixInverse = inverse(modelMatrix);\n\t#endif\n\n\t#ifdef USE_INSTANCING_COLOR\n\t\tvInstanceColor = instanceColor.rgb;\n\t#endif\n\n\tvWorldPosition = (modelMatrix * transformedPosition).xyz;\n\tvNormal = normalize((viewMatrixInverse * vec4(normalMatrix * transformedNormal.xyz, 0.0)).xyz);\n\tgl_Position = projectionMatrix * viewMatrix * modelMatrix * transformedPosition;\n}`;\n", null, null, null, "import { revision } from '../../lib/revision';\nexport const vertexShader = `\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n\nuniform float thickness;\nuniform bool screenspace;\nuniform vec2 size;\n\nvoid main() {\n  #if defined (USE_SKINNING)\n    #include <beginnormal_vertex>\n    #include <morphnormal_vertex>\n    #include <skinbase_vertex>\n    #include <skinnormal_vertex>\n    #include <defaultnormal_vertex>\n  #endif\n  #include <begin_vertex>\n  #include <morphtarget_vertex>\n  #include <skinning_vertex>\n  #include <project_vertex>\n  vec4 tNormal = vec4(normal, 0.0);\n  vec4 tPosition = vec4(transformed, 1.0);\n  #ifdef USE_INSTANCING\n    tNormal = instanceMatrix * tNormal;\n    tPosition = instanceMatrix * tPosition;\n  #endif\n  if (!screenspace) {\n    vec3 newPosition = tPosition.xyz + tNormal.xyz * thickness;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n  } else {\n    vec4 clipPosition = projectionMatrix * modelViewMatrix * tPosition;\n    vec4 clipNormal = projectionMatrix * modelViewMatrix * tNormal;\n    vec2 offset = normalize(clipNormal.xy) * thickness / size * clipPosition.w * 2.0;\n    clipPosition.xy += offset;\n    gl_Position = clipPosition;\n  }\n}`;\nexport const fragmentShader = `\nuniform vec3 color;\nuniform float opacity;\nvoid main(){\n  gl_FragColor = vec4(color, opacity);\n  #include <tonemapping_fragment>\n  #include <${revision >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n}\n`;\n", null, null, null, null, "export const fragmentShader = `void main() {\n\tgl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n\tdiscard;\n}\n`;\n", "export const vertexShader = `void main() {}`;\n", null, null, null, "import { Color } from 'three';\n/**\n * applies `gradient` to `context`\n */\nexport const applyGradient = (context, gradient) => {\n    context.save();\n    let lastFillStyle = context.fillStyle;\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n    context.fillStyle = lastFillStyle;\n    context.restore();\n};\nconst color = new Color();\n/**\n * adds each `stop` of `stops` to the gradient\n */\nexport const addStops = (gradient, stops = []) => {\n    for (const stop of stops) {\n        gradient.addColorStop(stop.offset, color.set(stop.color).getStyle());\n    }\n    return gradient;\n};\n", null, null, null, "import { watch } from '@threlte/core';\nimport { getContext, onDestroy, onMount } from 'svelte';\nimport { writable } from 'svelte/store';\nimport { suspenseContextIdentifier } from './context';\n/**\n * ### `onReveal`\n *\n * This hook is used to trigger a callback when the component is revealed (i.e.,\n * no longer suspended). It works within the boundaries of the <Suspense>\n * component and mimics Svelte's lifecycle method `onMount` If there is no\n * <Suspense> component, the callback will be executed immediately as the\n * component will never suspend.\n *\n * Note: This hook triggers with Svelte's `onMount` and can be used in its place\n * for triggering animations, etc., within the boundaries of a <Suspense>\n * component. Just like `onMount` you may return a cleanup function to be\n * executed when the component is unmounted or when the component is suspended\n * again.\n *\n * @param {() => void} callback - The function to be executed when the component\n * is revealed.\n */\nexport const onReveal = (callback) => {\n    const ctx = getContext(suspenseContextIdentifier);\n    let cleanup;\n    const mounted = writable(false);\n    onMount(() => {\n        // If there is no context, we are not in a suspense context, so we can just call the callback.\n        if (!ctx)\n            cleanup = callback();\n        mounted.set(true);\n    });\n    // Return if there is no context.\n    if (!ctx) {\n        onDestroy(() => cleanup?.());\n        return;\n    }\n    watch([ctx.suspended, mounted], ([suspended, mounted]) => {\n        if (mounted && !suspended)\n            cleanup = callback();\n        return () => cleanup?.();\n    });\n};\n", "import { watch } from '@threlte/core';\nimport { getContext, onMount } from 'svelte';\nimport { writable } from 'svelte/store';\nimport { suspenseContextIdentifier } from './context';\n/**\n * ### `onSuspend`\n *\n * This hook is used to trigger a callback when the component is suspended. It\n * works within the boundaries of the <Suspense> component. If there is no\n * <Suspense> component, the callback will not be executed, as the component\n * will never suspend.\n *\n * @param {() => void} callback - The function to be executed when the component\n * is suspended.\n */\nexport const onSuspend = (callback) => {\n    const ctx = getContext(suspenseContextIdentifier);\n    // If there's no Suspense boundary, we can just return, the component will never suspend.\n    if (!ctx)\n        return;\n    const mounted = writable(false);\n    onMount(() => {\n        mounted.set(true);\n    });\n    watch([ctx.suspended, mounted], ([suspended, mounted]) => {\n        if (mounted && suspended)\n            callback();\n    });\n};\n", "import { currentWritable, useThrelteUserContext } from '@threlte/core';\nimport { derived } from 'svelte/store';\nconst createPortalContext = () => {\n    const ctx = {\n        portals: currentWritable(new Map()),\n        addPortal(object, id) {\n            ctx.portals.update((portals) => {\n                if (portals.has(id)) {\n                    console.warn(`Portal with id ${id} already exists. Skipping portal creation.`);\n                }\n                else {\n                    portals.set(id, object);\n                }\n                return portals;\n            });\n        },\n        removePortal(id) {\n            ctx.portals.update((portals) => {\n                if (!portals.has(id)) {\n                    console.warn(`Portal with id ${id} does not exist. Skipping portal removal.`);\n                }\n                else {\n                    portals.delete(id);\n                }\n                return portals;\n            });\n        },\n        getPortal(id) {\n            return derived(ctx.portals, (portals) => portals.get(id));\n        },\n        hasPortal(id) {\n            return ctx.portals.current.has(id);\n        }\n    };\n    return ctx;\n};\nexport const usePortalContext = () => {\n    return useThrelteUserContext('threlte-portals', createPortalContext());\n};\n", null, null, null, "import { useThrelteUserContext } from '@threlte/core';\nconst audioListeners = new Map();\nconst audioCtx = {\n    audioListeners,\n    addAudioListener: (listener, id = 'default') => {\n        if (audioListeners.has(id)) {\n            console.warn(`An AudioListener with the id \"${id}\" has already been added, aborting.`);\n            return;\n        }\n        audioListeners.set(id, listener);\n    },\n    removeAudioListener: (id = 'default') => {\n        if (!audioListeners.has(id)) {\n            console.warn(`No AudioListener with the id \"${id}\" found, aborting.`);\n            return;\n        }\n        audioListeners.delete(id);\n    },\n    getAudioListener: (id = 'default') => {\n        if (!audioListeners.has(id)) {\n            console.warn(`No AudioListener with the id \"${id}\" found, aborting.`);\n            return;\n        }\n        return audioListeners.get(id);\n    }\n};\nexport function useThrelteAudio() {\n    return useThrelteUserContext('threlte-audio', audioCtx);\n}\n", null, "import { currentWritable, useLoader, watch } from '@threlte/core';\nimport { onDestroy } from 'svelte';\nimport { AudioLoader } from 'three';\n/**\n * This hook handles basic audio functionality.\n * It’s used by the <Audio> and <PositionalAudio> components.\n */\nexport const useAudio = (audio, props = {}) => {\n    const loaded = currentWritable(false);\n    const autoplay = currentWritable(false);\n    const shouldPlay = currentWritable(false);\n    let audioDestroyed = false;\n    const loader = useLoader(AudioLoader);\n    const setSrc = async (source) => {\n        loaded.set(false);\n        try {\n            if (typeof source === 'string') {\n                const audioBuffer = await loader.load(source, {\n                    onProgress(event) {\n                        props.onprogress?.(event);\n                    }\n                });\n                audio.setBuffer(audioBuffer);\n            }\n            else if (source instanceof AudioBuffer) {\n                audio.setBuffer(source);\n            }\n            else if (source instanceof HTMLMediaElement) {\n                audio.setMediaElementSource(source);\n            }\n            else if (source instanceof AudioBufferSourceNode) {\n                audio.setNodeSource(source);\n            }\n            else if (source instanceof MediaStream) {\n                audio.setMediaStreamSource(source);\n            }\n            loaded.set(true);\n            audio.buffer ? props.onload?.(audio.buffer) : props.onload?.();\n        }\n        catch (error) {\n            props.onerror?.(error);\n        }\n    };\n    const setVolume = (volume) => {\n        audio.setVolume(volume ?? 1);\n    };\n    const setPlaybackRate = (playbackRate) => {\n        audio.setPlaybackRate(playbackRate ?? 1);\n    };\n    const play = async (delay) => {\n        // source is not loaded yet, so we should play it after it's loaded\n        if (!loaded.current) {\n            shouldPlay.set(true);\n            return;\n        }\n        if (audio.context.state !== 'running') {\n            await audio.context.resume();\n            if (audioDestroyed) {\n                return;\n            }\n        }\n        return audio.play(delay);\n    };\n    const pause = () => {\n        return audio.pause();\n    };\n    const stop = () => {\n        if (!audio.source)\n            return audio;\n        return audio.stop();\n    };\n    const setAutoPlay = (value) => {\n        autoplay.set(value ?? false);\n    };\n    const setDetune = (value) => {\n        if (audio.source && audio.detune) {\n            audio.setDetune(value ?? 0);\n        }\n    };\n    const setLoop = (value) => {\n        audio.setLoop(value ?? false);\n    };\n    watch([loaded, autoplay, shouldPlay], ([loaded, autoplay, shouldPlay]) => {\n        if (!loaded) {\n            if (audio.isPlaying)\n                stop();\n            return;\n        }\n        if (autoplay || shouldPlay) {\n            play();\n        }\n    });\n    onDestroy(() => {\n        try {\n            audioDestroyed = true;\n            stop();\n        }\n        catch (error) {\n            console.warn('Error while destroying audio', error);\n        }\n    });\n    return {\n        setVolume,\n        setSrc,\n        setPlaybackRate,\n        setAutoPlay,\n        setDetune,\n        setLoop,\n        play,\n        pause,\n        stop\n    };\n};\n", null, null, "import { useThrelteAudio } from './useThrelteAudio';\nexport function useAudioListener(callbackOrId, id) {\n    const { getAudioListener } = useThrelteAudio();\n    if (typeof callbackOrId === 'function') {\n        const listener = getAudioListener(id);\n        if (!listener)\n            throw new Error('No AudioListener found.');\n        return callbackOrId({\n            listener,\n            context: listener.context\n        });\n    }\n    const listener = getAudioListener(callbackOrId);\n    if (!listener)\n        throw new Error('No AudioListener found.');\n    return {\n        listener,\n        context: listener.context\n    };\n}\n", "import { useThrelte, watch } from '@threlte/core';\nexport const getDefaultComputeFunction = (target) => {\n    const { camera } = useThrelte();\n    let width = target.current.clientWidth;\n    let height = target.current.clientHeight;\n    const resizeObserver = new ResizeObserver(([entry]) => {\n        width = entry.contentRect.width;\n        height = entry.contentRect.height;\n    });\n    watch(target, (target) => {\n        if (target)\n            resizeObserver.observe(target);\n        return () => {\n            if (target)\n                resizeObserver.unobserve(target);\n        };\n    });\n    return (event, state) => {\n        state.pointer.update((pointer) => {\n            pointer.set((event.offsetX / width) * 2 - 1, -(event.offsetY / height) * 2 + 1);\n            return pointer;\n        });\n        state.raycaster.setFromCamera(state.pointer.current, camera.current);\n    };\n};\n", "import { currentWritable, useThrelte } from '@threlte/core';\nimport { getContext, setContext } from 'svelte';\nimport { Vector2, Raycaster } from 'three';\nimport { getDefaultComputeFunction } from './defaults';\nconst contextKey = Symbol('interactivity-context');\nexport const getInteractivityContext = () => {\n    return getContext(contextKey);\n};\nexport const setInteractivityContext = (options) => {\n    const target = currentWritable(options?.target ?? useThrelte().renderer.domElement?.parentElement);\n    const context = {\n        enabled: currentWritable(options?.enabled ?? true),\n        pointer: currentWritable(new Vector2()),\n        pointerOverTarget: currentWritable(false),\n        lastEvent: undefined,\n        raycaster: new Raycaster(),\n        initialClick: [0, 0],\n        initialHits: [],\n        hovered: new Map(),\n        interactiveObjects: [],\n        target,\n        handlers: new WeakMap(),\n        compute: options?.compute ?? getDefaultComputeFunction(target),\n        filter: options?.filter,\n        addInteractiveObject: (object, events) => {\n            // check if the object is already in the list\n            if (context.interactiveObjects.indexOf(object) > -1) {\n                return;\n            }\n            context.handlers.set(object, events);\n            context.interactiveObjects.push(object);\n        },\n        removeInteractiveObject: (object) => {\n            const index = context.interactiveObjects.indexOf(object);\n            context.interactiveObjects.splice(index, 1);\n            context.handlers.delete(object);\n        }\n    };\n    setContext(contextKey, context);\n    return context;\n};\nexport const useInteractivity = () => {\n    const context = getInteractivityContext();\n    if (!context) {\n        throw new Error('No interactivity context found. Did you forget to implement interactivity()?');\n    }\n    return context;\n};\n", "import { injectPlugin, isInstanceOf, observe } from '@threlte/core';\nimport { useInteractivity } from './context';\nexport const interactivityEventNames = [\n    'onclick',\n    'oncontextmenu',\n    'ondblclick',\n    'onwheel',\n    'onpointerup',\n    'onpointerdown',\n    'onpointerover',\n    'onpointerout',\n    'onpointerenter',\n    'onpointerleave',\n    'onpointermove',\n    'onpointermissed'\n];\nexport const injectInteractivityPlugin = () => {\n    injectPlugin('interactivity', (args) => {\n        if (!isInstanceOf(args.ref, 'Object3D'))\n            return;\n        const hasEventHandlers = Object.entries(args.props).some(([key, value]) => {\n            return value !== undefined && interactivityEventNames.includes(key);\n        });\n        if (!hasEventHandlers)\n            return;\n        const { addInteractiveObject, removeInteractiveObject } = useInteractivity();\n        observe.pre(() => [args.ref], ([ref]) => {\n            addInteractiveObject(ref, args.props);\n            return () => {\n                removeInteractiveObject(ref);\n            };\n        });\n        return {\n            pluginProps: interactivityEventNames\n        };\n    });\n};\n", "import { watch } from '@threlte/core';\nimport { useInteractivity } from './context';\nfunction getIntersectionId(event) {\n    return `${(event.eventObject || event.object).uuid}/${event.index}${event.instanceId}`;\n}\nconst DOM_EVENTS = [\n    ['click', false],\n    ['contextmenu', false],\n    ['dblclick', false],\n    ['wheel', false],\n    ['pointerdown', true],\n    ['pointerup', true],\n    ['pointerleave', true],\n    ['pointerenter', true],\n    ['pointermove', true],\n    ['pointercancel', true]\n];\nexport const setupInteractivity = (context) => {\n    const { handlers } = useInteractivity();\n    const calculateDistance = (event) => {\n        const dx = event.offsetX - context.initialClick[0];\n        const dy = event.offsetY - context.initialClick[1];\n        return Math.round(Math.hypot(dx, dy));\n    };\n    const cancelPointer = (intersections) => {\n        for (const hoveredObj of context.hovered.values()) {\n            // When no objects were hit or the the hovered object wasn't found underneath the cursor\n            // we call pointerout and delete the object from the hovered elements map\n            if (intersections.length === 0 ||\n                !intersections.some((hit) => {\n                    return (hit.object === hoveredObj.object &&\n                        hit.index === hoveredObj.index &&\n                        hit.instanceId === hoveredObj.instanceId);\n                })) {\n                const { eventObject } = hoveredObj;\n                context.hovered.delete(getIntersectionId(hoveredObj));\n                const events = handlers.get(eventObject);\n                if (events) {\n                    // Clear out intersects, they are outdated by now\n                    const data = { ...hoveredObj, intersections };\n                    events.onpointerout?.(data);\n                    events.onpointerleave?.(data);\n                }\n            }\n        }\n    };\n    const getHits = () => {\n        if (!context.enabled.current)\n            return [];\n        const intersections = [];\n        const hits = context.raycaster.intersectObjects(context.interactiveObjects, true);\n        const filtered = context.filter === undefined ? hits : context.filter(hits, context);\n        // Bubble up the events, find the event source (eventObject)\n        for (const hit of filtered) {\n            let eventObject = hit.object;\n            // Bubble event up\n            while (eventObject) {\n                if (handlers.has(eventObject))\n                    intersections.push({ ...hit, eventObject });\n                eventObject = eventObject.parent;\n            }\n        }\n        return intersections;\n    };\n    const pointerMissed = (event, objects) => {\n        for (const object of objects) {\n            handlers.get(object)?.onpointermissed?.(event);\n        }\n    };\n    const getEventHandler = (name) => {\n        // Deal with cancelation\n        if (name === 'pointerleave' || name === 'pointercancel') {\n            return () => {\n                context.pointerOverTarget.set(false);\n                cancelPointer([]);\n            };\n        }\n        if (name === 'pointerenter') {\n            return () => {\n                context.pointerOverTarget.set(true);\n            };\n        }\n        return (event) => {\n            const isPointerMove = name === 'pointermove';\n            const isClickEvent = name === 'click' || name === 'contextmenu' || name === 'dblclick';\n            /**\n             * Will set up the raycaster. The default implementation will use the\n             * mouse position on the renderers domElement.\n             */\n            context.compute(event, context);\n            const hits = getHits();\n            const delta = isClickEvent ? calculateDistance(event) : 0;\n            // Save initial coordinates on pointer-down\n            if (name === 'pointerdown') {\n                context.initialClick = [event.offsetX, event.offsetY];\n                context.initialHits = hits.map((hit) => hit.eventObject);\n            }\n            // If a click yields no results, pass it back to the user as a miss\n            // Missed events have to come first in order to establish user-land side-effect clean up\n            if (isClickEvent && hits.length === 0) {\n                if (delta <= 2) {\n                    pointerMissed(event, context.interactiveObjects);\n                }\n            }\n            // Take care of unhover\n            if (isPointerMove)\n                cancelPointer(hits);\n            let stopped = false;\n            // loop through all hits and dispatch events\n            dispatchEvents: for (const hit of hits) {\n                const intersectionEvent = {\n                    stopped,\n                    ...hit,\n                    intersections: hits,\n                    stopPropagation() {\n                        stopped = true;\n                        intersectionEvent.stopped = true;\n                        if (context.hovered.size > 0 &&\n                            Array.from(context.hovered.values()).some((i) => i.eventObject === hit.eventObject)) {\n                            // Objects cannot flush out higher up objects that have already caught the event\n                            const higher = hits.slice(0, hits.indexOf(hit));\n                            cancelPointer([...higher, hit]);\n                        }\n                    },\n                    camera: context.raycaster.camera,\n                    delta,\n                    nativeEvent: event,\n                    pointer: context.pointer.current,\n                    ray: context.raycaster.ray\n                };\n                const events = handlers.get(hit.eventObject);\n                if (!events)\n                    return;\n                if (isPointerMove) {\n                    // Move event ...\n                    if (events.onpointerover ||\n                        events.onpointerenter ||\n                        events.onpointerout ||\n                        events.onpointerleave) {\n                        const id = getIntersectionId(intersectionEvent);\n                        const hoveredItem = context.hovered.get(id);\n                        if (!hoveredItem) {\n                            // If the object wasn't previously hovered, book it and call its handler\n                            context.hovered.set(id, intersectionEvent);\n                            events.onpointerover?.(intersectionEvent);\n                            events.onpointerenter?.(intersectionEvent);\n                        }\n                        else if (hoveredItem.stopped) {\n                            // If the object was previously hovered and stopped, we shouldn't allow other items to proceed\n                            intersectionEvent.stopPropagation();\n                        }\n                    }\n                    // Call pointer move\n                    events.onpointermove?.(intersectionEvent);\n                }\n                else {\n                    // All other events\n                    if (events[`on${name}`]) {\n                        if (!isClickEvent || context.initialHits.includes(hit.eventObject)) {\n                            // Missed events have to come first\n                            pointerMissed(event, context.interactiveObjects.filter((object) => !context.initialHits.includes(object)));\n                            // Call the event\n                            events[`on${name}`]?.(intersectionEvent);\n                        }\n                    }\n                    else {\n                        // \"Real\" click event\n                        if (isClickEvent && context.initialHits.includes(hit.eventObject)) {\n                            pointerMissed(event, context.interactiveObjects.filter((object) => !context.initialHits.includes(object)));\n                        }\n                    }\n                }\n                if (stopped)\n                    break dispatchEvents;\n            }\n        };\n    };\n    const disconnect = (target) => {\n        DOM_EVENTS.forEach(([eventName]) => {\n            target.removeEventListener(eventName, getEventHandler(eventName));\n        });\n    };\n    const connect = (target) => {\n        DOM_EVENTS.forEach(([eventName, passive]) => {\n            target.addEventListener(eventName, getEventHandler(eventName), { passive });\n        });\n    };\n    watch(context.target, (target) => {\n        if (target)\n            connect(target);\n        return () => {\n            if (target)\n                disconnect(target);\n        };\n    });\n};\n", "import { injectInteractivityPlugin } from './plugin.svelte';\nimport { setupInteractivity } from './setupInteractivity';\nimport { setInteractivityContext } from './context';\nconst interactivity = (options) => {\n    const context = setInteractivityContext(options);\n    injectInteractivityPlugin();\n    setupInteractivity(context);\n    return context;\n};\n// exports\nexport { useInteractivity } from './context';\nexport { interactivity };\n", "import { injectPlugin, isInstanceOf, observe } from '@threlte/core';\nimport { getContext, setContext } from 'svelte';\nexport const injectLayersPlugin = () => {\n    injectPlugin('layers', (args) => {\n        if (!isInstanceOf(args.ref, 'Object3D'))\n            return;\n        const ctx = getContext('threlte-layers-context');\n        const mergedLayers = $derived(args.props.layers ?? ctx?.layers);\n        const mergedCtx = $derived(mergedLayers ? { layers: mergedLayers } : undefined);\n        setContext('threlte-layers-context', mergedCtx);\n        const applyLayers = (ref, layers) => {\n            if (layers === 'all') {\n                ref.layers.enableAll();\n            }\n            else if (layers === 'none') {\n                ref.layers.disableAll();\n            }\n            else if (Array.isArray(layers)) {\n                for (let index = 0; index < 32; index += 1) {\n                    const layerIndex = index;\n                    const enabled = layers.includes(layerIndex);\n                    if (enabled) {\n                        ref.layers.enable(index);\n                    }\n                    else {\n                        ref.layers.disable(index);\n                    }\n                }\n            }\n            else if (layers !== undefined) {\n                ref.layers.set(layers);\n            }\n        };\n        observe.pre(() => [args.ref, mergedLayers], ([ref, layers]) => {\n            if (!isInstanceOf(ref, 'Object3D'))\n                return;\n            applyLayers(ref, layers);\n        });\n        return {\n            pluginProps: ['layers']\n        };\n    });\n};\n", "import { setContext } from 'svelte';\nimport { injectLayersPlugin } from './plugin.svelte';\n/**\n * ### `layers`\n *\n * This plugin allows you to set the layers of an object.\n *\n * ```svelte\n * <T.Mesh layers={4}>\n * ```\n *\n * In contrast to the default `layers` prop that is available on all\n * `THREE.Object3D` instances, this plugin enables the inheritance of the\n * `layers` prop.\n *\n * ```svelte\n * <T.Group layers={4}>\n * \t<!-- This mesh will be on layer 4 -->\n * \t<T.Mesh />\n * </T.Group>\n * ```\n *\n *\n * @param options\n */\nconst layers = (options) => {\n    setContext('threlte-layers-context', {\n        layers: options?.defaultLayers ?? 0\n    });\n    injectLayersPlugin();\n};\nexport { layers };\n", null, null, "import { createSpritesheet, parseAseprite } from '@threejs-kit/instanced-sprite-mesh';\nimport { getContext } from 'svelte';\nimport { NearestFilter, RepeatWrapping, SRGBColorSpace, TextureLoader } from 'three';\n// todo move some of the types upstream to @threejs-kit\nexport const useInstancedSprite = () => {\n    return getContext('instanced-sprite-ctx');\n};\nconst from = (meta) => {\n    const builder = createSpritesheet();\n    const animationsList = [];\n    for (const { url, type, width, height, animations } of meta) {\n        for (const animation of animations) {\n            animationsList.push(animation.name);\n        }\n        builder.add(url, {\n            type,\n            width,\n            height\n        }, animations);\n    }\n    const spritesheet = builder.build();\n    const typedHook = (useInstancedSprite);\n    return { spritesheet, useInstancedSprite: typedHook };\n};\n// todo refactor. Loader reuse, awaits, colorspace stuff\nconst fromAseprite = (asepriteDataUrl, spriteImageUrl) => {\n    const texture = new TextureLoader().load(spriteImageUrl, (t) => {\n        t.matrixAutoUpdate = false;\n        t.generateMipmaps = false;\n        t.premultiplyAlpha = false;\n        t.wrapS = texture.wrapT = RepeatWrapping;\n        t.magFilter = texture.minFilter = NearestFilter;\n        t.colorSpace = SRGBColorSpace;\n        t.needsUpdate = true;\n    });\n    const parse = async () => {\n        const res = await fetch(asepriteDataUrl);\n        const json = await res.json();\n        return { spritesheet: parseAseprite(json), texture };\n    };\n    return parse();\n};\nexport const buildSpritesheet = { from, fromAseprite };\n"],
  "mappings": "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",
  "names": ["get", "loader", "url", "root", "derived", "gltf", "actualRoot", "action", "actions", "_width", "_height", "set", "derived", "promises", "errors", "finalized", "state", "derived", "texture", "frameWidth", "frameHeight", "start", "color", "element", "oldPosition", "key", "onLoad", "onError", "root", "_a", "color", "size", "key", "v", "color", "blur", "revision", "revision", "$$anchor", "texture", "revision", "color", "vertexShader", "fragmentShader", "revision", "width", "height", "shape", "radius", "orbitControls", "isDragging", "useAutoPauseOrbitControls", "trackballControls", "key", "points", "fragmentShader", "revision", "vertexShader", "color", "fragmentShader", "vertexShader", "init", "align", "sphere", "defaultCamera", "camera", "enabled", "color", "fragmentShader", "vertexShader", "fragmentShader", "vertexShader", "fragmentShader", "vertexShader", "color", "position", "vertexShader", "fragmentShader", "fragmentShader", "vertexShader", "color", "fragmentShader", "vertexShader", "aberrationStrength", "fastChroma", "vertexShader", "fragmentShader", "revision", "color", "vertexShader", "fragmentShader", "ref", "distance", "hysteresis", "fragmentShader", "vertexShader", "child", "gradient", "gradient", "suspended", "errors", "mounted", "mounted", "derived", "children", "target", "child", "proxy", "parent", "_a", "loaded", "autoplay", "shouldPlay", "listener", "target", "state", "key", "layers", "position", "position"]
}
