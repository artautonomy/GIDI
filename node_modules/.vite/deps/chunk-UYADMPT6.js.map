{
  "version": 3,
  "sources": ["../../@threejs-kit/instanced-sprite-mesh/dist/index.js"],
  "sourcesContent": ["var ye = Object.defineProperty;\r\nvar we = (t, n, e) => n in t ? ye(t, n, { enumerable: !0, configurable: !0, writable: !0, value: e }) : t[n] = e;\r\nvar _ = (t, n, e) => (we(t, typeof n != \"symbol\" ? n + \"\" : n, e), e);\r\nimport { ShaderLib as _e, UniformsUtils as Me, MeshDepthMaterial as Te, RGBADepthPacking as De, MeshDistanceMaterial as Ae, ShaderChunk as be, InstancedMesh as Ue, MeshBasicMaterial as Se, InstancedBufferAttribute as Pe, DataTexture as Q, RGBAFormat as L, FloatType as C, NearestFilter as U, ClampToEdgeWrapping as k, RepeatWrapping as q, Vector2 as $, Vector4 as fe, BufferGeometry as me, BufferAttribute as R, Scene as Fe, Camera as Re, Mesh as Ve, PlaneGeometry as he, ShaderMaterial as Ce, WebGLRenderTarget as Ie, REVISION as te, ImageLoader as Oe, Texture as Ee, CanvasTexture as ne, SRGBColorSpace as ie } from \"three\";\r\nconst pe = /\\bvoid\\s+main\\s*\\(\\s*\\)\\s*{/g;\r\nfunction j(t) {\r\n  const n = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\r\n  function e(i, r) {\r\n    let s = be[r];\r\n    return s ? j(s) : i;\r\n  }\r\n  return t.replace(n, e);\r\n}\r\nconst T = [];\r\nfor (let t = 0; t < 256; t++)\r\n  T[t] = (t < 16 ? \"0\" : \"\") + t.toString(16);\r\nfunction $e() {\r\n  const t = Math.random() * 4294967295 | 0, n = Math.random() * 4294967295 | 0, e = Math.random() * 4294967295 | 0, i = Math.random() * 4294967295 | 0;\r\n  return (T[t & 255] + T[t >> 8 & 255] + T[t >> 16 & 255] + T[t >> 24 & 255] + \"-\" + T[n & 255] + T[n >> 8 & 255] + \"-\" + T[n >> 16 & 15 | 64] + T[n >> 24 & 255] + \"-\" + T[e & 63 | 128] + T[e >> 8 & 255] + \"-\" + T[e >> 16 & 255] + T[e >> 24 & 255] + T[i & 255] + T[i >> 8 & 255] + T[i >> 16 & 255] + T[i >> 24 & 255]).toUpperCase();\r\n}\r\nconst P = Object.assign || function() {\r\n  let t = arguments[0];\r\n  for (let n = 1, e = arguments.length; n < e; n++) {\r\n    let i = arguments[n];\r\n    if (i)\r\n      for (let r in i)\r\n        Object.prototype.hasOwnProperty.call(i, r) && (t[r] = i[r]);\r\n  }\r\n  return t;\r\n}, ze = Date.now(), re = /* @__PURE__ */ new WeakMap(), se = /* @__PURE__ */ new Map();\r\nlet He = 1e10;\r\nfunction N(t, n) {\r\n  const e = Ge(n);\r\n  let i = re.get(t);\r\n  if (i || re.set(t, i = /* @__PURE__ */ Object.create(null)), i[e])\r\n    return new i[e]();\r\n  const r = `_onBeforeCompile${e}`, s = function(o, m) {\r\n    t.onBeforeCompile.call(this, o, m);\r\n    const g = this.customProgramCacheKey() + \"|\" + o.vertexShader + \"|\" + o.fragmentShader;\r\n    let h = se[g];\r\n    if (!h) {\r\n      const x = Le(this, o, n, e);\r\n      h = se[g] = x;\r\n    }\r\n    o.vertexShader = h.vertexShader, o.fragmentShader = h.fragmentShader, P(o.uniforms, this.uniforms), n.timeUniform && (o.uniforms[n.timeUniform] = {\r\n      get value() {\r\n        return Date.now() - ze;\r\n      }\r\n    }), this[r] && this[r](o);\r\n  }, a = function() {\r\n    return l(n.chained ? t : t.clone());\r\n  }, l = function(o) {\r\n    const m = Object.create(o, u);\r\n    return Object.defineProperty(m, \"baseMaterial\", { value: t }), Object.defineProperty(m, \"id\", { value: He++ }), m.uuid = $e(), m.uniforms = P({}, o.uniforms, n.uniforms), m.defines = P({}, o.defines, n.defines), m.defines[`TROIKA_DERIVED_MATERIAL_${e}`] = \"\", m.extensions = P({}, o.extensions, n.extensions), m._listeners = void 0, m;\r\n  }, u = {\r\n    constructor: { value: a },\r\n    isDerivedMaterial: { value: !0 },\r\n    customProgramCacheKey: {\r\n      writable: !0,\r\n      configurable: !0,\r\n      value: function() {\r\n        return t.customProgramCacheKey() + \"|\" + e;\r\n      }\r\n    },\r\n    onBeforeCompile: {\r\n      get() {\r\n        return s;\r\n      },\r\n      set(o) {\r\n        this[r] = o;\r\n      }\r\n    },\r\n    copy: {\r\n      writable: !0,\r\n      configurable: !0,\r\n      value: function(o) {\r\n        return t.copy.call(this, o), !t.isShaderMaterial && !t.isDerivedMaterial && (P(this.extensions, o.extensions), P(this.defines, o.defines), P(this.uniforms, Me.clone(o.uniforms))), this;\r\n      }\r\n    },\r\n    clone: {\r\n      writable: !0,\r\n      configurable: !0,\r\n      value: function() {\r\n        const o = new t.constructor();\r\n        return l(o).copy(this);\r\n      }\r\n    },\r\n    /**\r\n     * Utility to get a MeshDepthMaterial that will honor this derived material's vertex\r\n     * transformations and discarded fragments.\r\n     */\r\n    getDepthMaterial: {\r\n      writable: !0,\r\n      configurable: !0,\r\n      value: function() {\r\n        let o = this._depthMaterial;\r\n        return o || (o = this._depthMaterial = N(\r\n          t.isDerivedMaterial ? t.getDepthMaterial() : new Te({ depthPacking: De }),\r\n          n\r\n        ), o.defines.IS_DEPTH_MATERIAL = \"\", o.uniforms = this.uniforms), o;\r\n      }\r\n    },\r\n    /**\r\n     * Utility to get a MeshDistanceMaterial that will honor this derived material's vertex\r\n     * transformations and discarded fragments.\r\n     */\r\n    getDistanceMaterial: {\r\n      writable: !0,\r\n      configurable: !0,\r\n      value: function() {\r\n        let o = this._distanceMaterial;\r\n        return o || (o = this._distanceMaterial = N(\r\n          t.isDerivedMaterial ? t.getDistanceMaterial() : new Ae(),\r\n          n\r\n        ), o.defines.IS_DISTANCE_MATERIAL = \"\", o.uniforms = this.uniforms), o;\r\n      }\r\n    },\r\n    dispose: {\r\n      writable: !0,\r\n      configurable: !0,\r\n      value() {\r\n        const { _depthMaterial: o, _distanceMaterial: m } = this;\r\n        o && o.dispose(), m && m.dispose(), t.dispose.call(this);\r\n      }\r\n    }\r\n  };\r\n  return i[e] = a, new a();\r\n}\r\nfunction Le(t, { vertexShader: n, fragmentShader: e }, i, r) {\r\n  let {\r\n    vertexDefs: s,\r\n    vertexMainIntro: a,\r\n    vertexMainOutro: l,\r\n    vertexTransform: u,\r\n    fragmentDefs: o,\r\n    fragmentMainIntro: m,\r\n    fragmentMainOutro: g,\r\n    fragmentColorTransform: h,\r\n    customRewriter: x,\r\n    timeUniform: f\r\n  } = i;\r\n  if (s = s || \"\", a = a || \"\", l = l || \"\", o = o || \"\", m = m || \"\", g = g || \"\", (u || x) && (n = j(n)), (h || x) && (e = e.replace(\r\n    /^[ \\t]*#include <((?:tonemapping|encodings|fog|premultiplied_alpha|dithering)_fragment)>/gm,\r\n    `\r\n//!BEGIN_POST_CHUNK $1\r\n$&\r\n//!END_POST_CHUNK\r\n`\r\n  ), e = j(e)), x) {\r\n    let c = x({ vertexShader: n, fragmentShader: e });\r\n    n = c.vertexShader, e = c.fragmentShader;\r\n  }\r\n  if (h) {\r\n    let c = [];\r\n    e = e.replace(\r\n      /^\\/\\/!BEGIN_POST_CHUNK[^]+?^\\/\\/!END_POST_CHUNK/gm,\r\n      // [^]+? = non-greedy match of any chars including newlines\r\n      (p) => (c.push(p), \"\")\r\n    ), g = `${h}\r\n${c.join(`\r\n`)}\r\n${g}`;\r\n  }\r\n  if (f) {\r\n    const c = `\r\nuniform float ${f};\r\n`;\r\n    s = c + s, o = c + o;\r\n  }\r\n  return u && (n = `vec3 troika_position_${r};\r\nvec3 troika_normal_${r};\r\nvec2 troika_uv_${r};\r\n${n}\r\n`, s = `${s}\r\nvoid troikaVertexTransform${r}(inout vec3 position, inout vec3 normal, inout vec2 uv) {\r\n  ${u}\r\n}\r\n`, a = `\r\ntroika_position_${r} = vec3(position);\r\ntroika_normal_${r} = vec3(normal);\r\ntroika_uv_${r} = vec2(uv);\r\ntroikaVertexTransform${r}(troika_position_${r}, troika_normal_${r}, troika_uv_${r});\r\n${a}\r\n`, n = n.replace(/\\b(position|normal|uv)\\b/g, (c, p, w, y) => /\\battribute\\s+vec[23]\\s+$/.test(y.substr(0, w)) ? p : `troika_${p}_${r}`), t.map && t.map.channel > 0 || (n = n.replace(/\\bMAP_UV\\b/g, `troika_uv_${r}`))), n = ae(n, r, s, a, l), e = ae(e, r, o, m, g), {\r\n    vertexShader: n,\r\n    fragmentShader: e\r\n  };\r\n}\r\nfunction ae(t, n, e, i, r) {\r\n  return (i || r || e) && (t = t.replace(\r\n    pe,\r\n    `\r\n${e}\r\nvoid troikaOrigMain${n}() {`\r\n  ), t += `\r\nvoid main() {\r\n  ${i}\r\n  troikaOrigMain${n}();\r\n  ${r}\r\n}`), t;\r\n}\r\nfunction ke(t, n) {\r\n  return t === \"uniforms\" ? void 0 : typeof n == \"function\" ? n.toString() : n;\r\n}\r\nlet Ne = 0;\r\nconst oe = /* @__PURE__ */ new Map();\r\nfunction Ge(t) {\r\n  const n = JSON.stringify(t, ke);\r\n  let e = oe.get(n);\r\n  return e == null && oe.set(n, e = ++Ne), e;\r\n}\r\nconst Ze = {\r\n  MeshDepthMaterial: \"depth\",\r\n  MeshDistanceMaterial: \"distanceRGBA\",\r\n  MeshNormalMaterial: \"normal\",\r\n  MeshBasicMaterial: \"basic\",\r\n  MeshLambertMaterial: \"lambert\",\r\n  MeshPhongMaterial: \"phong\",\r\n  MeshToonMaterial: \"toon\",\r\n  MeshStandardMaterial: \"physical\",\r\n  MeshPhysicalMaterial: \"physical\",\r\n  MeshMatcapMaterial: \"matcap\",\r\n  LineBasicMaterial: \"basic\",\r\n  LineDashedMaterial: \"dashed\",\r\n  PointsMaterial: \"points\",\r\n  ShadowMaterial: \"shadow\",\r\n  SpriteMaterial: \"sprite\"\r\n};\r\nfunction Be(t) {\r\n  let n = Ze[t.type];\r\n  return n ? _e[n] : t;\r\n}\r\nfunction le(t) {\r\n  let n = /\\buniform\\s+(int|float|vec[234]|mat[34])\\s+([A-Za-z_][\\w]*)/g, e = /* @__PURE__ */ Object.create(null), i;\r\n  for (; (i = n.exec(t)) !== null; )\r\n    e[i[2]] = i[1];\r\n  return e;\r\n}\r\nfunction Ke(t) {\r\n  let n = [], e = \"\";\r\n  const i = N(t, {\r\n    chained: !0,\r\n    customRewriter({ vertexShader: s, fragmentShader: a }) {\r\n      let l = [], u = [], o = [], m = le(s), g = le(a);\r\n      return n.forEach((h) => {\r\n        let x = m[h], f = g[h];\r\n        const c = x || f;\r\n        if (c) {\r\n          const p = new RegExp(`\\\\buniform\\\\s+${c}\\\\s+${h}\\\\s*;`, \"g\"), w = new RegExp(`\\\\b${h}\\\\b`, \"g\"), y = `troika_attr_${h}`, d = `troika_vary_${h}`;\r\n          if (l.push(`attribute ${c} ${y};`), x && (s = s.replace(p, \"\"), s = s.replace(w, y)), f) {\r\n            a = a.replace(p, \"\"), a = a.replace(w, d);\r\n            let v = `varying ${f} ${d};`;\r\n            l.push(v), o.push(v), u.push(`${d} = ${y};`);\r\n          }\r\n        }\r\n      }), s = `${l.join(`\r\n`)}\r\n${s.replace(pe, `\r\n$&\r\n${u.join(`\r\n`)}`)}`, o.length && (a = `${o.join(`\r\n`)}\r\n${a}`), { vertexShader: s, fragmentShader: a };\r\n    }\r\n  });\r\n  i.setUniformNames = function(s) {\r\n    n = s || [];\r\n    const a = n.sort().join(\"|\");\r\n    a !== e && (e = a, this.needsUpdate = !0);\r\n  };\r\n  const r = i.customProgramCacheKey();\r\n  return i.customProgramCacheKey = function() {\r\n    return r + \"|\" + e;\r\n  }, i.isInstancedUniformsMaterial = !0, i;\r\n}\r\nclass je extends Ue {\r\n  constructor(n, e, i) {\r\n    super(n, e, i), this._maxCount = i, this._instancedUniformNames = [];\r\n  }\r\n  /*\r\n   * Getter/setter for automatically wrapping the user-supplied geometry with one that will\r\n   * carry our extra InstancedBufferAttribute(s). We do the wrapping lazily on _read_ rather\r\n   * than write to avoid unnecessary wrapping on transient values.\r\n   */\r\n  get geometry() {\r\n    let n = this._derivedGeometry;\r\n    const e = this._baseGeometry;\r\n    return (!n || n.baseGeometry !== e) && (n = this._derivedGeometry = Object.create(e), n.baseGeometry = e, n.attributes = Object.create(e.attributes), e.addEventListener(\"dispose\", function() {\r\n      n.dispose();\r\n    })), n;\r\n  }\r\n  set geometry(n) {\r\n    this._baseGeometry = n;\r\n  }\r\n  /*\r\n   * Getter/setter for automatically wrapping the user-supplied material with our upgrades. We do the\r\n   * wrapping lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\r\n   */\r\n  get material() {\r\n    let n = this._derivedMaterial;\r\n    const e = this._baseMaterial || this._defaultMaterial || (this._defaultMaterial = new Se());\r\n    return (!n || n.baseMaterial !== e) && (n = this._derivedMaterial = Ke(e), e.addEventListener(\"dispose\", function i() {\r\n      e.removeEventListener(\"dispose\", i), n.dispose();\r\n    })), n.setUniformNames(this._instancedUniformNames), n;\r\n  }\r\n  set material(n) {\r\n    if (Array.isArray(n))\r\n      throw new Error(\"InstancedUniformsMesh does not support multiple materials\");\r\n    for (; n && n.isInstancedUniformsMaterial; )\r\n      n = n.baseMaterial;\r\n    this._baseMaterial = n;\r\n  }\r\n  get customDepthMaterial() {\r\n    return this.material.getDepthMaterial();\r\n  }\r\n  get customDistanceMaterial() {\r\n    return this.material.getDistanceMaterial();\r\n  }\r\n  /**\r\n   * Set the value of a shader uniform for a single instance.\r\n   * @param {string} name - the name of the shader uniform\r\n   * @param {number} index - the index of the instance to set the value for\r\n   * @param {number|Vector2|Vector3|Vector4|Color|Array|Matrix3|Matrix4|Quaternion} value - the uniform value for this instance\r\n   */\r\n  setUniformAt(n, e, i) {\r\n    const r = this.geometry.attributes, s = `troika_attr_${n}`;\r\n    let a = r[s];\r\n    if (!a) {\r\n      const l = We(this._baseMaterial, n), u = Ye(l);\r\n      if (a = r[s] = new Pe(new Float32Array(u * this._maxCount), u), l !== null)\r\n        for (let o = 0; o < this._maxCount; o++)\r\n          ue(a, o, l);\r\n      this._instancedUniformNames = [...this._instancedUniformNames, n];\r\n    }\r\n    ue(a, e, i), a.needsUpdate = !0;\r\n  }\r\n  /**\r\n   * Unset all instance-specific values for a given uniform, reverting back to the original\r\n   * uniform value for all.\r\n   * @param {string} name\r\n   */\r\n  unsetUniform(n) {\r\n    this.geometry.deleteAttribute(`troika_attr_${n}`), this._instancedUniformNames = this._instancedUniformNames.filter((e) => e !== n);\r\n  }\r\n}\r\nfunction ue(t, n, e) {\r\n  let i = t.itemSize;\r\n  i === 1 ? t.setX(n, e) : i === 2 ? t.setXY(n, e.x, e.y) : i === 3 ? e.isColor ? t.setXYZ(n, e.r, e.g, e.b) : t.setXYZ(n, e.x, e.y, e.z) : i === 4 ? t.setXYZW(n, e.x, e.y, e.z, e.w) : e.toArray ? e.toArray(t.array, n * i) : t.set(e, n * i);\r\n}\r\nfunction We(t, n) {\r\n  let e = t.uniforms;\r\n  return e && e[n] || (e = Be(t).uniforms, e && e[n]) ? e[n].value : null;\r\n}\r\nfunction Ye(t) {\r\n  return t == null ? 0 : typeof t == \"number\" ? 1 : t.isVector2 ? 2 : t.isVector3 || t.isColor ? 3 : t.isVector4 || t.isQuaternion ? 4 : t.elements ? t.elements.length : Array.isArray(t) ? t.length : 0;\r\n}\r\nconst Xe = (t, n) => {\r\n  const e = t.split(`\r\n`), i = /vMapUv|vAlphaMapUv|vNormalMapUv/g;\r\n  return e.map((s) => !s.includes(\"varying\") && !s.includes(\"uniform\") ? s.replace(i, n) : s).join(`\r\n`);\r\n}, Je = (t, n) => {\r\n  const e = {\r\n    USE_UV: \"\"\r\n  };\r\n  return n && (e.TRI_GEOMETRY = \"\"), N(t, {\r\n    defines: e,\r\n    uniforms: {\r\n      /** GPGPU animation driven data */\r\n      animationData: { value: null },\r\n      animationDataSize: { value: 0 },\r\n      /* Repeat animation in a loop */\r\n      billboarding: { value: 0 },\r\n      /** flip uvs on x */\r\n      flipX: { value: 0 },\r\n      /** flip uvs on y */\r\n      flipY: { value: 0 },\r\n      /**\r\n       * DataArrayTexture - data stored in columns. Rows are:\r\n       * 0 - Frames declaration - RGBA[x,y,w,h]\r\n       * 1 - Animation lengths RGBA[length,0,0,0]\r\n       * 2 - Animation0 - RGBA [id,duration, 0,0]\r\n       * 3 - Animation1 - RGBA [id,duration, 0,0]\r\n       * ....etc\r\n       */\r\n      spritesheetData: { value: null },\r\n      /**util for reading data texture in spritesheetData */\r\n      dataSize: { value: new $(0, 0) },\r\n      /**\r\n       * Tinting - Vector4 (enabled 0/1, H (0-3), S (0-1), V(0-1))\r\n       */\r\n      tint: { value: new fe(0, 0, 0, 0) }\r\n    },\r\n    /**\r\n     *\r\n     * VERTEX\r\n     * - billboarding\r\n     *\r\n     * */\r\n    vertexDefs: (\r\n      /*glsl*/\r\n      `\r\n    uniform float billboarding;\r\n    flat varying int vId;\r\n    `\r\n    ),\r\n    vertexMainOutro: (\r\n      /*glsl*/\r\n      `\r\n    vId = gl_InstanceID;\r\n    if(billboarding == 1.){\r\n      vec3 instancePosition = vec3(instanceMatrix[3]);\r\n      vec3 instanceScale = vec3(length(instanceMatrix[0]), length(instanceMatrix[1]), length(instanceMatrix[2]));\r\n\r\n      vec3 cameraRight_worldspace = vec3(modelViewMatrix[0][0], modelViewMatrix[1][0], modelViewMatrix[2][0]);\r\n      vec3 cameraUp_worldspace = vec3(modelViewMatrix[0][1], modelViewMatrix[1][1], modelViewMatrix[2][1]);\r\n\r\n      vec3 vertexPosition_worldspace = instancePosition\r\n        + cameraRight_worldspace * position.x * instanceScale.x\r\n        + cameraUp_worldspace * position.y * instanceScale.y;\r\n\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(vertexPosition_worldspace, 1.0);\r\n    }\r\n    `\r\n    ),\r\n    /**\r\n     *\r\n     * FRAGMENT REWRITER\r\n     *\r\n     * */\r\n    customRewriter: ({ vertexShader: r, fragmentShader: s }) => {\r\n      const a = (\r\n        /*glsl*/\r\n        `\r\n\t\t\tuniform sampler2D animationData;\r\n      uniform int animationDataSize;\r\n\t\t\tuniform sampler2D spritesheetData;\r\n      uniform float startTime;\r\n\t\t\tuniform float time;\r\n\t\t\tuniform float flipX;\r\n\t\t\tuniform float flipY;\r\n\t\t\tuniform vec2 dataSize;\r\n      uniform vec4 tint;\r\n\r\n      flat varying int vId;\r\n\t\t\t`\r\n      ), l = (\r\n        /*glsl*/\r\n        `\r\n\t\t\tvec4 readData(float col, float row) {\r\n\t\t\t\tfloat wStep = 1.f / dataSize.x;\r\n\t\t\t\tfloat wHalfStep = wStep * 0.5f;\r\n\t\t\t\tfloat hStep = 1.f / dataSize.y;\r\n\t\t\t\tfloat hHalfStep = 1.f / dataSize.y * 0.5f;\r\n\t\t\t\treturn texture2D(spritesheetData, vec2(col * wStep + wHalfStep, row * hStep + hHalfStep));\r\n\t\t\t}\r\n\r\n      vec2 zoomUV(vec2 uv, vec2 zoomCenter, float zoomFactor) {\r\n        // Shift UVs so that the zoom center is the origin\r\n        vec2 shiftedUV = uv - zoomCenter;\r\n\r\n        // Scale (zoom) the UV coordinates\r\n        shiftedUV *= zoomFactor;\r\n\r\n        // Shift back\r\n        shiftedUV += zoomCenter;\r\n\r\n        return shiftedUV;\r\n    }\r\n\t\t\t`\r\n      ), u = (\r\n        /*glsl*/\r\n        `\r\n      float y = float(vId / animationDataSize) / float(animationDataSize);\r\n      float x = mod(float(vId),float(animationDataSize)) / float(animationDataSize);\r\n\r\n      float spritesheetFrameId = texture2D(animationData, vec2(x,y)).r;\r\n\r\n\t\t\t// x,y,w,h\r\n\t\t\tvec4 frameMeta = readData(spritesheetFrameId, 0.f);\r\n\r\n\t\t\tvec2 fSize = frameMeta.zw;\r\n\t\t\tvec2 fOffset = vec2(frameMeta.xy);\r\n\r\n      vec2 transformedPlaneUv = vUv + vec2(0.,0.);\r\n\r\n      // todo  == 1. caused a flickering bug. look into Precision/interpolation?\r\n      if(flipX > 0.){\r\n        transformedPlaneUv.x = 1. - transformedPlaneUv.x;\r\n      }\r\n      if(flipY > 0.){\r\n        transformedPlaneUv.y = 1. - transformedPlaneUv.y;\r\n      }\r\n\r\n\t\t\tvec2 spriteUv = fSize * transformedPlaneUv + fOffset ;\r\n\r\n      #ifdef TRI_GEOMETRY\r\n        // Shift UVs if mesh uses triangle geometry\r\n        // TODO optimize ugly math\r\n        if(vUv.y>0.5 || vUv.x<0.25 || vUv.x>0.75){\r\n          discard;\r\n        }\r\n\r\n        vec2 zoomCenter = vec2(fSize.x * 0.5,0.) + fOffset;\r\n        float zoomFactor = 2.;\r\n        vec2 shiftedUV = spriteUv - zoomCenter;\r\n        shiftedUV *= zoomFactor;\r\n        shiftedUV += zoomCenter;\r\n        spriteUv = shiftedUV;\r\n      #endif\r\n\r\n\r\n\r\n\t\t\t`\r\n      );\r\n      return s = s.replace(\r\n        \"void main() {\",\r\n        `void main() {${u}`\r\n      ), s = `\r\n\t\t\t${a}\r\n\t\t\t${l}\r\n\t\t\t${s}\r\n\t\t\t`, s = s.replace(\r\n        \"vec4 sampledDiffuseColor = texture2D( map, vMapUv );\",\r\n        /*glsl*/\r\n        `\r\n        vec4 sampledDiffuseColor = texture2D( map, vMapUv );\r\n        if(tint.w == 1.){\r\n          vec3 hue_term = 1.0 - min(abs(vec3(tint.x) - vec3(0,2.0,1.0)), 1.0);\r\n          hue_term.x = 1.0 - dot(hue_term.yz, vec2(1));\r\n          vec3 res = vec3(dot(sampledDiffuseColor.xyz, hue_term.xyz), dot(sampledDiffuseColor.xyz, hue_term.zxy), dot(sampledDiffuseColor.xyz, hue_term.yzx));\r\n          res = mix(vec3(dot(res, vec3(0.2, 0.5, 0.3))), res, tint.y);\r\n          res = res * tint.z;\r\n\r\n          sampledDiffuseColor = vec4(res, sampledDiffuseColor.a);\r\n        }\r\n\r\n        // sampledDiffuseColor = vec4(texture2D(animationData, vUv).rgb, 1.);\r\n      `\r\n      ), s = Xe(s, \"spriteUv\"), { vertexShader: r, fragmentShader: s };\r\n    }\r\n  });\r\n}, Bt = (t) => {\r\n  const n = [], e = [], i = {}, r = [], s = t.meta.size.w, a = t.meta.size.h, l = [\r\n    t.meta.size.w,\r\n    t.meta.size.h\r\n  ];\r\n  for (const u in t.frames) {\r\n    const o = t.frames[u];\r\n    n.push([o.frame.x / s, o.frame.y / a, o.frame.w / s, o.frame.h / a]), e.push(o.duration);\r\n  }\r\n  for (const u of t.meta.frameTags) {\r\n    i[u.name] = [];\r\n    for (let o = u.from; o <= u.to; o++)\r\n      i[u.name].push([o, e[o]]);\r\n    r.push(i[u.name].length);\r\n  }\r\n  return { frames: n, animations: i, sheetSize: l, animationLengths: r };\r\n}, Qe = (t) => {\r\n  const { frames: n, animationLengths: e, animations: i } = t, r = Math.max(\r\n    n.length,\r\n    e.length,\r\n    ...Object.values(i).map((x) => x.length)\r\n  ), s = 2 + Object.values(i).length, a = n.flat().concat(new Array((r - n.length) * 4).fill(0)), l = e.map((x) => [x, 0, 0, 0]).flat().concat(new Array((r - e.length) * 4).fill(0)), u = [], o = /* @__PURE__ */ new Map();\r\n  for (let x = 0; x < Object.keys(i).length; x++) {\r\n    const f = Object.keys(i)[x];\r\n    o.set(f, x);\r\n    const c = i[f].map((p) => [...p, 0, 0]).flat().concat(new Array((r - i[f].length) * 4).fill(0));\r\n    u.push(...c);\r\n  }\r\n  const m = [\r\n    ...a,\r\n    ...l,\r\n    ...u\r\n  ], g = new Float32Array(m);\r\n  g.set(m);\r\n  const h = new Q(\r\n    g,\r\n    r,\r\n    s,\r\n    L,\r\n    C\r\n  );\r\n  return h.type = C, h.minFilter = U, h.magFilter = U, h.wrapS = k, h.wrapT = q, h.needsUpdate = !0, { dataTexture: h, dataWidth: r, dataHeight: s, animMap: o };\r\n}, qe = () => {\r\n  const t = new me(), n = new Float32Array([\r\n    // top\r\n    0,\r\n    1,\r\n    0,\r\n    // bot-left\r\n    -1,\r\n    -1,\r\n    0,\r\n    // bot-right\r\n    1,\r\n    -1,\r\n    0\r\n  ]);\r\n  t.setAttribute(\"position\", new R(n, 3));\r\n  const e = new Float32Array([\r\n    // top\r\n    0.5,\r\n    1,\r\n    // bot-left\r\n    0,\r\n    0,\r\n    // bot-right\r\n    1,\r\n    0\r\n  ]);\r\n  return t.setAttribute(\"uv\", new R(e, 2)), t.computeVertexNormals(), t;\r\n};\r\nclass et {\r\n  constructor(n, e, i) {\r\n    this.variables = [], this.currentTextureIndex = 0;\r\n    let r = C;\r\n    const s = new Fe(), a = new Re();\r\n    a.position.z = 1;\r\n    const l = {\r\n      passThruTexture: { value: null }\r\n    }, u = g(x(), l), o = new Ve(new he(2, 2), u);\r\n    s.add(o), this.setDataType = function(f) {\r\n      return r = f, this;\r\n    }, this.addVariable = function(f, c, p) {\r\n      const w = this.createShaderMaterial(c), y = {\r\n        name: f,\r\n        initialValueTexture: p,\r\n        material: w,\r\n        dependencies: null,\r\n        renderTargets: [],\r\n        wrapS: null,\r\n        wrapT: null,\r\n        minFilter: U,\r\n        magFilter: U\r\n      };\r\n      return this.variables.push(y), y;\r\n    }, this.setVariableDependencies = function(f, c) {\r\n      f.dependencies = c;\r\n    }, this.init = function() {\r\n      if (i.capabilities.isWebGL2 === !1 && i.extensions.has(\"OES_texture_float\") === !1)\r\n        return \"No OES_texture_float support for float textures.\";\r\n      if (i.capabilities.maxVertexTextures === 0)\r\n        return \"No support for vertex shader textures.\";\r\n      for (let f = 0; f < this.variables.length; f++) {\r\n        const c = this.variables[f];\r\n        c.renderTargets[0] = this.createRenderTarget(n, e, c.wrapS, c.wrapT, c.minFilter, c.magFilter), c.renderTargets[1] = this.createRenderTarget(n, e, c.wrapS, c.wrapT, c.minFilter, c.magFilter), this.renderTexture(c.initialValueTexture, c.renderTargets[0]), this.renderTexture(c.initialValueTexture, c.renderTargets[1]);\r\n        const p = c.material, w = p.uniforms;\r\n        if (c.dependencies !== null)\r\n          for (let y = 0; y < c.dependencies.length; y++) {\r\n            const d = c.dependencies[y];\r\n            if (d.name !== c.name) {\r\n              let v = !1;\r\n              for (let D = 0; D < this.variables.length; D++)\r\n                if (d.name === this.variables[D].name) {\r\n                  v = !0;\r\n                  break;\r\n                }\r\n              if (!v)\r\n                return \"Variable dependency not found. Variable=\" + c.name + \", dependency=\" + d.name;\r\n            }\r\n            w[d.name] = { value: null }, p.fragmentShader = `\r\nuniform sampler2D ` + d.name + `;\r\n` + p.fragmentShader;\r\n          }\r\n      }\r\n      return this.currentTextureIndex = 0, null;\r\n    }, this.compute = function() {\r\n      const f = this.currentTextureIndex, c = this.currentTextureIndex === 0 ? 1 : 0;\r\n      for (let p = 0, w = this.variables.length; p < w; p++) {\r\n        const y = this.variables[p];\r\n        if (y.dependencies !== null) {\r\n          const d = y.material.uniforms;\r\n          for (let v = 0, D = y.dependencies.length; v < D; v++) {\r\n            const S = y.dependencies[v];\r\n            d[S.name].value = S.renderTargets[f].texture;\r\n          }\r\n        }\r\n        this.doRenderTarget(y.material, y.renderTargets[c]);\r\n      }\r\n      this.currentTextureIndex = c;\r\n    }, this.getCurrentRenderTarget = function(f) {\r\n      return f.renderTargets[this.currentTextureIndex];\r\n    }, this.getAlternateRenderTarget = function(f) {\r\n      return f.renderTargets[this.currentTextureIndex === 0 ? 1 : 0];\r\n    }, this.dispose = function() {\r\n      o.geometry.dispose(), o.material.dispose();\r\n      const f = this.variables;\r\n      for (let c = 0; c < f.length; c++) {\r\n        const p = f[c];\r\n        p.initialValueTexture && p.initialValueTexture.dispose();\r\n        const w = p.renderTargets;\r\n        for (let y = 0; y < w.length; y++)\r\n          w[y].dispose();\r\n      }\r\n    };\r\n    function m(f) {\r\n      f.defines.resolution = \"vec2( \" + n.toFixed(1) + \", \" + e.toFixed(1) + \" )\";\r\n    }\r\n    this.addResolutionDefine = m;\r\n    function g(f, c) {\r\n      c = c || {};\r\n      const p = new Ce({\r\n        name: \"GPUComputationShader\",\r\n        uniforms: c,\r\n        vertexShader: h(),\r\n        fragmentShader: f\r\n      });\r\n      return m(p), p;\r\n    }\r\n    this.createShaderMaterial = g, this.createRenderTarget = function(f, c, p, w, y, d) {\r\n      return f = f || n, c = c || e, p = p || k, w = w || k, y = y || U, d = d || U, new Ie(f, c, {\r\n        wrapS: p,\r\n        wrapT: w,\r\n        minFilter: y,\r\n        magFilter: d,\r\n        format: L,\r\n        type: r,\r\n        depthBuffer: !1\r\n      });\r\n    }, this.createTexture = function() {\r\n      const f = new Float32Array(n * e * 4), c = new Q(f, n, e, L, C);\r\n      return c.needsUpdate = !0, c;\r\n    }, this.renderTexture = function(f, c) {\r\n      l.passThruTexture.value = f, this.doRenderTarget(u, c), l.passThruTexture.value = null;\r\n    }, this.doRenderTarget = function(f, c) {\r\n      const p = i.getRenderTarget(), w = i.xr.enabled, y = i.shadowMap.autoUpdate;\r\n      i.xr.enabled = !1, i.shadowMap.autoUpdate = !1, o.material = f, i.setRenderTarget(c), i.render(s, a), o.material = u, i.xr.enabled = w, i.shadowMap.autoUpdate = y, i.setRenderTarget(p);\r\n    };\r\n    function h() {\r\n      return `void main()\t{\r\n\r\n\tgl_Position = vec4( position, 1.0 );\r\n\r\n}\r\n`;\r\n    }\r\n    function x() {\r\n      return `uniform sampler2D passThruTexture;\r\n\r\nvoid main() {\r\n\r\n\tvec2 uv = gl_FragCoord.xy / resolution.xy;\r\n\r\n\tgl_FragColor = texture2D( passThruTexture, uv );\r\n\r\n}\r\n`;\r\n    }\r\n  }\r\n}\r\nconst tt = (\r\n  /*glsl*/\r\n  `\r\n  #include <common>\r\n  uniform sampler2D instructionsTexture;\r\n\r\n  uniform sampler2D spritesheetData;\r\n  uniform vec2 dataSize;\r\n  uniform float fps;\r\n  uniform float deltaTime;\r\n\r\n  // read spritesheet metadata\r\n  vec4 readData(float col, float row, sampler2D tex) {\r\n    float wStep = 1.f / dataSize.x;\r\n    float wHalfStep = wStep * 0.5f;\r\n    float hStep = 1.f / dataSize.y;\r\n    float hHalfStep = 1.f / dataSize.y * 0.5f;\r\n    return texture2D(spritesheetData, vec2(col * wStep + wHalfStep, row * hStep + hHalfStep));\r\n  }\r\n\r\n\r\n\r\n  void main()\t{\r\n\r\n    // OUTPUT FROM THIS SHADER\r\n    // progressValue.r - picked animation frame\r\n    // progressValue.g - previous progress state (for pause, reverse & pingpong consistency)\r\n    // progressValue.b - not used yet\r\n    // progressValue.a - previous animationID\r\n\r\n    vec2 cellSize = 1.0 / resolution.xy;\r\n    vec2 uv = gl_FragCoord.xy * cellSize;\r\n\r\n\r\n    vec4 progressValue = texture2D( progress, uv );\r\n\r\n    vec4 instructions = texture2D( instructionsTexture, uv);\r\n\r\n    // FREEZE FRAME - return to save calculations?\r\n    if(instructions.a >=10.){\r\n      progressValue.r = instructions.a - 10.;\r\n      progressValue.a = instructions.x;\r\n      progressValue.g = progressValue.g;\r\n      gl_FragColor = progressValue;\r\n      return;\r\n    }\r\n\r\n\r\n    progressValue.b = 0.;\r\n\r\n    // todo shouldn't be rounding here, pick\r\n    float animationId = round(instructions.x);\r\n\r\n    float offset = instructions.g;\r\n\r\n    float animLength = readData(animationId, 1.f, spritesheetData).r;\r\n    float totalTime = animLength / fps;\r\n\r\n    // new delta is % of animation\r\n    float newProgress = deltaTime / totalTime;\r\n    // add new delta to saved progress\r\n    float frameTimedId = mod(progressValue.g + newProgress, 1.);\r\n    // frameTimedId = 0.;\r\n    // float frameTimedId = progressValue.g;\r\n    // save for use in next frame\r\n\r\n\r\n\r\n    float playMode = mod(instructions.b, 10.);\r\n\r\n    // forward\r\n    if(playMode == 0.){\r\n      frameTimedId = progressValue.g + newProgress;\r\n    }\r\n    // reverse\r\n    if(playMode == 1.){\r\n      frameTimedId = progressValue.g - newProgress;\r\n    }\r\n    // 2 - pause - do nothing\r\n    if(playMode == 2.){\r\n      frameTimedId = progressValue.g;\r\n    }\r\n\r\n    // //todo pingpong\r\n    // if(playMode == 3.){\r\n    // }\r\n\r\n    // loop (play once over 10.)\r\n    if(instructions.b < 10.){\r\n      frameTimedId = mod(frameTimedId, 1.);\r\n    }\r\n\r\n    // todo This could be optional and user would reset manually,\r\n    // todo allowing for consistent movement across multiple animations\r\n    // todo for example - running steps being syncec\r\n    // start anim from beginning if animationID changes\r\n    if(progressValue.a != instructions.x){\r\n      frameTimedId = 0.;\r\n    }\r\n\r\n    float frameId = floor(animLength * frameTimedId);\r\n    float spritesheetFrameId = readData(frameId, 2.f + animationId, spritesheetData).r;\r\n\r\n\r\n\r\n    // Picked sprite frame that goes to material\r\n    progressValue.r = spritesheetFrameId;\r\n\r\n    progressValue.a = instructions.x;\r\n    progressValue.g = frameTimedId;\r\n\r\n    gl_FragColor = progressValue;\r\n  }\r\n`\r\n), nt = (t = 512) => {\r\n  const n = new Float32Array(t ** 2 * 4);\r\n  for (let i = 0; i < t ** 2 * 4; i++)\r\n    n[i] = 0;\r\n  const e = new Q(\r\n    n,\r\n    t,\r\n    t,\r\n    L,\r\n    C\r\n  );\r\n  return e.minFilter = U, e.magFilter = U, e.wrapS = k, e.wrapT = q, e.needsUpdate = !0, e;\r\n}, it = (t) => {\r\n  if (t <= 0)\r\n    return 1;\r\n  let n = 1;\r\n  for (; n < t; )\r\n    n <<= 1;\r\n  return n;\r\n}, rt = (t, n) => {\r\n  const e = it(Math.sqrt(n)), i = new et(\r\n    e,\r\n    e,\r\n    t\r\n  ), r = i.createTexture(), s = i.addVariable(\r\n    \"progress\",\r\n    tt,\r\n    r\r\n  ), a = nt(e);\r\n  s.material.uniforms.instructionsTexture = {\r\n    value: a\r\n  }, s.material.uniforms.spritesheetData = { value: null }, s.material.uniforms.fps = { value: 0 }, s.material.uniforms.deltaTime = { value: 0 }, s.material.uniforms.dataSize = { value: new $() }, i.setVariableDependencies(s, [s]);\r\n  const l = i.init();\r\n  l !== null && console.error(l);\r\n  let u = !1;\r\n  return {\r\n    gpuCompute: i,\r\n    animationRunner: s,\r\n    progressDataTexture: a,\r\n    utils: {\r\n      updateAnimationAt: (f, c) => {\r\n        const p = f * 4;\r\n        a.image.data[p] = c, u = !0;\r\n      },\r\n      updateOffsetAt: (f, c) => {\r\n        const p = f * 4;\r\n        a.image.data[p + 1] = c, u = !0;\r\n      },\r\n      updatePlaymodeAt: (f, c) => {\r\n        const p = f * 4;\r\n        a.image.data[p + 2] = c, u = !0;\r\n      },\r\n      updateFrameAt: (f, c) => {\r\n        const p = f * 4;\r\n        a.image.data[p + 3] = c + 10, u = !0;\r\n      }\r\n    },\r\n    update: () => {\r\n      u && (a.needsUpdate = !0, u = !1), i.compute();\r\n    }\r\n  };\r\n};\r\nclass st {\r\n  constructor() {\r\n    _(this, \"_previousTime\");\r\n    _(this, \"_currentTime\");\r\n    _(this, \"_startTime\");\r\n    _(this, \"_delta\");\r\n    _(this, \"_elapsed\");\r\n    _(this, \"_timescale\");\r\n    _(this, \"_useFixedDelta\");\r\n    _(this, \"_fixedDelta\");\r\n    _(this, \"_usePageVisibilityAPI\");\r\n    _(this, \"_pageVisibilityHandler\");\r\n    this._previousTime = 0, this._currentTime = 0, this._startTime = B(), this._delta = 0, this._elapsed = 0, this._timescale = 1, this._useFixedDelta = !1, this._fixedDelta = 16.67, this._usePageVisibilityAPI = typeof document < \"u\" && document.hidden !== void 0, this._usePageVisibilityAPI === !0 && (this._pageVisibilityHandler = at.bind(this), document.addEventListener(\r\n      \"visibilitychange\",\r\n      this._pageVisibilityHandler,\r\n      !1\r\n    ));\r\n  }\r\n  disableFixedDelta() {\r\n    return this._useFixedDelta = !1, this;\r\n  }\r\n  dispose() {\r\n    return this._usePageVisibilityAPI === !0 && document.removeEventListener(\r\n      \"visibilitychange\",\r\n      this._pageVisibilityHandler\r\n    ), this;\r\n  }\r\n  enableFixedDelta() {\r\n    return this._useFixedDelta = !0, this;\r\n  }\r\n  getDelta() {\r\n    return this._delta / 1e3;\r\n  }\r\n  getElapsed() {\r\n    return this._elapsed / 1e3;\r\n  }\r\n  getFixedDelta() {\r\n    return this._fixedDelta / 1e3;\r\n  }\r\n  getTimescale() {\r\n    return this._timescale;\r\n  }\r\n  reset() {\r\n    return this._currentTime = B() - this._startTime, this;\r\n  }\r\n  setFixedDelta(n) {\r\n    return this._fixedDelta = n * 1e3, this;\r\n  }\r\n  setTimescale(n) {\r\n    return this._timescale = n, this;\r\n  }\r\n  update() {\r\n    return this._useFixedDelta === !0 ? this._delta = this._fixedDelta : (this._previousTime = this._currentTime, this._currentTime = B() - this._startTime, this._delta = this._currentTime - this._previousTime), this._delta *= this._timescale, this._elapsed += this._delta, this;\r\n  }\r\n}\r\nfunction B() {\r\n  return (typeof performance > \"u\" ? Date : performance).now();\r\n}\r\nfunction at() {\r\n  document.hidden === !1 && this.reset();\r\n}\r\nconst K = {\r\n  FORWARD: 0,\r\n  REVERSE: 1,\r\n  PAUSE: 2,\r\n  PINGPONG: 3\r\n};\r\nclass Kt extends je {\r\n  constructor(e, i, r, s = {\r\n    geometry: \"quad\"\r\n  }) {\r\n    let a;\r\n    s.geometry || (s.geometry = \"quad\"), s.geometry === \"tri\" && (a = qe()), s.geometry === \"quad\" && (a = new he(1, 1)), s.geometry && typeof s.geometry != \"string\" && (a = s.geometry);\r\n    const l = Je(\r\n      e,\r\n      (s == null ? void 0 : s.geometry) === \"tri\"\r\n    );\r\n    super(a, l, i);\r\n    _(this, \"_spriteMaterial\");\r\n    _(this, \"_spritesheet\");\r\n    _(this, \"_animationMap\");\r\n    _(this, \"_fps\", 15);\r\n    _(this, \"_timer\");\r\n    _(this, \"compute\");\r\n    te >= 159 ? (this.instanceMatrix.clearUpdateRanges(), this.instanceMatrix.addUpdateRange(0, i * 16)) : this.instanceMatrix.updateRange.count = i * 16, this.instanceColor && (te >= 159 ? (this.instanceColor.clearUpdateRanges(), this.instanceColor.addUpdateRange(0, i * 3)) : this.instanceColor.updateRange.count = i * 3), this.compute = rt(r, i), this._spriteMaterial = l, s.spritesheet && this.updateSpritesheet(s.spritesheet), this._timer = new st(), this._animationMap = /* @__PURE__ */ new Map(), this._spriteMaterial.uniforms.animationData.value = this.compute.gpuCompute.getCurrentRenderTarget(\r\n      this.compute.animationRunner\r\n    ).texture, this._spriteMaterial.uniforms.animationDataSize.value = this.compute.progressDataTexture.image.width;\r\n  }\r\n  updateSpritesheet(e) {\r\n    const { dataTexture: i, dataWidth: r, dataHeight: s, animMap: a } = Qe(e);\r\n    this._spriteMaterial.uniforms.spritesheetData.value = i, this._spriteMaterial.uniforms.dataSize.value.x = r, this._spriteMaterial.uniforms.dataSize.value.y = s, this.compute.animationRunner.material.uniforms.dataSize.value = new $(r, s), this.compute.animationRunner.material.uniforms.spritesheetData.value = i, this._animationMap = a;\r\n  }\r\n  get spritesheet() {\r\n    return this._spritesheet;\r\n  }\r\n  set spritesheet(e) {\r\n    this.updateSpritesheet(e), this._spritesheet = e;\r\n  }\r\n  get animationMap() {\r\n    return this._animationMap;\r\n  }\r\n  get animation() {\r\n    return {\r\n      setAt: (e, i) => {\r\n        this.compute.utils.updateAnimationAt(\r\n          e,\r\n          this._animationMap.get(i) || 0\r\n        );\r\n      }\r\n    };\r\n  }\r\n  get frame() {\r\n    return {\r\n      setAt: (e, i, r) => {\r\n        var a;\r\n        let s = i;\r\n        r && (s = (a = this.spritesheet) == null ? void 0 : a.animations[r][i][0]), this.compute.utils.updateFrameAt(e, s);\r\n      },\r\n      unsetAt: (e) => {\r\n        this.compute.utils.updateFrameAt(e, -10);\r\n      },\r\n      unsetAll: () => {\r\n        for (let e = 0; e < this.count; e++)\r\n          this.compute.utils.updateFrameAt(e, -10);\r\n      }\r\n    };\r\n  }\r\n  get playmode() {\r\n    return {\r\n      setAt: (e, i) => {\r\n        this.compute.utils.updatePlaymodeAt(e, K[i]);\r\n      },\r\n      setAll: (e) => {\r\n        for (let i = 0; i < this.count; i++) {\r\n          const r = this.compute.progressDataTexture.image.data[i * 4 + 2] >= 10 ? 10 : 0;\r\n          this.compute.utils.updatePlaymodeAt(i, r + K[e]);\r\n        }\r\n      }\r\n    };\r\n  }\r\n  get billboarding() {\r\n    return {\r\n      setAt: (e, i) => {\r\n        this.setUniformAt(\"billboarding\", e, i ? 1 : 0);\r\n      },\r\n      setAll: (e) => {\r\n        this._spriteMaterial.uniforms.billboarding.value = e ? 1 : 0;\r\n      },\r\n      unsetAll: () => {\r\n        this.unsetUniform(\"billboarding\");\r\n      }\r\n    };\r\n  }\r\n  get offset() {\r\n    return {\r\n      setAt: (e, i) => {\r\n        this.compute.utils.updateOffsetAt(e, i);\r\n      },\r\n      randomizeAll: (e = 1) => {\r\n        for (let i = 0; i < this.count; i++)\r\n          this.compute.utils.updateOffsetAt(i, Math.random() * e);\r\n      }\r\n    };\r\n  }\r\n  get loop() {\r\n    return {\r\n      setAt: (e, i) => {\r\n        const r = this.compute.progressDataTexture.image.data[e * 4 + 2] % 10;\r\n        this.compute.utils.updatePlaymodeAt(\r\n          e,\r\n          r + (i ? 0 : 10)\r\n        );\r\n      },\r\n      setAll: (e) => {\r\n        for (let i = 0; i < this.count; i++) {\r\n          const r = this.compute.progressDataTexture.image.data[i * 4 + 2] % 10;\r\n          this.compute.utils.updatePlaymodeAt(i, r + (e ? 0 : 10));\r\n        }\r\n      }\r\n    };\r\n  }\r\n  get flipX() {\r\n    return {\r\n      setAt: (e, i) => {\r\n        this.setUniformAt(\"flipX\", e, i ? 1 : 0);\r\n      },\r\n      setGlobal: (e) => {\r\n        this._spriteMaterial.uniforms.flipX.value = e ? 1 : 0;\r\n      },\r\n      unsetAll: () => {\r\n        this.unsetUniform(\"flipX\");\r\n      }\r\n    };\r\n  }\r\n  get flipY() {\r\n    return {\r\n      setAt: (e, i) => {\r\n        this.setUniformAt(\"flipY\", e, i ? 1 : 0);\r\n      },\r\n      setGlobal: (e) => {\r\n        this._spriteMaterial.uniforms.flipY.value = e ? 1 : 0;\r\n      },\r\n      unsetAll: () => {\r\n        this.unsetUniform(\"flipY\");\r\n      }\r\n    };\r\n  }\r\n  play(e, i = !0, r = \"FORWARD\") {\r\n    return {\r\n      at: (s) => {\r\n        this.compute.utils.updateAnimationAt(\r\n          s,\r\n          this._animationMap.get(e) || 0\r\n        ), this.compute.utils.updatePlaymodeAt(\r\n          s,\r\n          K[r] + (i ? 0 : 10)\r\n        );\r\n      }\r\n    };\r\n  }\r\n  /** HSV shift tinting */\r\n  get hueShift() {\r\n    const e = new fe();\r\n    return {\r\n      // TODO - per instance tinting doesnt work - artifacts\r\n      // setAt: (\r\n      //   instanceId: number,\r\n      //   tint?: { h: number; s: number; v: number }\r\n      // ) => {\r\n      //   if (tint) {\r\n      //     tVector.set(tint.h, tint.s, tint.v, 1);\r\n      //   } else {\r\n      //     tVector.setW(0);\r\n      //   }\r\n      //   this.setUniformAt(\"tint\", instanceId, tVector);\r\n      // },\r\n      setGlobal: (i) => {\r\n        i ? e.set(i.h, i.s, i.v, 1) : e.setW(0), this._spriteMaterial.uniforms.tint.value = e;\r\n      }\r\n      // unsetAll: () => {\r\n      //   this.unsetUniform(\"tint\");\r\n      // },\r\n    };\r\n  }\r\n  get fps() {\r\n    return this._fps;\r\n  }\r\n  set fps(e) {\r\n    this._fps = e, this.compute.animationRunner.material.uniforms.fps.value = e;\r\n  }\r\n  update() {\r\n    this._timer.update();\r\n    const e = this._timer.getDelta();\r\n    this.compute.animationRunner.material.uniforms.deltaTime.value = e, this.compute.update();\r\n  }\r\n}\r\nfunction ot(t) {\r\n  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, \"default\") ? t.default : t;\r\n}\r\nvar ee = { exports: {} };\r\nee.exports = G;\r\nee.exports.default = G;\r\nfunction G(t, n, e) {\r\n  e = e || 2;\r\n  var i = n && n.length, r = i ? n[0] * e : t.length, s = de(t, 0, r, e, !0), a = [];\r\n  if (!s || s.next === s.prev)\r\n    return a;\r\n  var l, u, o, m, g, h, x;\r\n  if (i && (s = mt(t, n, s, e)), t.length > 80 * e) {\r\n    l = o = t[0], u = m = t[1];\r\n    for (var f = e; f < r; f += e)\r\n      g = t[f], h = t[f + 1], g < l && (l = g), h < u && (u = h), g > o && (o = g), h > m && (m = h);\r\n    x = Math.max(o - l, m - u), x = x !== 0 ? 32767 / x : 0;\r\n  }\r\n  return I(s, a, e, l, u, x, 0), a;\r\n}\r\nfunction de(t, n, e, i, r) {\r\n  var s, a;\r\n  if (r === X(t, n, e, i) > 0)\r\n    for (s = n; s < e; s += i)\r\n      a = ce(s, t[s], t[s + 1], a);\r\n  else\r\n    for (s = e - i; s >= n; s -= i)\r\n      a = ce(s, t[s], t[s + 1], a);\r\n  return a && Z(a, a.next) && (E(a), a = a.next), a;\r\n}\r\nfunction F(t, n) {\r\n  if (!t)\r\n    return t;\r\n  n || (n = t);\r\n  var e = t, i;\r\n  do\r\n    if (i = !1, !e.steiner && (Z(e, e.next) || M(e.prev, e, e.next) === 0)) {\r\n      if (E(e), e = n = e.prev, e === e.next)\r\n        break;\r\n      i = !0;\r\n    } else\r\n      e = e.next;\r\n  while (i || e !== n);\r\n  return n;\r\n}\r\nfunction I(t, n, e, i, r, s, a) {\r\n  if (t) {\r\n    !a && s && xt(t, i, r, s);\r\n    for (var l = t, u, o; t.prev !== t.next; ) {\r\n      if (u = t.prev, o = t.next, s ? ut(t, i, r, s) : lt(t)) {\r\n        n.push(u.i / e | 0), n.push(t.i / e | 0), n.push(o.i / e | 0), E(t), t = o.next, l = o.next;\r\n        continue;\r\n      }\r\n      if (t = o, t === l) {\r\n        a ? a === 1 ? (t = ct(F(t), n, e), I(t, n, e, i, r, s, 2)) : a === 2 && ft(t, n, e, i, r, s) : I(F(t), n, e, i, r, s, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction lt(t) {\r\n  var n = t.prev, e = t, i = t.next;\r\n  if (M(n, e, i) >= 0)\r\n    return !1;\r\n  for (var r = n.x, s = e.x, a = i.x, l = n.y, u = e.y, o = i.y, m = r < s ? r < a ? r : a : s < a ? s : a, g = l < u ? l < o ? l : o : u < o ? u : o, h = r > s ? r > a ? r : a : s > a ? s : a, x = l > u ? l > o ? l : o : u > o ? u : o, f = i.next; f !== n; ) {\r\n    if (f.x >= m && f.x <= h && f.y >= g && f.y <= x && V(r, l, s, u, a, o, f.x, f.y) && M(f.prev, f, f.next) >= 0)\r\n      return !1;\r\n    f = f.next;\r\n  }\r\n  return !0;\r\n}\r\nfunction ut(t, n, e, i) {\r\n  var r = t.prev, s = t, a = t.next;\r\n  if (M(r, s, a) >= 0)\r\n    return !1;\r\n  for (var l = r.x, u = s.x, o = a.x, m = r.y, g = s.y, h = a.y, x = l < u ? l < o ? l : o : u < o ? u : o, f = m < g ? m < h ? m : h : g < h ? g : h, c = l > u ? l > o ? l : o : u > o ? u : o, p = m > g ? m > h ? m : h : g > h ? g : h, w = W(x, f, n, e, i), y = W(c, p, n, e, i), d = t.prevZ, v = t.nextZ; d && d.z >= w && v && v.z <= y; ) {\r\n    if (d.x >= x && d.x <= c && d.y >= f && d.y <= p && d !== r && d !== a && V(l, m, u, g, o, h, d.x, d.y) && M(d.prev, d, d.next) >= 0 || (d = d.prevZ, v.x >= x && v.x <= c && v.y >= f && v.y <= p && v !== r && v !== a && V(l, m, u, g, o, h, v.x, v.y) && M(v.prev, v, v.next) >= 0))\r\n      return !1;\r\n    v = v.nextZ;\r\n  }\r\n  for (; d && d.z >= w; ) {\r\n    if (d.x >= x && d.x <= c && d.y >= f && d.y <= p && d !== r && d !== a && V(l, m, u, g, o, h, d.x, d.y) && M(d.prev, d, d.next) >= 0)\r\n      return !1;\r\n    d = d.prevZ;\r\n  }\r\n  for (; v && v.z <= y; ) {\r\n    if (v.x >= x && v.x <= c && v.y >= f && v.y <= p && v !== r && v !== a && V(l, m, u, g, o, h, v.x, v.y) && M(v.prev, v, v.next) >= 0)\r\n      return !1;\r\n    v = v.nextZ;\r\n  }\r\n  return !0;\r\n}\r\nfunction ct(t, n, e) {\r\n  var i = t;\r\n  do {\r\n    var r = i.prev, s = i.next.next;\r\n    !Z(r, s) && ge(r, i, i.next, s) && O(r, s) && O(s, r) && (n.push(r.i / e | 0), n.push(i.i / e | 0), n.push(s.i / e | 0), E(i), E(i.next), i = t = s), i = i.next;\r\n  } while (i !== t);\r\n  return F(i);\r\n}\r\nfunction ft(t, n, e, i, r, s) {\r\n  var a = t;\r\n  do {\r\n    for (var l = a.next.next; l !== a.prev; ) {\r\n      if (a.i !== l.i && wt(a, l)) {\r\n        var u = xe(a, l);\r\n        a = F(a, a.next), u = F(u, u.next), I(a, n, e, i, r, s, 0), I(u, n, e, i, r, s, 0);\r\n        return;\r\n      }\r\n      l = l.next;\r\n    }\r\n    a = a.next;\r\n  } while (a !== t);\r\n}\r\nfunction mt(t, n, e, i) {\r\n  var r = [], s, a, l, u, o;\r\n  for (s = 0, a = n.length; s < a; s++)\r\n    l = n[s] * i, u = s < a - 1 ? n[s + 1] * i : t.length, o = de(t, l, u, i, !1), o === o.next && (o.steiner = !0), r.push(yt(o));\r\n  for (r.sort(ht), s = 0; s < r.length; s++)\r\n    e = pt(r[s], e);\r\n  return e;\r\n}\r\nfunction ht(t, n) {\r\n  return t.x - n.x;\r\n}\r\nfunction pt(t, n) {\r\n  var e = dt(t, n);\r\n  if (!e)\r\n    return n;\r\n  var i = xe(e, t);\r\n  return F(i, i.next), F(e, e.next);\r\n}\r\nfunction dt(t, n) {\r\n  var e = n, i = t.x, r = t.y, s = -1 / 0, a;\r\n  do {\r\n    if (r <= e.y && r >= e.next.y && e.next.y !== e.y) {\r\n      var l = e.x + (r - e.y) * (e.next.x - e.x) / (e.next.y - e.y);\r\n      if (l <= i && l > s && (s = l, a = e.x < e.next.x ? e : e.next, l === i))\r\n        return a;\r\n    }\r\n    e = e.next;\r\n  } while (e !== n);\r\n  if (!a)\r\n    return null;\r\n  var u = a, o = a.x, m = a.y, g = 1 / 0, h;\r\n  e = a;\r\n  do\r\n    i >= e.x && e.x >= o && i !== e.x && V(r < m ? i : s, r, o, m, r < m ? s : i, r, e.x, e.y) && (h = Math.abs(r - e.y) / (i - e.x), O(e, t) && (h < g || h === g && (e.x > a.x || e.x === a.x && gt(a, e))) && (a = e, g = h)), e = e.next;\r\n  while (e !== u);\r\n  return a;\r\n}\r\nfunction gt(t, n) {\r\n  return M(t.prev, t, n.prev) < 0 && M(n.next, t, t.next) < 0;\r\n}\r\nfunction xt(t, n, e, i) {\r\n  var r = t;\r\n  do\r\n    r.z === 0 && (r.z = W(r.x, r.y, n, e, i)), r.prevZ = r.prev, r.nextZ = r.next, r = r.next;\r\n  while (r !== t);\r\n  r.prevZ.nextZ = null, r.prevZ = null, vt(r);\r\n}\r\nfunction vt(t) {\r\n  var n, e, i, r, s, a, l, u, o = 1;\r\n  do {\r\n    for (e = t, t = null, s = null, a = 0; e; ) {\r\n      for (a++, i = e, l = 0, n = 0; n < o && (l++, i = i.nextZ, !!i); n++)\r\n        ;\r\n      for (u = o; l > 0 || u > 0 && i; )\r\n        l !== 0 && (u === 0 || !i || e.z <= i.z) ? (r = e, e = e.nextZ, l--) : (r = i, i = i.nextZ, u--), s ? s.nextZ = r : t = r, r.prevZ = s, s = r;\r\n      e = i;\r\n    }\r\n    s.nextZ = null, o *= 2;\r\n  } while (a > 1);\r\n  return t;\r\n}\r\nfunction W(t, n, e, i, r) {\r\n  return t = (t - e) * r | 0, n = (n - i) * r | 0, t = (t | t << 8) & 16711935, t = (t | t << 4) & 252645135, t = (t | t << 2) & 858993459, t = (t | t << 1) & 1431655765, n = (n | n << 8) & 16711935, n = (n | n << 4) & 252645135, n = (n | n << 2) & 858993459, n = (n | n << 1) & 1431655765, t | n << 1;\r\n}\r\nfunction yt(t) {\r\n  var n = t, e = t;\r\n  do\r\n    (n.x < e.x || n.x === e.x && n.y < e.y) && (e = n), n = n.next;\r\n  while (n !== t);\r\n  return e;\r\n}\r\nfunction V(t, n, e, i, r, s, a, l) {\r\n  return (r - a) * (n - l) >= (t - a) * (s - l) && (t - a) * (i - l) >= (e - a) * (n - l) && (e - a) * (s - l) >= (r - a) * (i - l);\r\n}\r\nfunction wt(t, n) {\r\n  return t.next.i !== n.i && t.prev.i !== n.i && !_t(t, n) && // dones't intersect other edges\r\n  (O(t, n) && O(n, t) && Mt(t, n) && // locally visible\r\n  (M(t.prev, t, n.prev) || M(t, n.prev, n)) || // does not create opposite-facing sectors\r\n  Z(t, n) && M(t.prev, t, t.next) > 0 && M(n.prev, n, n.next) > 0);\r\n}\r\nfunction M(t, n, e) {\r\n  return (n.y - t.y) * (e.x - n.x) - (n.x - t.x) * (e.y - n.y);\r\n}\r\nfunction Z(t, n) {\r\n  return t.x === n.x && t.y === n.y;\r\n}\r\nfunction ge(t, n, e, i) {\r\n  var r = H(M(t, n, e)), s = H(M(t, n, i)), a = H(M(e, i, t)), l = H(M(e, i, n));\r\n  return !!(r !== s && a !== l || r === 0 && z(t, e, n) || s === 0 && z(t, i, n) || a === 0 && z(e, t, i) || l === 0 && z(e, n, i));\r\n}\r\nfunction z(t, n, e) {\r\n  return n.x <= Math.max(t.x, e.x) && n.x >= Math.min(t.x, e.x) && n.y <= Math.max(t.y, e.y) && n.y >= Math.min(t.y, e.y);\r\n}\r\nfunction H(t) {\r\n  return t > 0 ? 1 : t < 0 ? -1 : 0;\r\n}\r\nfunction _t(t, n) {\r\n  var e = t;\r\n  do {\r\n    if (e.i !== t.i && e.next.i !== t.i && e.i !== n.i && e.next.i !== n.i && ge(e, e.next, t, n))\r\n      return !0;\r\n    e = e.next;\r\n  } while (e !== t);\r\n  return !1;\r\n}\r\nfunction O(t, n) {\r\n  return M(t.prev, t, t.next) < 0 ? M(t, n, t.next) >= 0 && M(t, t.prev, n) >= 0 : M(t, n, t.prev) < 0 || M(t, t.next, n) < 0;\r\n}\r\nfunction Mt(t, n) {\r\n  var e = t, i = !1, r = (t.x + n.x) / 2, s = (t.y + n.y) / 2;\r\n  do\r\n    e.y > s != e.next.y > s && e.next.y !== e.y && r < (e.next.x - e.x) * (s - e.y) / (e.next.y - e.y) + e.x && (i = !i), e = e.next;\r\n  while (e !== t);\r\n  return i;\r\n}\r\nfunction xe(t, n) {\r\n  var e = new Y(t.i, t.x, t.y), i = new Y(n.i, n.x, n.y), r = t.next, s = n.prev;\r\n  return t.next = n, n.prev = t, e.next = r, r.prev = e, i.next = e, e.prev = i, s.next = i, i.prev = s, i;\r\n}\r\nfunction ce(t, n, e, i) {\r\n  var r = new Y(t, n, e);\r\n  return i ? (r.next = i.next, r.prev = i, i.next.prev = r, i.next = r) : (r.prev = r, r.next = r), r;\r\n}\r\nfunction E(t) {\r\n  t.next.prev = t.prev, t.prev.next = t.next, t.prevZ && (t.prevZ.nextZ = t.nextZ), t.nextZ && (t.nextZ.prevZ = t.prevZ);\r\n}\r\nfunction Y(t, n, e) {\r\n  this.i = t, this.x = n, this.y = e, this.prev = null, this.next = null, this.z = 0, this.prevZ = null, this.nextZ = null, this.steiner = !1;\r\n}\r\nG.deviation = function(t, n, e, i) {\r\n  var r = n && n.length, s = r ? n[0] * e : t.length, a = Math.abs(X(t, 0, s, e));\r\n  if (r)\r\n    for (var l = 0, u = n.length; l < u; l++) {\r\n      var o = n[l] * e, m = l < u - 1 ? n[l + 1] * e : t.length;\r\n      a -= Math.abs(X(t, o, m, e));\r\n    }\r\n  var g = 0;\r\n  for (l = 0; l < i.length; l += 3) {\r\n    var h = i[l] * e, x = i[l + 1] * e, f = i[l + 2] * e;\r\n    g += Math.abs(\r\n      (t[h] - t[f]) * (t[x + 1] - t[h + 1]) - (t[h] - t[x]) * (t[f + 1] - t[h + 1])\r\n    );\r\n  }\r\n  return a === 0 && g === 0 ? 0 : Math.abs((g - a) / a);\r\n};\r\nfunction X(t, n, e, i) {\r\n  for (var r = 0, s = n, a = e - i; s < e; s += i)\r\n    r += (t[a] - t[s]) * (t[s + 1] + t[a + 1]), a = s;\r\n  return r;\r\n}\r\nG.flatten = function(t) {\r\n  for (var n = t[0][0].length, e = { vertices: [], holes: [], dimensions: n }, i = 0, r = 0; r < t.length; r++) {\r\n    for (var s = 0; s < t[r].length; s++)\r\n      for (var a = 0; a < n; a++)\r\n        e.vertices.push(t[r][s][a]);\r\n    r > 0 && (i += t[r - 1].length, e.holes.push(i));\r\n  }\r\n  return e;\r\n};\r\nvar Tt = ee.exports;\r\nconst Dt = /* @__PURE__ */ ot(Tt);\r\nnew $();\r\nnew $();\r\nfunction At(t, n) {\r\n  var e = t % n, i = Math.floor(t / n);\r\n  return [e, i];\r\n}\r\nfunction bt(t, n, e) {\r\n  for (var i = 0, r = 0; i < t.length; i += n, r++)\r\n    if (n === 3) {\r\n      var s = e([t[i], t[i + 1], t[i + 2]], r);\r\n      t.set(s, i);\r\n    } else\r\n      t.set(e([t[i], t[i + 1]], r), i);\r\n  return t;\r\n}\r\nfunction Ut(t, n, e, i) {\r\n  var r = e.x - i.x, s = t.x - n.x, a = e.y - i.y, l = t.y - n.y, u = s * a - l * r;\r\n  if (u == 0)\r\n    throw new Error(\"Number of intersection points is zero or infinity.\");\r\n  var o = t.x * n.y - t.y * n.x, m = e.x * i.y - e.y * i.x, g = (o * r - s * m) / u, h = (o * a - l * m) / u, x = { x: g, y: h };\r\n  return x;\r\n}\r\nfunction St(t) {\r\n  for (var n = 0, e = 0, i = t.length; e < i; e++) {\r\n    var r = t[e].x, s = t[e == t.length - 1 ? 0 : e + 1].y, a = t[e == t.length - 1 ? 0 : e + 1].x, l = t[e].y;\r\n    n += r * s * 0.5, n -= a * l * 0.5;\r\n  }\r\n  return Math.abs(n);\r\n}\r\nfunction Pt([t, n, e]) {\r\n  return Math.abs(\r\n    (t.x * (n.y - e.y) + n.x * (e.y - t.y) + e.x * (t.y - n.y)) / 2\r\n  );\r\n}\r\nfunction Ft(t, n = 8) {\r\n  const e = t.slice();\r\n  let i = 0;\r\n  for (; e.length > n && i < 1e3; ) {\r\n    i++;\r\n    let r = 1 / 0, s = null;\r\n    for (let a = 0; a <= e.length - 1; a++) {\r\n      const l = e.length, u = [a, (a + 1) % l, (a + 2) % l, (a + 3) % l], o = e[u[0]], m = e[u[1]], g = e[u[2]], h = e[u[3]];\r\n      try {\r\n        const x = Ut(o, m, g, h), f = Pt([x, m, g]);\r\n        f < r && (r = f, s = {\r\n          point: x,\r\n          area: f,\r\n          indicesToRemove: [u[1], u[2]]\r\n        });\r\n      } catch (x) {\r\n        console.log(x);\r\n      }\r\n    }\r\n    if (s) {\r\n      const a = s.indicesToRemove[0], l = s.indicesToRemove[1];\r\n      l > a ? (e.splice(l, 1), e.splice(a, 1)) : (e.splice(a, 1), e.splice(l, 1)), e.splice(Math.min(a, l), 0, s.point);\r\n    }\r\n  }\r\n  return e;\r\n}\r\nvar J;\r\n((t) => {\r\n  function n(r) {\r\n    let s = r.slice();\r\n    return s.sort(t.POINT_COMPARATOR), t.makeHullPresorted(s);\r\n  }\r\n  t.makeHull = n;\r\n  function e(r) {\r\n    if (r.length <= 1)\r\n      return r.slice();\r\n    let s = [];\r\n    for (let l = 0; l < r.length; l++) {\r\n      const u = r[l];\r\n      for (; s.length >= 2; ) {\r\n        const o = s[s.length - 1], m = s[s.length - 2];\r\n        if ((o.x - m.x) * (u.y - m.y) >= (o.y - m.y) * (u.x - m.x))\r\n          s.pop();\r\n        else\r\n          break;\r\n      }\r\n      s.push(u);\r\n    }\r\n    s.pop();\r\n    let a = [];\r\n    for (let l = r.length - 1; l >= 0; l--) {\r\n      const u = r[l];\r\n      for (; a.length >= 2; ) {\r\n        const o = a[a.length - 1], m = a[a.length - 2];\r\n        if ((o.x - m.x) * (u.y - m.y) >= (o.y - m.y) * (u.x - m.x))\r\n          a.pop();\r\n        else\r\n          break;\r\n      }\r\n      a.push(u);\r\n    }\r\n    return a.pop(), s.length == 1 && a.length == 1 && s[0].x == a[0].x && s[0].y == a[0].y ? s : s.concat(a);\r\n  }\r\n  t.makeHullPresorted = e;\r\n  function i(r, s) {\r\n    return r.x < s.x ? -1 : r.x > s.x ? 1 : r.y < s.y ? -1 : r.y > s.y ? 1 : 0;\r\n  }\r\n  t.POINT_COMPARATOR = i;\r\n})(J || (J = {}));\r\nfunction Rt(t, n) {\r\n  const e = new Float32Array(t);\r\n  for (let i = 0; i < t; i++)\r\n    e[i * 3] = n[0], e[i * 3 + 1] = n[1], e[i * 3 + 2] = n[2];\r\n  return e;\r\n}\r\nfunction Vt(t, n, e = () => Math.random()) {\r\n  const i = n + 1, r = new Float32Array(t.length / n * i);\r\n  for (let s = 0; s < t.length; s += n) {\r\n    let a = s / n * i;\r\n    r[a] = t[s], r[a + 1] = t[s + 1], n === 2 && (r[a + 2] = e(a)), n === 3 && (r[a + 2] = t[s + 2], r[a + 3] = e(a));\r\n  }\r\n  return r;\r\n}\r\nfunction Ct(t) {\r\n  const n = new Float32Array(t.length * 2);\r\n  for (let e = 0; e < t.length; e++)\r\n    n[e * 2] = t[e].x, n[e * 2 + 1] = t[e].y;\r\n  return n;\r\n}\r\nfunction It(t, n, e) {\r\n  const i = [], r = t % (n * 4) / 4, s = Math.floor(t / (n * 4)), a = s - 1, l = s + 1, u = r - 1, o = r + 1;\r\n  return a >= 0 ? i.push(a * n + r) : i.push(null), l < e ? i.push(l * n + r) : i.push(null), u >= 0 ? i.push(s * n + u) : i.push(null), o < n ? i.push(s * n + o) : i.push(null), i;\r\n}\r\nconst Ot = (t) => (...n) => n[3] / 255 > 0, Et = {\r\n  threshold: 0.01,\r\n  slices: [1, 1],\r\n  indices: [0, 0],\r\n  scale: 1,\r\n  filter: Ot\r\n};\r\nclass $t {\r\n  constructor(n, e, i) {\r\n    _(this, \"points\", []);\r\n    _(this, \"data\", {\r\n      areaReduction: 0\r\n    });\r\n    _(this, \"debug\", !0);\r\n    _(this, \"index\");\r\n    _(this, \"positions\");\r\n    _(this, \"uv\");\r\n    _(this, \"defaultSettings\", Et);\r\n    _(this, \"settings\");\r\n    this.vertices = i, this.settings = { ...this.defaultSettings, ...e };\r\n    const { slices: r } = this.settings, s = zt(\"bvc-image\", n.width, n.height);\r\n    this.points = this.getPoints(n, s);\r\n    let a = J.makeHull(this.points);\r\n    const l = Ft(a, i), u = l.map((h) => {\r\n      let x = Ht(h, [n.width, n.height], r);\r\n      return x.y = -1 * x.y, x;\r\n    }), { scale: o } = this.settings;\r\n    this.data.areaReduction = 1 - St(l) / (n.width / r[0] * (n.height / r[1])) * o;\r\n    const m = Ct(u), g = Dt(m, null, 2);\r\n    this.positions = Vt(m, 2, () => 0), this.index = Uint32Array.from(g), this.uv = bt(m.slice(0), 2, (h) => {\r\n      let x = h[0] + 0.5;\r\n      x = x / this.settings.slices[0] + 1 / this.settings.slices[0] * this.settings.indices[0];\r\n      let f = h[1] + 0.5;\r\n      return f = f / this.settings.slices[1] + 1 - 1 / this.settings.slices[1] * (this.settings.indices[1] + 1), [x, f];\r\n    });\r\n  }\r\n  getImageData(n, e) {\r\n    const i = e.getContext(\"2d\");\r\n    i.drawImage(n, 0, 0);\r\n    const [r, s] = this.settings.indices, [a, l] = this.settings.slices, u = e.width / a, o = e.height / l;\r\n    return i.getImageData(u * r, o * s, u, o);\r\n  }\r\n  /**\r\n   * Iterates over the image and returns an array of points that are over the alpha threshold.\r\n   * It reduces the number of returned points by excluding points that are surrounded by solid pixels.\r\n   *\r\n   * @param img An image element with the image already loaded\r\n   * @param canvas A canvas element to draw the image on in order to get the color values\r\n   * @returns\r\n   */\r\n  getPoints(n, e) {\r\n    const i = this.getImageData(n, e), r = i.data, s = [], a = this.settings.filter(this.settings.threshold), l = (u) => u !== null && a(\r\n      r[u * 4],\r\n      r[u * 4 + 1],\r\n      r[u * 4 + 2],\r\n      r[u * 4 + 3]\r\n    );\r\n    for (let u = 0; u < r.length; u += 4)\r\n      if (a(\r\n        r[u + 0],\r\n        r[u + 1],\r\n        r[u + 2],\r\n        r[u + 3]\r\n      )) {\r\n        if (It(u, e.width, e.height).every(l))\r\n          continue;\r\n        const [g, h] = At(u / 4, i.width);\r\n        s.push({ x: g, y: h });\r\n      }\r\n    return s;\r\n  }\r\n}\r\nconst zt = (t = \"debug-canvas\", n, e) => {\r\n  const i = document.querySelector(`#${t}`) || document.createElement(\"canvas\");\r\n  return i.id = t, i.width = n, i.height = e, i.id = t, i;\r\n}, Ht = (t, n, e) => ({\r\n  x: (t.x - n[0] / (2 * e[0])) / (n[0] / e[0]),\r\n  y: (t.y - n[1] / (2 * e[1])) / (n[1] / e[1])\r\n}), Lt = {\r\n  threshold: 0.01,\r\n  slices: [1, 1],\r\n  indices: [1, 1]\r\n};\r\nclass kt extends me {\r\n  constructor(e, i = 8, r = 0.01, s = [1, 1], a = [0, 0]) {\r\n    super();\r\n    _(this, \"image\");\r\n    _(this, \"vertices\", 8);\r\n    _(this, \"settings\", Lt);\r\n    this.vertices = i, this.settings = {\r\n      ...this.settings,\r\n      threshold: r,\r\n      slices: s,\r\n      indices: a\r\n    }, this.image = \"image\" in e ? e.image : e, this.build();\r\n  }\r\n  build() {\r\n    const e = new $t(\r\n      this.image,\r\n      this.settings,\r\n      this.vertices\r\n    ), i = e.positions.length, r = new R(e.index, 1), s = new R(e.positions, 3), a = new R(Rt(i, [0, 0, 1]), 3), l = new R(e.uv, 2);\r\n    this.userData.reduction = e.data.areaReduction, this.setIndex(r), this.setAttribute(\"position\", s), this.setAttribute(\"normal\", a), this.setAttribute(\"uv\", l);\r\n  }\r\n}\r\nconst jt = () => new Nt();\r\nclass Nt {\r\n  constructor() {\r\n    _(this, \"animations\");\r\n    this.animations = [];\r\n  }\r\n  add(n, e, i) {\r\n    const r = {\r\n      name: \"\",\r\n      imageUrl: n\r\n    };\r\n    return Array.isArray(i) ? r.multiAnimations = i : r.name = i, e.type == \"rowColumn\" && (r.auto = {\r\n      type: \"rowColumn\",\r\n      width: e.width,\r\n      height: e.height\r\n    }), e.type == \"frameSize\" && (r.auto = {\r\n      type: \"frameSize\",\r\n      width: e.width,\r\n      height: e.height\r\n    }), this.animations.push(r), this;\r\n  }\r\n  async build(n = {}) {\r\n    const e = new Oe(), i = {\r\n      frames: [],\r\n      animations: {},\r\n      sheetSize: [0, 0],\r\n      animationLengths: []\r\n    };\r\n    let r = new Ee();\r\n    const s = [];\r\n    let a = 0, l = 0;\r\n    for (const c of this.animations) {\r\n      const p = await e.loadAsync(c.imageUrl), w = p.width, y = p.height;\r\n      a = Math.max(a, w), l += y, s.push({\r\n        img: p,\r\n        w,\r\n        h: y\r\n      });\r\n    }\r\n    const u = document.createElement(\"canvas\");\r\n    u.width = a, u.height = l;\r\n    const o = u.getContext(\"2d\");\r\n    let m = 0;\r\n    for (const { img: c, h: p } of s)\r\n      o == null || o.drawImage(c, 0, m, c.width, c.height), m += p;\r\n    r = new ne(u), r.needsUpdate = !0;\r\n    let g = 0, h = 0, x = 0, f = 64;\r\n    for (const c of this.animations) {\r\n      const p = s[g];\r\n      let w = 0;\r\n      if (c.auto) {\r\n        let y = 0, d = 0;\r\n        c.auto.type == \"frameSize\" && (d = p.w / c.auto.width, y = p.h / c.auto.height), c.auto.type == \"rowColumn\" && (d = c.auto.width, y = c.auto.height);\r\n        const v = p.w / d, D = p.h / y;\r\n        w = y * d, c.multiAnimations || (i.animations[c.name] = []);\r\n        const S = /* @__PURE__ */ new Map();\r\n        for (let A = 0; A < y; A++) {\r\n          x += D;\r\n          for (let b = 0; b < d; b++) {\r\n            if (i.frames.push([\r\n              p.w / d * b / a,\r\n              1 - x / l,\r\n              v / a,\r\n              D / l\r\n            ]), c.multiAnimations) {\r\n              const ve = A * d + b;\r\n              S.set(ve, h);\r\n            } else\r\n              i.animations[c.name].push([h, 1]);\r\n            h++;\r\n          }\r\n        }\r\n        if (c.multiAnimations)\r\n          for (const A of c.multiAnimations) {\r\n            i.animations[A.name] = [], i.animationLengths.push(\r\n              A.frameRange[1] - A.frameRange[0] + 1\r\n            );\r\n            for (let b = A.frameRange[0]; b <= A.frameRange[1]; b++)\r\n              i.animations[A.name].push([S.get(b), 1]);\r\n          }\r\n        else\r\n          i.animationLengths.push(w);\r\n      }\r\n      g++;\r\n    }\r\n    if (r.matrixAutoUpdate = !1, r.generateMipmaps = !1, r.premultiplyAlpha = !1, r.wrapS = r.wrapT = q, r.magFilter = r.minFilter = U, r.colorSpace = ie, i.sheetSize = [a, l], n.makeSlimGeometry) {\r\n      const c = document.createElement(\"canvas\");\r\n      c.width = f, c.height = f;\r\n      const p = c.getContext(\"2d\"), w = a / f, y = l / f;\r\n      for (let D = 0; D < w; D++)\r\n        for (let S = 0; S < y; S++) {\r\n          const A = D * f, b = S * f;\r\n          p == null || p.drawImage(u, A, b, f, f, 0, 0, f, f);\r\n        }\r\n      const d = new ne(c);\r\n      d.magFilter = r.minFilter = U, d.colorSpace = ie;\r\n      const v = new kt(\r\n        d,\r\n        // an already loaded HTMLImageElement or a ThreeJS texture\r\n        n.slimOptions ? n.slimOptions.vertices : 8,\r\n        n.slimOptions ? n.slimOptions.alphaThreshold : 0\r\n        // alphaThreshold, 0 means only fully transparent pixels will be discarded\r\n      );\r\n      return { spritesheet: i, texture: r, geometry: v };\r\n    }\r\n    return { spritesheet: i, texture: r };\r\n  }\r\n}\r\nexport {\r\n  Kt as InstancedSpriteMesh,\r\n  K as PLAY_MODE,\r\n  jt as createSpritesheet,\r\n  Qe as makeDataTexture,\r\n  Bt as parseAseprite\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
